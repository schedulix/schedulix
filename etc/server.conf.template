#
# $Id: server.conf.template,v 1.10.2.2 2013/04/19 11:05:23 dieter Exp $
#
# The server.conf file is the configuration file for the BICsuite Scheduling Server.
# since this file contains unencrypted password information, it should be stored
# read/(write) only for the user. The values in this template file are reasonable
# for most systems. On very large systems some fine tuning will be necessary.
#

#
# Archive: enable/disable archiving of data when using DbHistory != 0
#          removed data will be copied to ARC_... tables before removal
#          specify column lists (comma seperated column names) if you do not want to archive all columns
#          specify NONE if you don't want a specific table to be archived
#          specify ALL if all columns should be archived, which is also the default if archiving is switched on
#
Archive=false
ArchiveSMEColumns=ALL
ArchiveAuditColumns=ALL
ArchiveDependencyColumns=ALL
ArchiveVariableColumns=ALL
ArchiveExtentsColumns=ALL
ArchiveHierarchyColumns=ALL
ArchiveKillJobColumns=ALL
ArchiveStatsColumns=ALL

#
# AuditFile
# Filename of audit trail file
# If set all commands changing data will be logged in the AuditFile.
# On each startup of the scheduling server, a new file with a sequencial number extension is created.
# AuditTrail=/tmp/auditfile will create files /tmp/audittrail.1 .. /tmp/audittrail.N
# On heavy used systems have a look at the filesize and restart the server to start a new one from time to time and clean up or archive files no longer used.
#
# AuditFile=<full pathname of audir trail file to write>

#
# AuthenticationClass
# The class, derived from de.independit.scheduler.server.util.Authenticator, which is configured
# here is responsible for authentication agains some external system like LDAP, AD or PAM
# If no class is configured or if there is a problem loading the class, only internal authentication
# will take place.
# The provided example is NOT secure and NOT intended for production use
# 
# AuthenticationClass=de.independit.scheduler.server.util.ExampleAuthenticator

#
# CalendarEntries: The maximum number of starttimes stored in the calendar
#
CalendarEntries=250

#
# CalendarHorizon: The default calendar horizon
#
CalendarHorizon=90

#
# If using an TLS/SSL Connection, does the client have to authenticate himself
#
ClientAuthentication=true

#
# CodePage: Which Character Set do we use. See the Java Documentation for more information
#
CodePage=latin1

# CompatibilityLevel: defines the available features
#                     valid values are: ENTERPRISE, PROFESSIONAL, BASIC
#                     default depends on the licensed product
#
CompatibilityLevel=BASIC

#
# DbHistory: Number of minutes to keep in BICsuite repository database
#            If the Archive option is disabled, data of older job executions will get lost !!!
#            Set to 0 if you do not want to remove data of older job executions from the BICsuite repository
#            Set to 1 to remove all data which isn't any longer in server memory
#            Set to 45000 to keep the data for approximately 1 month
#            Set to 540000 to keep data for approximately 1 year
#
DbHistory=0

#
# DbLoaders: Number of DB Loaders
#            The default = min(#processors, 5)
#            Increasing the number of DB Loaders can decrease startup times.
#            Using a larger number than the number of physical processors in the server
#            doesn't seem to speedup things substantially.
#
DbLoaders=2

#
# DbPasswd: The password needed to authenticate the server at the database engine
#
DbPasswd=NOT_SET

#
# DbUrl: The Java connection string needed for creating a session
#        Consult the jdbc documentation for the database engine in use
#
# in case of Ingres, use something like:
# DbUrl=jdbc:ingres://hostname:II7/dbname;
#
# in case of Postgres, use something like:
# DbUrl=jdbc:postgresql:dbname
#
# in case of Mysql or MariaDB (also uses ...mysql... in url), use something like:
# DbUrl=jdbc:mysql://hostname:port/dbname
DbUrl=NOT_SET

#
# DbUser: The username needed to authenticate the server at the database engine
DbUser=NOT_SET

#
# ExportVariables: 
# ExportVariables
#
# GCWakeup: Time between two (server) garbage collections in minutes
GCWakeup=240

#
# History: In Core Job History in minutes. Finished masters are kept in memory
#          at least this long
#
History=14400

#
# HistoryLimit: since the number of jobs to load can be specified, the previously 
#               defined History can be exceeded.
#               The HistoryLimit defines a hard limit. Final jobs elder than this
#               limit won't be loaded, disregarding any counts
#
HistoryLimit=28800

#
# Hostname: Hostname of the SDMSServer
#
Hostname=hostname.domain.de

#
# JdbcDriver: Name of the JDBC-Driver to load
#
# in case of Ingres, use something like:
# JdbcDriver=com.ingres.jdbc.IngresDriver
#
# in case of Postgres, use something like:
# JdbcDriver=org.postgresql.Driver
#
# in case of Mysql, use something like:
# JdbcDriver=com.mysql.jdbc.Driver
#
# in case of MariaDB, use something like:
# JdbcDriver=org.mariadb.jdbc.Driver
JdbcDriver=NOT_SET

#
# Keystore Information (needed for TLS/SSL communication)
#
KeyStore=/home/bicsuite/etc/certs/srvkeystore
KeyStorePassword=VerySecret
#
#
# MinHistoryCount: Minimum number of masters loaded (if present), disregarding the
#                  History. 0 means no minimum
#
MinHistoryCount=0

#
# MaxHistoryCount: Maximum number of masters loaded, even if History is larger
#                  0 means ignore
#
MaxHistoryCount=0

#
# ParameterHandling:  Parameter handling - Parameters can be handled in either of three ways:
# 
#          1. Strict  "GetParameter()" returns an error if the parameter is not
#                     defined in the direct scope of the job.
# 
#          2. Warn    A warning is written to the logfile if a parameter is not
#                      defined in the direct scope of the job.
#                      The parameter is resolved normally.
# 
#          3. Liberal The parameter is just resolved (the default)
#
ParameterHandling=liberal

#
# Port: Portnumber for Listener
#
Port=2506

#
# PriorityDelay: Number of minutes until priority increment (default 30)
#                Aging can be switched of by setting PriorityDelay=0
#
PriorityDelay=1

#
# PriorityLowerBound: The minimum priority number a job can reach by aging
#                     (lower numbers are higher priorities)
#                     Priorities below the PriorityLowerBound can be assigned by 
#                     an administrator.
#
PriorityLowerBound=10

#
# RunMode: production or test
#          RunMode test enables some commands that are used for development purposes
#          These commands are dangerous and can crash the server (deliberately)
#
RunMode=PRODUCTION

#
# ScheduleWakeup: Time until Wakeup of ScheduleThread in seconds
#
ScheduleWakeup=30

#
# ScopeSystemVariables define the variables/parameters which are evaluated
# like System Variables (e.g. JOBID) in the context of the executing scope.
# Note that (scope) system variables are always converted to upper case.
# The names of the variables are comma separated as in the example below.
#     ScopeSystemVariables=a,b,c,  \
#       d,e,f, \
#      g,h
# ScopeSystemVariables=

#
# ServicePort: The service port is a port to which an administrator can connect.
#
ServicePort=2505

#
# SessionTimeout: The number of seconds after which an idle session is disconnected.
#                 The session timeout can be specified at connect time, as well be
#                 altered within the session itself.
#
SessionTimeout=0

#
# SingleServer: true = immediate takeover
#               false = warm standby
#
SingleServer=true

#
#
# SSLport: The port for SSL/TLS Connections
#
#SSLPort=2507

#
# Properties for Single Sign On (on Windows)
#

#
# SSOincludeDomainNames indicates if Domain Names should be part of Group/User Identifiers
# default = false
#
SSOincludeDomainNames=false

#
# SSOautoCreateUsers indicates if AD users should be created automatically
# default = false
#
SSOautoCreateUsers=false

#
# SSOautoCreateGroups indicates if AD groups should be created automatically
# default = false
#
SSOautoCreateGroups=false

#
# SSOuseADGroups indicates if AD groups should be used or not
# default = false
#
SSOuseADGroups=false

#
# SSOserverName is the name of the server (within AD); this is used to filter out groups
#
SSOserverName=DEFAULT

#
# SSObicsuitePrefix is the prefix used for AD groups. Groups called otherwise than <SSObicsuitePrefix>_<SSOserverName>_<groupname>
# are ignored
#
SSObicsuitePrefix=BICSUITE

#
# SSOnameCase defines if names have to be converted to
# UPPER case (= default value; make identifier case insensitive if they adhere to BICsuite naming standards)
# LOWER case
# MIXED case (= don't convert them)
#
SSOnameCase=UPPER

#
# Truststore Information (needed for TLS/SSL communication with client authentication)
#
TrustStore=/home/bicsuite/etc/certs/srvkeystore
TrustStorePassword=VerySecret

#
# SysPasswd: The password of user SYSTEM
#
SysPasswd=G0H0ME

#
# TicketInterval: Maximum time between two renewals of a ticket
# Default = 20. Minimum = 3.
# A standby server will wait 3 TicketIntervals before taking over
#
# TicketInterval=20

#
# TimerHorizon: Time (in years) the TimerThread "looks in the future"
#
TimerHorizon=2

#
# TimerRecalc: Time (in days) the TimerThread recalculates intervals that have
#              "fallen behind the horizon"
#
TimerRecalc=1

#
# TimerSuspendLimit: If for some reason the timer thread can't submit a job at the "official"
#                    scheduled time (e.g. because the server was down), the timer thread will
#                    submit the job as "suspended" if the scheduled time is more than
#                    TimerSuspendLimit minutes ago.
#
TimerSuspendLimit=15

#
# TimerTimeout: Maximum Time (in seconds) a Time Schedule is alowed to calulate the next execution
#               This is to avoid strange time scheduling setups to block the system by searching
#		the next execution time for a very long time
#
TimerTimeout=10

#
# TimerWakeup: The number of seconds between two invocations of the timer thread.
#
TimerWakeup=30

#
# Trace level: Defines the kind of messages written to the server logfile
#              The trace level can be altered at runtime using the command:
#              ALTER SERVER WITH TRACE LEVEL = n
#              Valid trace levels are:
#              0: almost no output. Only Fatal Errors, Errors and Info Messages are logged
#              1: A litte more verbose. Also Warnings are logged
#              2: Messages are logged. This includes all issued commands.
#              3: Debug information is logged. This produces an enormous amount of output
#
#              For most situations, a trace level 1 is OK
#
TraceLevel=1

#
# TriggerHardLimit: The TriggerHardLimit is the maximum number of times the same trigger
#                   can fire within one master run. This variable is ment to prevent endless
#                   loops and can be set to any reasonable number. Since it is internally stored
#                   in a signed integer, the absolute maximum is 2^31 - 1.
#
TriggerHardLimit=100

#
# TriggerSoftLimit: If no retry count is specified (i.e. the retry count == 0), the maximum
#                   number of times the same trigger can fire within one master run is defined
#                   by the TriggerSoftLimit. The value can't exceed the vlue of TriggerHardLimit.
#
TriggerSoftLimit=50

#
# TTWakeup: The number of seconds between two invocations of the Trigger Thread. The trigger
#           thread is responsible for asynchroneous triggers (UNTIL ...).
#
TTWakeup=30

#
# TxRetryCount: Retry Count for problematic Transactions. In some seldom cases a transaction
#               runs into a recoverable error. In that case it is repeated up to TxRetryCount
#               times
#
TxRetryCount=3

#
# UserExportVariables define the variables/parameters which are set in the 
# environment of the executed process. These variables are added to the list
# of variables defined by "ExportVariables". The names of the variables are
# comma separated as in the example below.
#     UserExportVariables=a,b,c, /* comments are permitted */ \
#      /* if you want to continue, just mask the newline */ d,e,f, \
#      g,h /* this was the last one */
# UserExportVariables

#
# UserThreads: Number of concurrent sessions. These include the sessions of jobservers.
#
UserThreads=30

#
# WorkerThreads: Number of Worker Threads used for read only transactions like LIST and SHOW.
#
WorkerThreads=2

#
# End of File
#
