#!/bin/bash
#
### BEGIN INIT INFO
# Provides:          schedulix-examples
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Should-Start:      $network $named $time
# Should-Stop:       $network $named $time
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start and stop the schedulix example jobservers
# Description:       Controls the schedulix example jobservers
### END INIT INFO
#
. /opt/schedulix/etc/SETTINGS
set -e
set -u

if [ -f /lib/lsb/init-functions ]; then
	. /lib/lsb/init-functions
	LOG_WARNING_MSG=log_warning_msg
	LOG_FAILURE_MSG=log_failure_msg
	ECHO_SUCCESS=echo
	ECHO_FAILURE=echo
else
	LOG_WARNING_MSG=echo
	LOG_FAILURE_MSG=echo
	ECHO_SUCCESS=echo
	ECHO_FAILURE=echo
fi


SELF=$(cd $(dirname $0); pwd -P)/$(basename $0)

# Safeguard (relative paths, core dumps..)
cd /
umask 077

case "${1:-''}" in
  'start')
	echo -n "Starting schedulix Enterprise Job Scheduling example jobservers"
	su - schedulix /bin/bash -c ". /opt/schedulix/.bashrc; export DISPLAY=:0; start_example_jobservers.sh" >/dev/null 2>&1
	$ECHO_SUCCESS
	;;

  'stop')
	echo -n "Stopping schedulix Enterprise Job Scheduling example jobservers"
	su - schedulix /bin/bash -c ". /opt/schedulix/.bashrc; stop_example_jobservers.sh" >/dev/null 2>&1
	$ECHO_SUCCESS
	;;

  'restart')
	echo -n "Restarting schedulix Enterprise Job Scheduling example jobservers"
	su - schedulix /bin/bash -c ". /opt/schedulix/.bashrc; stop_example_jobservers.sh" >/dev/null 2>&1
	su - schedulix /bin/bash -c ". /opt/schedulix/.bashrc; export DISPLAY=:0; start_example_jobservers.sh" >/dev/null 2>&1
	$ECHO_SUCCESS
	;;

  'reload'|'force-reload')
  	$LOG_WARNING_MSG "Reloading schedulix example jobservers not supported; use 'restart' instead"
	$ECHO_SUCCESS
	;;

  'status')
  	$LOG_WARNING_MSG "status schedulix example jobservers not yet supported"
  	;;

  *)
	echo "Usage: $SELF start|stop|restart|reload|force-reload|status"
	exit 1
	;;
esac
