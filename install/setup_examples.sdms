begin multicommand

create or alter folder SYSTEM.'EXAMPLES'
with
	group = 'PUBLIC',
	environment = none,
	parameters = (
		'D' = '-d 10',
		'RT' = '-t 10',
		'IGF' = '-I',
		'WT' = '-t 30',
		'N' = '-n 10',
		'S' = ''
	);

create or alter named resource resource.examples with group = public, usage = category;


create or alter folder SYSTEM.'EXAMPLES'.'E0010_SINGLEJOB'
with
	group = 'PUBLIC',
	environment = none,
	parameters = (
		'RT' = ''
	);

create or alter job definition SYSTEM.'EXAMPLES'.'E0010_SINGLEJOB'.'SINGLEJOB'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "?:1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0010_SINGLEJOB'.'SINGLEJOB'
alter parameter = (
		'RT'
			IMPORT default = ''
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0010_SINGLEJOB'
with
	TAG = none, TEXT = 'Singlejob is a simple example which shows how to execute some commandline in the scheduler environment';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0010_SINGLEJOB'.'SINGLEJOB'
with
	TAG = none, TEXT = 'Singlejob is a simple example which shows how to execute some commandline in the scheduler environment';


create or alter folder SYSTEM.'EXAMPLES'.'E0015_PARAMETERS'
with
	group = 'PUBLIC',
	environment = none,
	parameters = (
		'FOLDER_NAME' = 'E0015_PARAMETERS',
		'RT' = '-t 30'
	);

create or alter job definition SYSTEM.'EXAMPLES'.'E0015_PARAMETERS'.'PARAMETERS'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'E0015_SCOPE_PARAMETER',
		'SUBMIT_PARAMETER',
		'FOLDER_NAME',
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME"  "E0015_SCOPE_PARAMETER = $E0015_SCOPE_PARAMETER" "FOLDER_NAME = $FOLDER_NAME" "SUBMIT_PARAMETR = $SUBMIT_PARAMETER" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0015_PARAMETERS'.'PARAMETERS'
alter parameter = (
		'E0015_SCOPE_PARAMETER'
			PARAMETER default = '* not yet defined *'
		EXPORT = NONE,
		'SUBMIT_PARAMETER'
			PARAMETER default = 'SUBMIT_PARAMETER_VALUE'
		EXPORT = NONE,
		'FOLDER_NAME'
			PARAMETER
		EXPORT = NONE,
		'RT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0015_PARAMETERS'
with
	TAG = none, TEXT = 'This example shows some methods of parameterizing jobs';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0015_PARAMETERS'.'PARAMETERS'
with
	TAG = none, TEXT = 'This example shows some methods of parameterizing jobs';


create or alter folder SYSTEM.'EXAMPLES'.'E0020_SIMPLEBATCH'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0020_SIMPLEBATCH'.'END'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0020_SIMPLEBATCH'.'SIMPLEBATCH'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0020_SIMPLEBATCH'.'START'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0020_SIMPLEBATCH'.'END'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0020_SIMPLEBATCH'.'START'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0020_SIMPLEBATCH'.'SIMPLEBATCH'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0020_SIMPLEBATCH'.'START'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0020_SIMPLEBATCH'.'END'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0020_SIMPLEBATCH'.'END'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0020_SIMPLEBATCH'.'START'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0020_SIMPLEBATCH'
with
	TAG = none, TEXT = 'This example shows a simple batch, containing two jobs called "START" and "END".
The latter job depends on the successful execution of the former one.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0020_SIMPLEBATCH'.'SIMPLEBATCH'
with
	TAG = none, TEXT = 'This example shows a simple batch, containing two jobs called "START" and "END".
The latter job depends on the successful execution of the former one.';


create or alter folder SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter folder SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter folder SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'BATCH_HIERARCHY'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'.'LOAD'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'.'LOAD_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'.'LOAD_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'.'LOAD_3'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'.'REPORT'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'.'REPORT_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'.'REPORT_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'.'REPORT_3'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'.'REPORT'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'.'LOAD'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'BATCH_HIERARCHY'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'.'LOAD'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'.'REPORT'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'.'LOAD'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'.'LOAD_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'.'LOAD_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'.'LOAD_3'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'.'REPORT'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'.'REPORT_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'.'REPORT_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'.'REPORT_3'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'.'LOAD_1'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'.'LOAD_2'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'LOAD'.'LOAD_3'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'.'REPORT_1'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'.'REPORT_2'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'REPORT'.'REPORT_3'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'
with
	TAG = none, TEXT = 'This examples demonstrates how to simplify dependencies using batch hierarchies.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0025_BATCH_HIERARCHY'.'BATCH_HIERARCHY'
with
	TAG = none, TEXT = 'This examples demonstrates how to simplify dependencies using batch hierarchies.';


create or alter exit state definition 'BRANCH_A';

create or alter exit state definition 'BRANCH_B';

create or alter exit state definition 'BRANCH_C';

create or alter exit state mapping 'BRANCH_ABC'
with map = (
		'FAILURE',
	0,	'BRANCH_A',
	1,	'BRANCH_B',
	2,	'BRANCH_C',
	3,	'FAILURE'
);

create or alter exit state profile 'BRANCH_ABC'
with
	default mapping = 'BRANCH_ABC',
	states = (
		'FAILURE' restartable,
		'BRANCH_A' final,
		'BRANCH_B' final,
		'BRANCH_C' final
	);
create or alter folder SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'
with
	group = 'PUBLIC',
	environment = none,
	parameters = (
		'RT' = '-t 30'
	);

create or alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_A'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_B'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_C'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'CONDITIONAL'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'END_PROCESSING'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = any,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'SELECT_BRANCH'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'BRANCH_ABC',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh CHOOSE -c "0=A:1=B:2=C:3=FAILURE" -e "0-2" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_A'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'SELECT_BRANCH'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'BRANCH_A'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_B'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'SELECT_BRANCH'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'BRANCH_B'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_C'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'SELECT_BRANCH'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'BRANCH_C'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'END_PROCESSING'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_A'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		),
	SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_B'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		),
	SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_C'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'CONDITIONAL'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'SELECT_BRANCH'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_A'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_B'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_C'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'END_PROCESSING'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_A'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_B'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'BRANCH_C'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'END_PROCESSING'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'SELECT_BRANCH'
alter parameter = (
		'RT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'
with
	TAG = none, TEXT = 'This example demonstrates how to implement conditional execution of jobs and batches (also called branching).';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0030_CONDITIONAL'.'CONDITIONAL'
with
	TAG = none, TEXT = 'This example demonstrates how to implement conditional execution of jobs and batches (also called branching).';

create or alter folder SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_3'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_COMPLETED'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'MILESTONE_BATCH'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'REPORT_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'REPORT_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'REPORT_3'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_COMPLETED'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		),
	SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_2'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		),
	SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_3'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'REPORT_1'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_COMPLETED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'REPORT_2'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_COMPLETED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'REPORT_3'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_COMPLETED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'MILESTONE_BATCH'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_3'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_COMPLETED'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'REPORT_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'REPORT_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'REPORT_3'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_1'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_2'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'LOAD_3'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'REPORT_1'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'REPORT_2'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'REPORT_3'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'
with
	TAG = none, TEXT = 'This example demonstrates how to use batch objects as milestones to control the job flow.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0040_MILESTONE_BATCH'.'MILESTONE_BATCH'
with
	TAG = none, TEXT = 'This example demonstrates how to use batch objects as milestones to control the job flow.';

create or alter folder SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'COMPLEX_CONDITION'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_A'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh LOAD_A -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_B'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh LOAD_B -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_C'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh LOAD_C -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_COMPLETED'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = any,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'MAIN_LOAD'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'REPORT'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'SELECT_LOAD'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'BRANCH_ABC',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh CHOOSE  -c "0=A:1=B:2=C:3=FAILURE"  -e "0-2" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_A'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'SELECT_LOAD'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'BRANCH_A'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_B'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'SELECT_LOAD'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'BRANCH_B'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_C'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'SELECT_LOAD'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'BRANCH_C'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_COMPLETED'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_C'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		),
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_B'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		),
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_A'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'REPORT'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_COMPLETED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		),
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'MAIN_LOAD'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'COMPLEX_CONDITION'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'SELECT_LOAD'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_C'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_COMPLETED'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'MAIN_LOAD'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'REPORT'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_B'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_A'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_A'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_B'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'LOAD_C'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'MAIN_LOAD'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'REPORT'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'SELECT_LOAD'
alter parameter = (
		'RT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'
with
	TAG = none, TEXT = 'In this batch the job \'REPORT\' is executed as soon as one of the
\'LOAD_n\' jobs reaches a state success AND the main_load
job also terminates successfully';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0050_COMPLEX_CONDITION'.'COMPLEX_CONDITION'
with
	TAG = none, TEXT = 'In this batch the job \'REPORT\' is executed as soon as one of the
\'LOAD_n\' jobs reaches a state success AND the main_load
job also terminates successfully';


create or alter folder SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'
with
	group = 'PUBLIC',
	environment = none,
	parameters = (
		'RT' = '-t 30'
	);

create or alter job definition SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'.'DEAP_THOUGHT'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'WISDOM'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'sdms-set_variable --host $SDMSHOST --port $SDMSPORT --jid $JOBID --key $KEY WISDOM 42',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'.'JOBCOMM'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'.'TELL_ANSWER'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'ANSWER',
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "The universal answer is $ANSWER" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'.'TELL_ANSWER'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'.'DEAP_THOUGHT'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'.'JOBCOMM'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'.'DEAP_THOUGHT'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'.'TELL_ANSWER'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'.'DEAP_THOUGHT'
alter parameter = (
		'WISDOM'
			RESULT
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'.'TELL_ANSWER'
alter parameter = (
		'ANSWER'
			reference SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'.'DEAP_THOUGHT' ('WISDOM')
		EXPORT = NONE,
		'RT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'
with
	TAG = none, TEXT = 'This example shows a possibility for jobs to communicate';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0060_JOBCOMM'.'JOBCOMM'
with
	TAG = none, TEXT = 'This example shows a possibility for jobs to communicate';


create or alter folder SYSTEM.'EXAMPLES'.'E0070_DYNSUBMIT'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0070_DYNSUBMIT'.'CHILD'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" "Number $JOBTAG" -c "1=FAILURE:0=SUCCESS" $IGF -t "10-30" $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0070_DYNSUBMIT'.'DYNSUBMIT'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'D',
		'IGF',
		'WT',
		'S',
		'N'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'dynsubmit.sh --host $SDMSHOST --port $SDMSPORT --id $JOBID --key $KEY --child THREAD $D $N $IGF $WT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0070_DYNSUBMIT'.'DYNSUBMIT'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0070_DYNSUBMIT'.'CHILD'
		alias = THREAD
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0070_DYNSUBMIT'.'CHILD'
alter parameter = (
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0070_DYNSUBMIT'.'DYNSUBMIT'
alter parameter = (
		'D'
			IMPORT default = '-d 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'WT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE,
		'N'
			IMPORT default = '-n 10'
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0070_DYNSUBMIT'
with
	TAG = none, TEXT = 'This example shows how jobs can be dynamically submitted under the control of the scheduling system.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0070_DYNSUBMIT'.'DYNSUBMIT'
with
	TAG = none, TEXT = 'This example shows how jobs can be dynamically submitted under the control of the scheduling system.';

create or alter named resource RESOURCE.'EXAMPLES'.'E0075_LOADCONTROL'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0075_LOADCONTROL'.'SCOPE_UNITS'
with
	group = 'PUBLIC',
	usage = SYSTEM;

create or alter resource RESOURCE.'EXAMPLES'.'E0075_LOADCONTROL'.'SCOPE_UNITS' in GLOBAL.'EXAMPLES'.'LOCALHOST'.'SERVER'
with
	amount = 4,
	group = 'PUBLIC',
	online,
	requestable amount = 1;

create or alter footprint 'E0075_LOADCONTROL_1_UNIT'
with
	resources = (
		RESOURCE.'EXAMPLES'.'E0075_LOADCONTROL'.'SCOPE_UNITS' NOKEEP amount = 1
	);
create or alter folder SYSTEM.'EXAMPLES'.'E0075_LOADCONTROL'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0075_LOADCONTROL'.'CHILD'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	footprint = 'E0075_LOADCONTROL_1_UNIT',
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0075_LOADCONTROL'.'SCOPE_UNITS'
			amount = 1
			NOKEEP
	),
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" "Number $JOBTAG" -c "1=FAILURE:0=SUCCESS" $IGF -t "10-30" $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0075_LOADCONTROL'.'LOADCONTROL'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'D',
		'IGF',
		'WT',
		'S',
		'N'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'dynsubmit.sh --host $SDMSHOST --port $SDMSPORT --id $JOBID --key $KEY --child THREAD $D $N $IGF $WT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0075_LOADCONTROL'.'LOADCONTROL'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0075_LOADCONTROL'.'CHILD'
		alias = THREAD
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0075_LOADCONTROL'.'CHILD'
alter parameter = (
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0075_LOADCONTROL'.'LOADCONTROL'
alter parameter = (
		'D'
			IMPORT default = '-d 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'WT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE,
		'N'
			IMPORT default = '-n 10'
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0075_LOADCONTROL'
with
	TAG = none, TEXT = 'This example shows how to limit the number of parallel jobs using a scope system resource.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0075_LOADCONTROL'.'LOADCONTROL'
with
	TAG = none, TEXT = 'This example shows how to limit the number of parallel jobs using a scope system resource.';


create or alter named resource RESOURCE.'EXAMPLES'.'E0076_LOADCONTROL_KEEP'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0076_LOADCONTROL_KEEP'.'SCOPE_UNITS'
with
	group = 'PUBLIC',
	usage = SYSTEM;

create or alter resource RESOURCE.'EXAMPLES'.'E0076_LOADCONTROL_KEEP'.'SCOPE_UNITS' in GLOBAL.'EXAMPLES'.'LOCALHOST'.'SERVER'
with
	amount = 4,
	group = 'PUBLIC',
	online,
	requestable amount = 1;
create or alter folder SYSTEM.'EXAMPLES'.'E0076_LOADCONTROL_KEEP'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0076_LOADCONTROL_KEEP'.'CHILD'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0076_LOADCONTROL_KEEP'.'SCOPE_UNITS'
			amount = 1
			KEEP
	),
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" "Number $JOBTAG" -c "1=FAILURE:0=SUCCESS" $IGF -t "10-30" $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0076_LOADCONTROL_KEEP'.'LOADCONTROL_KEEP'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'D',
		'IGF',
		'WT',
		'S',
		'N'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'dynsubmit.sh --host $SDMSHOST --port $SDMSPORT --id $JOBID --key $KEY --child THREAD $D $N $IGF $WT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0076_LOADCONTROL_KEEP'.'LOADCONTROL_KEEP'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0076_LOADCONTROL_KEEP'.'CHILD'
		alias = THREAD
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0076_LOADCONTROL_KEEP'.'CHILD'
alter parameter = (
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0076_LOADCONTROL_KEEP'.'LOADCONTROL_KEEP'
alter parameter = (
		'D'
			IMPORT default = '-d 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'WT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE,
		'N'
			IMPORT default = '-n 10'
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0076_LOADCONTROL_KEEP'
with
	TAG = none, TEXT = 'This example shows how to limit the number of parallel jobs using a scope system resource.
Resources are kept during restartable state.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0076_LOADCONTROL_KEEP'.'LOADCONTROL_KEEP'
with
	TAG = none, TEXT = 'This example shows how to limit the number of parallel jobs using a scope system resource.
Resources are kept during restartable state.';


create or alter named resource RESOURCE.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'JOB_UNITS'
with
	group = 'PUBLIC',
	usage = SYSTEM;

create or alter named resource RESOURCE.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'FOLDER_UNITS'
with
	group = 'PUBLIC',
	usage = SYSTEM;

create or alter named resource RESOURCE.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'SCOPE_UNITS'
with
	group = 'PUBLIC',
	usage = SYSTEM;

create or alter resource RESOURCE.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'SCOPE_UNITS' in GLOBAL.'EXAMPLES'.'LOCALHOST'.'SERVER'
with
	amount = 5,
	group = 'PUBLIC',
	online,
	requestable amount = 1;
create or alter folder SYSTEM.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'CHILD'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'TAG',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'SCOPE_UNITS'
			amount = 1
			NOKEEP,
		RESOURCE.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'FOLDER_UNITS'
			amount = 1
			NOKEEP,
		RESOURCE.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'JOB_UNITS'
			amount = 1
			NOKEEP
	),
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME"  "Tag $TAG" "Number $JOBTAG" -c "1=FAILURE:0=SUCCESS" $IGF -t "10-30" $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'DETAILED_LOADCONTROL'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'TAG',
		'D',
		'IGF',
		'WT',
		'S',
		'N'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'dynsubmit.sh --host $SDMSHOST --port $SDMSPORT --id $JOBID --key $KEY --child THREAD $D $N $IGF $WT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'DETAILED_LOADCONTROL'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'CHILD'
		alias = THREAD
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'CHILD'
alter parameter = (
		'TAG'
			IMPORT default = '$MASTERID'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'DETAILED_LOADCONTROL'
alter parameter = (
		'TAG'
			PARAMETER default = '$MASTERID'
		EXPORT = NONE,
		'D'
			IMPORT default = '-d 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'WT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE,
		'N'
			IMPORT default = '-n 10'
		EXPORT = NONE
	);

create or alter resource RESOURCE.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'FOLDER_UNITS' in SYSTEM.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'
with
	amount = 4,
	group = 'PUBLIC',
	online,
	factor = 1.0,
	requestable amount = 1,
	tag = none,
	trace base = none,
	trace interval = none,
	parameter = none;

create or alter resource RESOURCE.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'JOB_UNITS' in SYSTEM.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'DETAILED_LOADCONTROL'
with
	amount = 2,
	group = 'PUBLIC',
	online,
	requestable amount = 1,
	parameter = none;

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'
with
	TAG = none, TEXT = 'This example shows how to limit the number of parallel jobs using folder, job and scope system resources.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0077_DETAILED_LOADCONTROL'.'DETAILED_LOADCONTROL'
with
	TAG = none, TEXT = 'This example shows how to limit the number of parallel jobs using folder, job and scope system resources.';


create or alter named resource RESOURCE.'EXAMPLES'.'E0080_LOADBALANCE'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0080_LOADBALANCE'.'SCOPE_UNITS'
with
	group = 'PUBLIC',
	usage = SYSTEM;

create or alter named resource RESOURCE.'EXAMPLES'.'E0080_LOADBALANCE'.'HOST'
with
	group = 'PUBLIC',
	state profile = none,
	usage = STATIC,
	parameters = none;

create or alter resource RESOURCE.'EXAMPLES'.'E0080_LOADBALANCE'.'SCOPE_UNITS' in GLOBAL.'EXAMPLES'.'HOST_1'.'SERVER'
with
	amount = 2,
	group = 'PUBLIC',
	online,
	requestable amount = 1;

create or alter resource RESOURCE.'EXAMPLES'.'E0080_LOADBALANCE'.'HOST' in GLOBAL.'EXAMPLES'.'HOST_1'.'SERVER'
with
	group = 'PUBLIC',
	online;

create or alter resource RESOURCE.'EXAMPLES'.'E0080_LOADBALANCE'.'SCOPE_UNITS' in GLOBAL.'EXAMPLES'.'HOST_2'.'SERVER'
with
	amount = 2,
	group = 'PUBLIC',
	online,
	requestable amount = 1;

create or alter resource RESOURCE.'EXAMPLES'.'E0080_LOADBALANCE'.'HOST' in GLOBAL.'EXAMPLES'.'HOST_2'.'SERVER'
with
	group = 'PUBLIC',
	online;

create or alter environment 'E0080_HOSTS'
with
	resources = (
		RESOURCE.'EXAMPLES'.'E0080_LOADBALANCE'.'HOST'
	);

grant use, view on environment 'E0080_HOSTS' to public;
create or alter folder SYSTEM.'EXAMPLES'.'E0080_LOADBALANCE'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0080_LOADBALANCE'.'CHILD'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'E0080_HOSTS',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0080_LOADBALANCE'.'SCOPE_UNITS'
			amount = 1
			NOKEEP
	),
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" "Number $JOBTAG" "on $SCOPENAME"  -c "1=FAILURE:0=SUCCESS" $IGF -t "10-30" $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0080_LOADBALANCE'.'LOADBALANCE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'D',
		'IGF',
		'WT',
		'S',
		'N'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'dynsubmit.sh --host $SDMSHOST --port $SDMSPORT --id $JOBID --key $KEY --child THREAD $D $N $IGF $WT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0080_LOADBALANCE'.'LOADBALANCE'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0080_LOADBALANCE'.'CHILD'
		alias = THREAD
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0080_LOADBALANCE'.'CHILD'
alter parameter = (
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0080_LOADBALANCE'.'LOADBALANCE'
alter parameter = (
		'D'
			IMPORT default = '-d 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'WT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE,
		'N'
			IMPORT default = '-n 10'
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0080_LOADBALANCE'
with
	TAG = none, TEXT = 'This example is a small modification of the dynsubmit example. 
It shows how jobs are distributed among suitable jobservers determined by the availability of resources.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0080_LOADBALANCE'.'LOADBALANCE'
with
	TAG = none, TEXT = 'This example is a small modification of the dynsubmit example. 
It shows how jobs are distributed among suitable jobservers determined by the availability of resources.';



create or alter folder SYSTEM.'EXAMPLES'.'E0090_PIPELINE'
with
	group = 'PUBLIC',
	environment = none,
	parameters = (
		'N' = '-n 3'
	);

create or alter job definition SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'INSTANCE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = (
		'ONE',
		'SLEEPTIME',
		'SILENTOPTION'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'PIPELINE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'SUBMITDELAY',
		'SLEEPTIME',
		'CHILDREN',
		'IGF',
		'WT',
		'S',
		'N',
		'SILENTOPTION'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'dynsubmit.sh --host $SDMSHOST --port $SDMSPORT --id $JOBID --key $KEY --child INSTANCE $N $IGF $WT $S --delay $SUBMITDELAY',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'STEP_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'SLEEPTIME',
		'IGF',
		'S',
		'SILENTOPTION'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "?:1=FAILURE:0=SUCCESS" $IGF -t $SLEEPTIME $SILENTOPTION',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'STEP_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'SLEEPTIME',
		'IGF',
		'S',
		'SILENTOPTION'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "?:1=FAILURE:0=SUCCESS" $IGF -t $SLEEPTIME $SILENTOPTION',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'STEP_2'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'STEP_1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'INSTANCE'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'STEP_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'STEP_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'PIPELINE'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'INSTANCE'
		alias = INSTANCE
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'INSTANCE'
alter parameter = (
		'ONE'
			CONSTANT = '1'
		EXPORT = NONE,
		'SLEEPTIME'
			PARAMETER default = '30'
		EXPORT = NONE,
		'SILENTOPTION'
			PARAMETER default = '-s'
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'PIPELINE'
alter parameter = (
		'SUBMITDELAY'
			PARAMETER default = '10'
		EXPORT = NONE,
		'SLEEPTIME'
			PARAMETER default = '30'
		EXPORT = NONE,
		'CHILDREN'
			SUM('ONE')
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'WT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE,
		'N'
			IMPORT default = '-n 3'
		EXPORT = NONE,
		'SILENTOPTION'
			PARAMETER default = '-s'
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'STEP_1'
alter parameter = (
		'SLEEPTIME'
			PARAMETER default = '30'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE,
		'SILENTOPTION'
			PARAMETER default = '-s'
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'STEP_2'
alter parameter = (
		'SLEEPTIME'
			PARAMETER default = '30'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE,
		'SILENTOPTION'
			PARAMETER default = '-s'
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0090_PIPELINE'
with
	TAG = none, TEXT = 'This example shows that not only jobs but also entire batches can be dynamically submitted.

For instance an ETL-process determines the number of partitions of a source system and for 
each of the partitions an ETL Batch is dynamically submitted.

The example is configured by two parameters.
SLEEPTIME defines how long the jobs STEP_1 and STEP_2 sleep.

SUBMITDELAY defines how much time is waited between two dynamic submits.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0090_PIPELINE'.'PIPELINE'
with
	TAG = none, TEXT = 'This example shows that not only jobs but also entire batches can be dynamically submitted.

For instance an ETL-process determines the number of partitions of a source system and for 
each of the partitions an ETL Batch is dynamically submitted.

The example is configured by two parameters.
SLEEPTIME defines how long the jobs STEP_1 and STEP_2 sleep.

SUBMITDELAY defines how much time is waited between two dynamic submits.';



create or alter folder SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'
with
	group = 'PUBLIC',
	environment = none,
	parameters = (
		'N' = '-n 3'
	);

create or alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'FOLLOW_STEP_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'INSTANCE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = (
		'SLEEPTIME',
		'ONE',
		'SILENTOPTION'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'PIPELINE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'SUBMITDELAY',
		'SLEEPTIME',
		'CHILDREN',
		'SILENTOPTION',
		'IGF',
		'WT',
		'S',
		'N'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'dynsubmit.sh --host $SDMSHOST --port $SDMSPORT --id $JOBID --key $KEY --child INSTANCE $N $IGF $WT $S --delay $SUBMITDELAY',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'PIPELINE_STEP_DEPENDENCY'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = (
		'SUBMITDELAY',
		'SLEEPTIME',
		'SILENTOPTION'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'STEP_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'SLEEPTIME',
		'SILENTOPTION'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "?:1=FAILURE:0=SUCCESS" $IGF -t $SLEEPTIME $SILENTOPTION',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'STEP_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'SLEEPTIME',
		'SILENTOPTION'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "?:1=FAILURE:0=SUCCESS" $IGF -t $SLEEPTIME $SILENTOPTION',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'WAIT_STEP_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'FOLLOW_STEP_1'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'WAIT_STEP_1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'STEP_2'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'STEP_1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'WAIT_STEP_1'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'PIPELINE'
		dependency 'SUBMIT_WAIT'
		mode = JOB_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'INSTANCE'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'STEP_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'STEP_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'PIPELINE'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'INSTANCE'
		alias = INSTANCE
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'PIPELINE_STEP_DEPENDENCY'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'FOLLOW_STEP_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'PIPELINE'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'WAIT_STEP_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'WAIT_STEP_1'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'STEP_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		enable
		translation = none
		ignore dependency = (
			'SUBMIT_WAIT'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'FOLLOW_STEP_1'
alter parameter = (
		'RT'
			IMPORT default = ''
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'INSTANCE'
alter parameter = (
		'SLEEPTIME'
			PARAMETER default = '30'
		EXPORT = NONE,
		'ONE'
			CONSTANT = '1'
		EXPORT = NONE,
		'SILENTOPTION'
			PARAMETER default = '-s'
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'PIPELINE'
alter parameter = (
		'SUBMITDELAY'
			PARAMETER default = '10'
		EXPORT = NONE,
		'SLEEPTIME'
			PARAMETER default = '30'
		EXPORT = NONE,
		'CHILDREN'
			SUM('ONE')
		EXPORT = NONE,
		'SILENTOPTION'
			PARAMETER default = '-s'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'WT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE,
		'N'
			IMPORT default = '-n 3'
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'PIPELINE_STEP_DEPENDENCY'
alter parameter = (
		'SUBMITDELAY'
			PARAMETER default = '10'
		EXPORT = NONE,
		'SLEEPTIME'
			PARAMETER default = '30'
		EXPORT = NONE,
		'SILENTOPTION'
			PARAMETER default = '-s'
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'STEP_1'
alter parameter = (
		'SLEEPTIME'
			PARAMETER default = '30'
		EXPORT = NONE,
		'SILENTOPTION'
			PARAMETER default = '-s'
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'STEP_2'
alter parameter = (
		'SLEEPTIME'
			PARAMETER default = '30'
		EXPORT = NONE,
		'SILENTOPTION'
			PARAMETER default = '-s'
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'
with
	TAG = none, TEXT = 'This example demonstrates how to use a milestone to 
start a job after all instances of dynamically submitted 
pipeline batches have completed a certain step in their 
processing.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0095_PIPELINE_STEP_DEPENDENCY'.'PIPELINE_STEP_DEPENDENCY'
with
	TAG = none, TEXT = 'This example demonstrates how to use a milestone to 
start a job after all instances of dynamically submitted 
pipeline batches have completed a certain step in their 
processing.';


create or alter folder SYSTEM.'EXAMPLES'.'E0100_TRIGGER'
with
	group = 'PUBLIC',
	environment = none,
	parameters = (
		'RT' = '-t 30'
	);

create or alter job definition SYSTEM.'EXAMPLES'.'E0100_TRIGGER'.'ON_FAILURE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0100_TRIGGER'.'TRIGGER'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0100_TRIGGER'.'ON_FAILURE'
alter parameter = (
		'RT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0100_TRIGGER'.'TRIGGER'
alter parameter = (
		'RT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter trigger 'ON_FAILURE' on job definition SYSTEM.'EXAMPLES'.'E0100_TRIGGER'.'TRIGGER'
with
	active,
	condition = none,
	nomaster,
	nowarn,
	limit state = none,
	nosuspend,
	state = (
		'FAILURE'
	),
	submitcount = 3,
	submit SYSTEM.'EXAMPLES'.'E0100_TRIGGER'.'ON_FAILURE',
	type = IMMEDIATE_MERGE;

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0100_TRIGGER'
with
	TAG = none, TEXT = 'This example shows how to trigger a job on failure of an other one.
In practice the triggered job could send mail, open a trouble ticket or do
other meaningfiul things.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0100_TRIGGER'.'TRIGGER'
with
	TAG = none, TEXT = 'This example shows how to trigger a job on failure of an other one.
In practice the triggered job could send mail, open a trouble ticket or do
other meaningfiul things.';


create or alter folder SYSTEM.'EXAMPLES'.'E0105_MASTERTRIGGER'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0105_MASTERTRIGGER'.'MASTERTRIGGER'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0105_MASTERTRIGGER'.'ON_SUCCESS'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0105_MASTERTRIGGER'.'MASTERTRIGGER'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0010_SINGLEJOB'.'SINGLEJOB'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0105_MASTERTRIGGER'.'ON_SUCCESS'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0105_MASTERTRIGGER'.'MASTERTRIGGER'
alter parameter = (
		'RT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0105_MASTERTRIGGER'.'ON_SUCCESS'
alter parameter = (
		'RT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter trigger 'MASTER' on job definition SYSTEM.'EXAMPLES'.'E0105_MASTERTRIGGER'.'MASTERTRIGGER'
with
	group = 'PUBLIC',
	active,
	condition = none,
	master,
	nowarn,
	limit state = none,
	nosuspend,
	state = (
		'SUCCESS'
	),
	submitcount = 1,
	submit SYSTEM.'EXAMPLES'.'E0105_MASTERTRIGGER'.'ON_SUCCESS',
	type = BEFORE_FINAL;

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0105_MASTERTRIGGER'
with
	TAG = none, TEXT = 'This example shows that triggers can be used to submit another master job (or batch).
This way technically related but organizationally unrelated processes can be easily synchronized.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0105_MASTERTRIGGER'.'MASTERTRIGGER'
with
	TAG = none, TEXT = 'This example shows that triggers can be used to submit another master job (or batch).
This way technically related but organizationally unrelated processes can be easily synchronized.';


create or alter folder SYSTEM.'EXAMPLES'.'E0110_SELECTSERVER'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0110_SELECTSERVER'.'ON_HOST_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" "on $SCOPENAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0110_SELECTSERVER'.'ON_HOST_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_2',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" "on $SCOPENAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0110_SELECTSERVER'.'SELECTSERVER'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0110_SELECTSERVER'.'SELECTSERVER'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0110_SELECTSERVER'.'ON_HOST_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0110_SELECTSERVER'.'ON_HOST_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0110_SELECTSERVER'.'ON_HOST_1'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0110_SELECTSERVER'.'ON_HOST_2'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0110_SELECTSERVER'
with
	TAG = none, TEXT = 'This example shows how environments can be used to select the (job)server where a job will run.
It also shows that within one master batch different jobs can run on different jobservers.
This means that processes running on different machines can be easily synchronized.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0110_SELECTSERVER'.'SELECTSERVER'
with
	TAG = none, TEXT = 'This example shows how environments can be used to select the (job)server where a job will run.
It also shows that within one master batch different jobs can run on different jobservers.
This means that processes running on different machines can be easily synchronized.';


create or alter exit state definition 'HOST_1';

create or alter exit state definition 'HOST_2';

create or alter exit state mapping 'SELECT_HOST'
with map = (
			'FAILURE',
		0,	'HOST_1',
		1,	'HOST_2',
		2,	'FAILURE'
);

create or alter exit state profile 'SELECT_HOST'
with
		default mapping = 'SELECT_HOST',
		states = (
			'FAILURE' restartable,
			'HOST_2' final,
			'HOST_1' final
		);

create or alter named resource RESOURCE.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'ALLOWED_HOST'
with
	group = 'PUBLIC',
	usage = STATIC;

create or alter environment 'E0115_ALLOWED_HOSTS'
with
	resources = (
		RESOURCE.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'ALLOWED_HOST'
	);

grant use on environment 'E0115_ALLOWED_HOSTS' to 'PUBLIC';

create or alter named resource RESOURCE.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'SELECT'
with
	group = 'PUBLIC',
	usage = STATIC,
	parameters = (
		'HOSTNAME' LOCAL_CONSTANT
	);

create or alter resource RESOURCE.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'ALLOWED_HOST' in GLOBAL.'EXAMPLES'.'HOST_1'.'SERVER'
with
	group = 'PUBLIC',
	online;

create or alter resource RESOURCE.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'SELECT' in GLOBAL.'EXAMPLES'.'HOST_1'.'SERVER'
with
	group = 'PUBLIC',
	online,
	parameter = (
		'HOSTNAME' = 'HOST_1'
	);

create or alter resource RESOURCE.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'ALLOWED_HOST' in GLOBAL.'EXAMPLES'.'HOST_2'.'SERVER'
with
	group = 'PUBLIC',
	online;

create or alter resource RESOURCE.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'SELECT' in GLOBAL.'EXAMPLES'.'HOST_2'.'SERVER'
with
	group = 'PUBLIC',
	online,
	parameter = (
		'HOSTNAME' = 'HOST_2'
	);

create or alter folder SYSTEM.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'DYNAMIC_SERVER_SELECTION'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'JOB'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'E0115_ALLOWED_HOSTS',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RESOURCE_HOSTNAME',
		'SELECTED_HOSTNAME',
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'SELECT'
	),
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" "on $SCOPENAME"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'SELECT_HOST'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'SELECTED_HOST',
		'RT',
		'IGF',
		'S'
	),
	profile = 'SELECT_HOST',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh CHOOSE -c "0=HOST_1:1=HOST_2:3=FAILURE" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'JOB'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'SELECT_HOST'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'DYNAMIC_SERVER_SELECTION'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'JOB'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'SELECT_HOST'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'JOB'
alter parameter = (
		'RESOURCE_HOSTNAME'
			reference resource RESOURCE.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'SELECT' ('HOSTNAME')
		EXPORT = NONE,
		'SELECTED_HOSTNAME'
			reference SYSTEM.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'SELECT_HOST' ('SELECTED_HOST')
		EXPORT = NONE,
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0115_DYNAMIC_SERVER_SELECTION'.'SELECT_HOST'
alter parameter = (
		'SELECTED_HOST'
			CONSTANT = '$MERGEDSTATE'
		EXPORT = NONE,
		'RT'
			IMPORT default = '-t 30'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);


create or alter named resource RESOURCE.'EXAMPLES'.'E0115_SELECTSERVER_DYNAMIC'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0115_SELECTSERVER_DYNAMIC'.'HOST'
with
	group = 'PUBLIC',
	usage = STATIC,
	parameters = (
		'HOSTNAME' LOCAL_CONSTANT
	);

create or alter environment 'E0115_HOSTS'
with
	resources = (
		RESOURCE.'EXAMPLES'.'E0115_SELECTSERVER_DYNAMIC'.'HOST' CONDITION = '$HOSTNAME == $SERVER_HOSTNAME'
	);

grant USE, VIEW
on environment 'E0115_HOSTS'
to 'PUBLIC';

create or alter resource RESOURCE.'EXAMPLES'.'E0115_SELECTSERVER_DYNAMIC'.'HOST' in GLOBAL.'EXAMPLES'.'HOST_1'.'SERVER'
with
	group = 'PUBLIC',
	online,
	parameter = (
		'HOSTNAME' = 'HOST_1'
	);

create or alter resource RESOURCE.'EXAMPLES'.'E0115_SELECTSERVER_DYNAMIC'.'HOST' in GLOBAL.'EXAMPLES'.'HOST_2'.'SERVER'
with
	group = 'PUBLIC',
	online,
	parameter = (
		'HOSTNAME' = 'HOST_2'
	);

create or alter folder SYSTEM.'EXAMPLES'.'E0115_SELECTSERVER_DYNAMIC'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0115_SELECTSERVER_DYNAMIC'.'SELECTSERVER_DYNAMIC'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'E0115_HOSTS',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'HOSTNAME',
		'SERVER_HOSTNAME'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" "on $SCOPENAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0115_SELECTSERVER_DYNAMIC'.'SELECTSERVER_DYNAMIC'
alter parameter = (
		'HOSTNAME'
			PARAMETER default = 'HOST_1'
		EXPORT = NONE,
		'SERVER_HOSTNAME'
			reference resource RESOURCE.'EXAMPLES'.'E0115_SELECTSERVER_DYNAMIC'.'HOST' ('HOSTNAME')
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0115_SELECTSERVER_DYNAMIC'
with
	TAG = none, TEXT = 'This example shows how conditional resource requirements can be used to dynamically select the
jobserver to execute a job on by using a parameter.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0115_SELECTSERVER_DYNAMIC'.'SELECTSERVER_DYNAMIC'
with
	TAG = none, TEXT = 'This example shows how conditional resource requirements can be used to dynamically select the
jobserver to execute a job on by using a parameter.';


create or alter named resource RESOURCE.'EXAMPLES'.'E0120_SYNC_SIMPLE_LOCK'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0120_SYNC_SIMPLE_LOCK'.'SIMPLE_LOCK'
with
	group = 'PUBLIC',
	usage = SYNCHRONIZING;

create or alter resource RESOURCE.'EXAMPLES'.'E0120_SYNC_SIMPLE_LOCK'.'SIMPLE_LOCK' in GLOBAL.'EXAMPLES'
with
	group = 'PUBLIC',
	online;
create or alter folder SYSTEM.'EXAMPLES'.'E0120_SYNC_SIMPLE_LOCK'
with
	group = 'PUBLIC',
	environment = none,
	parameters = (
		'RT' = ''
	);

create or alter job definition SYSTEM.'EXAMPLES'.'E0120_SYNC_SIMPLE_LOCK'.'JOB_S'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0120_SYNC_SIMPLE_LOCK'.'SIMPLE_LOCK'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = S
			state mapping = none
			expired = none
			state = none
	),
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0120_SYNC_SIMPLE_LOCK'.'JOB_X'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0120_SYNC_SIMPLE_LOCK'.'SIMPLE_LOCK'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0120_SYNC_SIMPLE_LOCK'.'JOB_S'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0120_SYNC_SIMPLE_LOCK'.'JOB_X'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0120_SYNC_SIMPLE_LOCK'
with
	TAG = none, TEXT = 'This example shows how the resource locking works.

JOB_X allocates a resource with an exclusive lock.
JOB_S allocate the same resource with a shared lock.

When submitting a mix of those jobs, it becomes visible, that the shared locks
are compatible, the exclusive lock isn\'t.
It also shows, that the resource allocation is done in sequence of priority. It can happen,
that a job needing a shared lock will have to wait (although it theoretically could allocate 
the resource) because a Job needing an exclusive lock with higher priority is still waiting
and vice versa.';


create or alter resource state definition 'PHASE1';

create or alter resource state definition 'PHASE2';

create or alter resource state definition 'PHASE3';

create or alter resource state profile 'THREE_PHASES'
with
	initial state = 'PHASE1',
	states = (
		'PHASE1',
		'PHASE2',
		'PHASE3'
	);

create or alter named resource RESOURCE.'EXAMPLES'.'E0130_SYNC_RESOURCE_STATE'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0130_SYNC_RESOURCE_STATE'.'STATE_LOCK'
with
	group = 'PUBLIC',
	state profile = 'THREE_PHASES',
	usage = SYNCHRONIZING;

create or alter resource RESOURCE.'EXAMPLES'.'E0130_SYNC_RESOURCE_STATE'.'STATE_LOCK' in GLOBAL.'EXAMPLES'
with
	group = 'PUBLIC',
	online;

create or alter resource state mapping 'PHASE_MODEL'
with map = (
		'SUCCESS' maps 'PHASE1' to 'PHASE2',
		'SUCCESS' maps 'PHASE2' to 'PHASE3',
		'SUCCESS' maps 'PHASE3' to 'PHASE1'
);

create or alter folder SYSTEM.'EXAMPLES'.'E0130_SYNC_RESOURCE_STATE'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0130_SYNC_RESOURCE_STATE'.'JOB1X'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0130_SYNC_RESOURCE_STATE'.'STATE_LOCK'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'PHASE_MODEL'
			expired = none
			state = (
				'PHASE1'
			)
	),
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0130_SYNC_RESOURCE_STATE'.'JOB2X'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0130_SYNC_RESOURCE_STATE'.'STATE_LOCK'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'PHASE_MODEL'
			expired = none
			state = (
				'PHASE2'
			)
	),
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0130_SYNC_RESOURCE_STATE'.'JOB3X'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0130_SYNC_RESOURCE_STATE'.'STATE_LOCK'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'PHASE_MODEL'
			expired = none
			state = (
				'PHASE3'
			)
	),
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0130_SYNC_RESOURCE_STATE'.'JOB1X'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0130_SYNC_RESOURCE_STATE'
with
	TAG = none, TEXT = 'This example shows how unrelated jobs can be synchronized using stateful resources.
regardless of the mix of jobs submitted, they will always be executed in a sequence
JOB1X - JOB2X - JOB3X - JOB1X - ... and so on';


create or alter named resource RESOURCE.'EXAMPLES'.'E0140_TIMEOUT'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0140_TIMEOUT'.'LOCK'
with
	group = 'PUBLIC',
	usage = SYNCHRONIZING;

create or alter resource RESOURCE.'EXAMPLES'.'E0140_TIMEOUT'.'LOCK' in GLOBAL.'EXAMPLES'
with
	group = 'PUBLIC',
	online;
create or alter folder SYSTEM.'EXAMPLES'.'E0140_TIMEOUT'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0140_TIMEOUT'.'BLOCKER'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0140_TIMEOUT'.'LOCK'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0140_TIMEOUT'.'WAITER'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0140_TIMEOUT'.'LOCK'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = none
	),
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	timeout = 1 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0140_TIMEOUT'.'BLOCKER'
alter parameter = (
		'RT'
			CONSTANT = '-t 30'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0140_TIMEOUT'.'WAITER'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0140_TIMEOUT'
with
	TAG = none, TEXT = 'This example shows the timeout functionality.
If the job BLOCKER ist submitted before WAITER, the former will allocate a resource needed by the latter.
WAITER then waits for the resource until it runs in a timeout.';


create or alter resource state definition 'NEW';

create or alter resource state definition 'TOUCHED';

create or alter resource state profile 'TIMESTAMP'
with
	initial state = 'NEW',
	states = (
		'TOUCHED'
	);

create or alter resource state mapping 'TOUCH'
with map = (
		'SUCCESS' maps any to 'TOUCHED'
);

create or alter named resource RESOURCE.'EXAMPLES'.'E0150_EXPIRATION'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0150_EXPIRATION'.'TIMESTAMP'
with
	group = 'PUBLIC',
	state profile = 'TIMESTAMP',
	usage = SYNCHRONIZING;

create or alter resource RESOURCE.'EXAMPLES'.'E0150_EXPIRATION'.'TIMESTAMP' in GLOBAL.'EXAMPLES'
with
	group = 'PUBLIC',
	online;
create or alter folder SYSTEM.'EXAMPLES'.'E0150_EXPIRATION'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0150_EXPIRATION'.'CONSUMER'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0150_EXPIRATION'.'TIMESTAMP'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = 1 MINUTE
			state = (
				'TOUCHED'
			)
	),
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0150_EXPIRATION'.'PRODUCER'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0150_EXPIRATION'.'TIMESTAMP'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'TOUCH'
			expired = none
			state = none
	),
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0150_EXPIRATION'.'CONSUMER'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0150_EXPIRATION'.'PRODUCER'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0150_EXPIRATION'
with
	TAG = none, TEXT = 'This example shows a producer/consumer system.
The producer touches a resource on termination.
The consumer needs this resource with a timestamp not older than two minutes.
So if both jobs are submitted, the consumer will run immediately after the producer finished.';


create or alter exit state definition 'AGAIN';

create or alter exit state mapping 'LOOP'
with map = (
			'FAILURE',
		0,	'SUCCESS',
		1,	'AGAIN',
		2,	'FAILURE'
);

create or alter exit state profile 'LOOP_HEAD'
with
		states = (
			'FAILURE' restartable,
			'SUCCESS' final,
			'AGAIN' final
		);

create or alter exit state profile 'LOOP_BODY'
with
		default mapping = 'LOOP',
		states = (
			'FAILURE' restartable,
			'AGAIN' final,
			'SUCCESS' final
		);
create or alter folder SYSTEM.'EXAMPLES'.'E0170_SIMPLE_LOOP'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0170_SIMPLE_LOOP'.'BODY'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'LOOP_BODY',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=AGAIN:0=SUCCESS" $IGF $RT $S -e "0=1:1=3"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0170_SIMPLE_LOOP'.'SIMPLE_LOOP'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'LOOP_HEAD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0170_SIMPLE_LOOP'.'SIMPLE_LOOP'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0170_SIMPLE_LOOP'.'BODY'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0170_SIMPLE_LOOP'.'BODY'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

create or alter trigger 'BODY' on job definition SYSTEM.'EXAMPLES'.'E0170_SIMPLE_LOOP'.'SIMPLE_LOOP'
with
	active,
	condition = none,
	nomaster,
	nowarn,
	limit state = none,
	nosuspend,
	state = (
		'AGAIN'
	),
	submitcount = 5,
	submit SYSTEM.'EXAMPLES'.'E0170_SIMPLE_LOOP'.'BODY',
	type = BEFORE_FINAL;

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0170_SIMPLE_LOOP'
with
	TAG = none, TEXT = 'This example is an implementation of  a simple while not AGAIN loop.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0170_SIMPLE_LOOP'.'SIMPLE_LOOP'
with
	TAG = none, TEXT = 'This example is an implementation of  a simple while not AGAIN loop.';


create or alter exit state definition 'AGAIN';

create or alter exit state mapping 'LOOP'
with map = (
			'FAILURE',
		0,	'SUCCESS',
		1,	'AGAIN',
		2,	'FAILURE'
);

create or alter exit state profile 'LOOP_HEAD'
with
		states = (
			'FAILURE' restartable,
			'SUCCESS' final,
			'AGAIN' final
		);

create or alter exit state profile 'LOOP_BODY'
with
		default mapping = 'LOOP',
		states = (
			'FAILURE' restartable,
			'AGAIN' final,
			'SUCCESS' final
		);

create or alter exit state profile 'STANDARD_NOSKIP'
with
		default mapping = 'UNIX',
		states = (
			'FAILURE' restartable broken,
			'SUCCESS' final
		);
create or alter folder SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = (
		'BODY',
		'MAX_BODY_COUNT',
		'BODY_COUNT'
	),
	profile = 'LOOP_BODY',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY_A'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY_B'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'LOOP_BODY',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=AGAIN:0=SUCCESS" $IGF $RT $S -e "0=1:1=3"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'FOLLOW_A'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'FOLLOW_B'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'FOLLOW_BODY'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT',
		'IGF',
		'S'
	),
	profile = 'STANDARD_NOSKIP',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'LOOP'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = (
		'BODY_COUNT'
	),
	profile = 'LOOP_HEAD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'REPLACE_LOOP'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = (
		'MAX_BODY_COUNT'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY_B'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY_A'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'FOLLOW_A'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY_A'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'FOLLOW_B'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY_B'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'FOLLOW_BODY'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY_A'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY_B'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'LOOP'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'FOLLOW_BODY'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'REPLACE_LOOP'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'FOLLOW_A'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'FOLLOW_B'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'LOOP'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY'
alter parameter = (
		'BODY'
			CONSTANT = '1'
		EXPORT = NONE,
		'MAX_BODY_COUNT'
			IMPORT default = '999'
		EXPORT = NONE,
		'BODY_COUNT'
			IMPORT default = '0'
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY_A'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY_B'
alter parameter = (
		'RT'
			CONSTANT = '-t 30'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'FOLLOW_A'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'FOLLOW_B'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'FOLLOW_BODY'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE,
		'IGF'
			IMPORT default = '-I'
		EXPORT = NONE,
		'S'
			IMPORT default = ''
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'LOOP'
alter parameter = (
		'BODY_COUNT'
			COUNT('BODY')
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'REPLACE_LOOP'
alter parameter = (
		'MAX_BODY_COUNT'
			PARAMETER default = '999'
		EXPORT = NONE
	);

create or alter trigger 'BODY' on job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY'
with
	active,
	condition = '$BODY_COUNT < $MAX_BODY_COUNT',
	nomaster,
	nowarn,
	limit state = none,
	nosuspend,
	state = (
		'AGAIN'
	),
	submitcount = 10,
	submit SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'BODY',
	type = AFTER_FINAL;

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'
with
	TAG = none, TEXT = 'This example demonstrates the use of NONMASTER  AFTER_FINAL triggers to
implement loops replacing outer dependency and parameter references to point to the 
objects of the current loop body.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0180_REPLACE_LOOP'.'REPLACE_LOOP'
with
	TAG = none, TEXT = 'This example demonstrates the use of NONMASTER  AFTER_FINAL triggers to
implement loops replacing outer dependency and parameter references to point to the 
objects of the current loop body.';


create or alter named resource RESOURCE.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'LOCK'
with
	group = 'PUBLIC',
	usage = SYNCHRONIZING;

create or alter resource RESOURCE.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'LOCK' in GLOBAL.'EXAMPLES'
with
	group = 'PUBLIC',
	online;
create or alter folder SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'CRITICAL_REGION'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'CRITICAL_REGION_STICKY'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'LOCK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'LOCK'
			amount = 0
			NOKEEP
			STICKY
			lockmode = X
			state mapping = none
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'STEP_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'STEP_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'UNLOCK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'LOCK'
			amount = 0
			NOKEEP
			STICKY
			lockmode = X
			state mapping = none
			expired = none
			state = none
	),
	runtime = 1,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'CRITICAL_REGION'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'LOCK'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'STEP_2'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'STEP_1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'UNLOCK'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'CRITICAL_REGION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'CRITICAL_REGION'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'STEP_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'STEP_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'CRITICAL_REGION_STICKY'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'LOCK'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'CRITICAL_REGION'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'UNLOCK'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'
with
	TEXT = 'This Example shows how to protect a critical region of a batch using sticky resource allocations.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'CRITICAL_REGION_STICKY'
with
	TEXT = 'This Example shows how to protect a critical region of a batch using sticky resource allocations.';


cleanup folder SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY',
	job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'CRITICAL_REGION_STICKY',
	job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'LOCK',
	job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'CRITICAL_REGION',
	job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'UNLOCK',
	job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'STEP_1',
	job definition SYSTEM.'EXAMPLES'.'E0190_CRITICAL_REGION_STICKY'.'STEP_2'
);

create or alter resource state definition 'LOCKED';

create or alter resource state definition 'FREE';

create or alter resource state profile 'LOCK'
with
	initial state = 'FREE',
	states = (
		'LOCKED',
		'FREE'
	);

create or alter resource state mapping 'LOCK'
with map = (
		'SUCCESS' maps any to 'LOCKED'
);

create or alter resource state mapping 'UNLOCK'
with map = (
		'SUCCESS' maps any to 'FREE'
);

create or alter named resource RESOURCE.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'LOCK'
with
	group = 'PUBLIC',
	state profile = 'LOCK',
	usage = SYNCHRONIZING;

create or alter resource RESOURCE.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'LOCK' in GLOBAL.'EXAMPLES'
with
	group = 'PUBLIC',
	online;
create or alter folder SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'CRITICAL_REGION'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'CRITICAL_REGION_STATE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'LOCK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'LOCK'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'LOCK'
			expired = none
			state = (
				'FREE'
			)
	),
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'STEP_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'STEP_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'UNLOCK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'LOCK'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'UNLOCK'
			expired = none
			state = none
	),
	runtime = 1,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'CRITICAL_REGION'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'LOCK'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'STEP_2'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'STEP_1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'UNLOCK'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'CRITICAL_REGION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'CRITICAL_REGION'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'STEP_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'STEP_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'CRITICAL_REGION_STATE'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'CRITICAL_REGION'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'LOCK'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'UNLOCK'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'
with
	TEXT = 'This Example shows how to protect a critical region of a batch using resource states.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'CRITICAL_REGION_STATE'
with
	TEXT = 'This Example shows how to protect a critical region of a batch using resource states.';


cleanup folder SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE',
	job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'CRITICAL_REGION_STATE',
	job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'STEP_2',
	job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'LOCK',
	job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'UNLOCK',
	job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'STEP_1',
	job definition SYSTEM.'EXAMPLES'.'E0193_CRITICAL_REGION_STATE'.'CRITICAL_REGION'
);

create or alter named resource RESOURCE.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'LOCK'
with
	group = 'PUBLIC',
	usage = SYNCHRONIZING;

create or alter resource RESOURCE.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'LOCK' in GLOBAL.'EXAMPLES'
with
	group = 'PUBLIC',
	online;
create or alter folder SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'CRITICAL_REGION'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'CRITICAL_REGION_KEEP_FINAL'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'LOCK'
			amount = 0
			KEEP_FINAL
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'STEP_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'STEP_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'CRITICAL_REGION'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'CRITICAL_REGION_KEEP_FINAL'
		mode = JOB_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'STEP_2'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'STEP_1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'CRITICAL_REGION'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'STEP_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'STEP_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'CRITICAL_REGION_KEEP_FINAL'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'CRITICAL_REGION'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'
with
	TEXT = 'This Example shows how to protect a critical region of a batch using 
KEEP_FINAL resource with a JOB_FINAL dependent sub batch.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'CRITICAL_REGION_KEEP_FINAL'
with
	TEXT = 'This Example shows how to protect a critical region of a batch using 
KEEP_FINAL resource with a JOB_FINAL dependent sub batch.';


cleanup folder SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL',
	job definition SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'CRITICAL_REGION',
	job definition SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'STEP_1',
	job definition SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'STEP_2',
	job definition SYSTEM.'EXAMPLES'.'E0196_CRITICAL_REGION_KEEP_FINAL'.'CRITICAL_REGION_KEEP_FINAL'
);

create or alter named resource RESOURCE.'EXAMPLES'.'E0220_KEEP_FINAL'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0220_KEEP_FINAL'.'THREADS'
with
	group = 'PUBLIC',
	usage = SYSTEM;

create or alter named resource RESOURCE.'EXAMPLES'.'E0220_KEEP_FINAL'.'SUBTHREADS'
with
	group = 'PUBLIC',
	usage = SYSTEM;

create or alter resource RESOURCE.'EXAMPLES'.'E0220_KEEP_FINAL'.'THREADS' in GLOBAL.'EXAMPLES'
with
	amount = 2,
	group = 'PUBLIC',
	online;

create or alter resource RESOURCE.'EXAMPLES'.'E0220_KEEP_FINAL'.'SUBTHREADS' in GLOBAL.'EXAMPLES'
with
	amount = 8,
	group = 'PUBLIC',
	online;
create or alter folder SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL'.'KEEP_FINAL'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'dynsubmit.sh --host $SDMSHOST --port $SDMSPORT --id $JOBID --key $KEY --child THREAD $D $N $IGF $WT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL'.'KEEP_FINAL_SUBTHREAD'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0220_KEEP_FINAL'.'SUBTHREADS'
			amount = 1
			NOKEEP
	),
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" "Thread $PARENT_JOBTAG" "Subthread $JOBTAG" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL'.'KEEP_FINAL_THREAD'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	priority = 50,
	parameters = (
		'PARENT_JOBTAG'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0220_KEEP_FINAL'.'THREADS'
			amount = 1
			KEEP_FINAL
	),
	runtime = 1,
	runtime final = 0,
	run program = 'dynsubmit.sh --host $SDMSHOST --port $SDMSPORT --id $JOBID --key $KEY --child SUBTHREAD',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL'.'KEEP_FINAL'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL'.'KEEP_FINAL_THREAD'
		alias = THREAD
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL'.'KEEP_FINAL_THREAD'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL'.'KEEP_FINAL_SUBTHREAD'
		alias = SUBTHREAD
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL'.'KEEP_FINAL_THREAD'
alter parameter = (
		'PARENT_JOBTAG'
			CONSTANT = '$JOBTAG'
	);

cleanup folder SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL',
	job definition SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL'.'KEEP_FINAL',
	job definition SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL'.'KEEP_FINAL_SUBTHREAD',
	job definition SYSTEM.'EXAMPLES'.'E0220_KEEP_FINAL'.'KEEP_FINAL_THREAD'
);

create or alter named resource RESOURCE.'EXAMPLES'.'E0250_BATCH_WAIT'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0250_BATCH_WAIT'.'BATCHLOCK'
with
	group = 'PUBLIC',
	usage = SYNCHRONIZING;
create or alter folder SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'BATCH_WAIT'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'LOCK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0250_BATCH_WAIT'.'BATCHLOCK'
			amount = 0
			NOKEEP
			STICKY
			lockmode = X
			state mapping = none
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'MAIN'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'STEP_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'STEP_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'UNLOCK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0250_BATCH_WAIT'.'BATCHLOCK'
			amount = 0
			NOKEEP
			STICKY
			lockmode = X
			state mapping = none
			expired = none
			state = none
	),
	runtime = 1,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'MAIN'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'LOCK'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'STEP_2'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'STEP_1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'UNLOCK'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'MAIN'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'BATCH_WAIT'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'MAIN'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'UNLOCK'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'LOCK'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'MAIN'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'STEP_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'STEP_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

create or alter resource RESOURCE.'EXAMPLES'.'E0250_BATCH_WAIT'.'BATCHLOCK' in SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	factor = 1.0,
	requestable amount = 0,
	tag = none,
	trace base = none,
	trace interval = none,
	parameter = none;

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'
with
	TEXT = 'This Example shows how to avoid a batch running twice at the same time.
Processing will wait until the running batch instance is completed.
A folder resource is used to implement this without cluttering the global scope.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'BATCH_WAIT'
with
	TEXT = 'This Example shows how to avoid a batch running twice at the same time.
Processing will wait until the running batch instance is completed.
A folder resource is used to implement this without cluttering the global scope.';


cleanup folder SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT',
	job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'MAIN',
	job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'UNLOCK',
	job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'BATCH_WAIT',
	job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'STEP_1',
	job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'STEP_2',
	job definition SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'.'LOCK',
	resource RESOURCE.'EXAMPLES'.'E0250_BATCH_WAIT'.'BATCHLOCK' in SYSTEM.'EXAMPLES'.'E0250_BATCH_WAIT'
);

create or alter named resource RESOURCE.'EXAMPLES'.'E0255_BATCH_SKIP'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0255_BATCH_SKIP'.'BATCHLOCK'
with
	group = 'PUBLIC',
	usage = SYNCHRONIZING;
create or alter folder SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'BATCH_SKIP'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'LOCK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0255_BATCH_SKIP'.'BATCHLOCK'
			amount = 0
			NOKEEP
			STICKY
			lockmode = X
			state mapping = none
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'SKIPPED',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'MAIN'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'STEP_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'STEP_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'UNLOCK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0255_BATCH_SKIP'.'BATCHLOCK'
			amount = 0
			NOKEEP
			STICKY
			lockmode = X
			state mapping = none
			expired = none
			state = none
	),
	runtime = 1,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'MAIN'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'LOCK'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'STEP_2'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'STEP_1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'UNLOCK'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'MAIN'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'BATCH_SKIP'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'LOCK'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'MAIN'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'UNLOCK'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'MAIN'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'STEP_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'STEP_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

create or alter resource RESOURCE.'EXAMPLES'.'E0255_BATCH_SKIP'.'BATCHLOCK' in SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	factor = 1.0,
	requestable amount = 0,
	tag = none,
	trace base = none,
	trace interval = none,
	parameter = none;

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'
with
	TEXT = 'This Example shows how to avoid a batch running twice at the same time.
Processing will be skipped.
A folder resource is used to implement this without cluttering the global scope.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'BATCH_SKIP'
with
	TEXT = 'This Example shows how to avoid a batch running twice at the same time.
Processing will be skipped.
A folder resource is used to implement this without cluttering the global scope.';


cleanup folder SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP',
	job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'LOCK',
	job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'MAIN',
	job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'BATCH_SKIP',
	job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'UNLOCK',
	job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'STEP_1',
	job definition SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'.'STEP_2',
	resource RESOURCE.'EXAMPLES'.'E0255_BATCH_SKIP'.'BATCHLOCK' in SYSTEM.'EXAMPLES'.'E0255_BATCH_SKIP'
);

create or alter folder SYSTEM.'EXAMPLES'.'E0270_RUNTIME_ALERT'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0270_RUNTIME_ALERT'.'ALERTER'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	run program = 'SDMSpopup.sh "ALARM!!!!!"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0270_RUNTIME_ALERT'.'RUNTIME_ALERT'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 1,
	run program = 'SDMSpopup.sh "just wait a moment"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0270_RUNTIME_ALERT'.'RUNTIME_ALERT'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0270_RUNTIME_ALERT'.'ALERTER'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		translation = none
		ignore dependency = none
);

create or alter trigger 'ALERTER' on job definition SYSTEM.'EXAMPLES'.'E0270_RUNTIME_ALERT'.'RUNTIME_ALERT'
with
	check = 1 MINUTE,
	condition = '$SYSDATE - $RUNNABLETIME > $EXPRUNTIME',
	nowarn,
	nosuspend,
	nomaster,
	state = none,
	submitcount = 1,
	submit SYSTEM.'EXAMPLES'.'E0270_RUNTIME_ALERT'.'ALERTER',
	type = UNTIL_FINISHED;


cleanup folder SYSTEM.'EXAMPLES'.'E0270_RUNTIME_ALERT'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0270_RUNTIME_ALERT',
	job definition SYSTEM.'EXAMPLES'.'E0270_RUNTIME_ALERT'.'ALERTER',
	job definition SYSTEM.'EXAMPLES'.'E0270_RUNTIME_ALERT'.'RUNTIME_ALERT',
	trigger 'ALERTER' on job definition SYSTEM.'EXAMPLES'.'E0270_RUNTIME_ALERT'.'RUNTIME_ALERT'
);

create or alter folder SYSTEM.'EXAMPLES'.'E0275_PROGRESS'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = (
		'PERC_PROCESSED',
		'DETAIL_BOOKMARK'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'PERC_PROCESSED',
		'STEP'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = '/bin/bash -c "P=0; while [ \\$P -lt 100 ]; do P=`expr \\$P + $STEP`; if [ \\$P -gt 100 ]; then P=100; fi; sleep 2; sdms-set_variable --host $SDMSHOST --port $SDMSPORT --jid $JOBID --key $KEY PERC_PROCESSED \\$P; done"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'STEP',
		'PERC_PROCESSED'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = '/bin/bash -c "P=0; while [ \\$P -lt 100 ]; do P=`expr \\$P + $STEP`; if [ \\$P -gt 100 ]; then P=100; fi; sleep 2; sdms-set_variable --host $SDMSHOST --port $SDMSPORT --jid $JOBID --key $KEY PERC_PROCESSED \\$P; done"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS_3'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'STEP',
		'PERC_PROCESSED'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = '/bin/bash -c "P=0; while [ \\$P -lt 100 ]; do P=`expr \\$P + $STEP`; if [ \\$P -gt 100 ]; then P=100; fi; sleep 2; sdms-set_variable --host $SDMSHOST --port $SDMSPORT --jid $JOBID --key $KEY PERC_PROCESSED \\$P; done"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS_3'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS'
alter parameter = (
		'PERC_PROCESSED'
			AVG('PERC_PROCESSED'),
		'DETAIL_BOOKMARK'
			CONSTANT = 'E0275_PROGRESS'
	);

alter job definition SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS_1'
alter parameter = (
		'PERC_PROCESSED'
			RESULT default = '0',
		'STEP'
			PARAMETER default = '5'
	);

alter job definition SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS_2'
alter parameter = (
		'STEP'
			PARAMETER default = '4',
		'PERC_PROCESSED'
			RESULT default = '0'
	);

alter job definition SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS_3'
alter parameter = (
		'STEP'
			PARAMETER default = '6',
		'PERC_PROCESSED'
			RESULT default = '0'
	);


cleanup folder SYSTEM.'EXAMPLES'.'E0275_PROGRESS'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0275_PROGRESS',
	job definition SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS',
	job definition SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS_1',
	job definition SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS_2',
	job definition SYSTEM.'EXAMPLES'.'E0275_PROGRESS'.'PROGRESS_3'
);

create or alter named resource RESOURCE.'EXAMPLES'.'E0280_RESOURCE_VARIABLE'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0280_RESOURCE_VARIABLE'.'TEMPSPACE'
with
	group = 'PUBLIC',
	state profile = none,
	usage = SYSTEM,
	parameters = (
		'TEMPDIR' LOCAL_CONSTANT = '/tmp'
	);

create or alter resource RESOURCE.'EXAMPLES'.'E0280_RESOURCE_VARIABLE'.'TEMPSPACE' in GLOBAL.'EXAMPLES'.'HOST_1'.'SERVER'
with
	amount = 100,
	group = 'PUBLIC',
	online,
	factor = 1.0,
	requestable amount = 100,
	tag = none,
	trace base = none,
	trace interval = none,
	parameter = (
		'TEMPDIR' = '/tmp/host_1'
	);


create or alter resource RESOURCE.'EXAMPLES'.'E0280_RESOURCE_VARIABLE'.'TEMPSPACE' in GLOBAL.'EXAMPLES'.'HOST_2'.'SERVER'
with
	amount = 100,
	group = 'PUBLIC',
	online,
	factor = 1.0,
	requestable amount = 100,
	tag = none,
	trace base = none,
	trace interval = none,
	parameter = (
		'TEMPDIR' = '/tmp/host_2'
	);


create or alter resource RESOURCE.'EXAMPLES'.'E0280_RESOURCE_VARIABLE'.'TEMPSPACE' in GLOBAL.'EXAMPLES'.'LOCALHOST'.'SERVER'
with
	amount = 100,
	group = 'PUBLIC',
	online,
	factor = 1.0,
	requestable amount = 100,
	tag = none,
	trace base = none,
	trace interval = none,
	parameter = (
		'TEMPDIR' = '/tmp/localhost'
	);

create or alter folder SYSTEM.'EXAMPLES'.'E0280_RESOURCE_VARIABLE'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0280_RESOURCE_VARIABLE'.'RESOURCE_VARIABLE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'TEMPDIR'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0280_RESOURCE_VARIABLE'.'TEMPSPACE'
			amount = 1
			NOKEEP
	),
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "Mein tempdir = $TEMPDIR"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0280_RESOURCE_VARIABLE'.'RESOURCE_VARIABLE'
alter parameter = (
		'TEMPDIR'
			reference resource RESOURCE.'EXAMPLES'.'E0280_RESOURCE_VARIABLE'.'TEMPSPACE' ('TEMPDIR')
	);

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0280_RESOURCE_VARIABLE'.'RESOURCE_VARIABLE'
with
	TEXT = 'This example shows the use of resource variables to provide resource specific information 
to the job started.
In this case a resource TEMPSPACE is allocated and the resource tells the job where this
temporary space is located within the file system.';


cleanup folder SYSTEM.'EXAMPLES'.'E0280_RESOURCE_VARIABLE'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0280_RESOURCE_VARIABLE',
	job definition SYSTEM.'EXAMPLES'.'E0280_RESOURCE_VARIABLE'.'RESOURCE_VARIABLE'
);

create or alter resource state definition 'NEW';

create or alter resource state definition 'VALID';

create or alter resource state definition 'INVALID';

create or alter resource state profile 'VALID_INVALID'
with
	initial state = 'NEW',
	states = (
		'INVALID',
		'VALID'
	);

create or alter resource state mapping 'TOGGLE'
with map = (
		'SUCCESS' maps 'INVALID' to 'VALID',
		'SUCCESS' maps 'VALID' to 'INVALID',
		'SUCCESS' maps 'NEW' to 'VALID'
);

create or alter named resource RESOURCE.'EXAMPLES'.'E0290_RESOURCE_TRIGGER'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0290_RESOURCE_TRIGGER'.'TOUCH_ALERT'
with
	group = 'PUBLIC',
	state profile = 'VALID_INVALID',
	usage = SYNCHRONIZING;

create or alter resource RESOURCE.'EXAMPLES'.'E0290_RESOURCE_TRIGGER'.'TOUCH_ALERT' in GLOBAL.'EXAMPLES'
with
	group = 'PUBLIC',
	online;

create or alter folder SYSTEM.'EXAMPLES'.'E0290_RESOURCE_TRIGGER'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0290_RESOURCE_TRIGGER'.'ALERT'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	run program = 'SDMSpopup.sh "Resource Trigger Alert"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0290_RESOURCE_TRIGGER'.'RESOURCE_TRIGGER'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0290_RESOURCE_TRIGGER'.'TOUCH_ALERT'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'TOGGLE'
			expired = none
			state = none
	),
	runtime = 0,
	run program = 'SDMSpopup.sh $JOBNAME',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0290_RESOURCE_TRIGGER'.'RESOURCE_TRIGGER'
with
	TEXT = 'This example shows that the system can react automatically on resource state changes';

cleanup folder SYSTEM.'EXAMPLES'.'E0290_RESOURCE_TRIGGER'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0290_RESOURCE_TRIGGER',
	job definition SYSTEM.'EXAMPLES'.'E0290_RESOURCE_TRIGGER'.'ALERT',
	job definition SYSTEM.'EXAMPLES'.'E0290_RESOURCE_TRIGGER'.'RESOURCE_TRIGGER'
);


create or alter trigger 'ALERT' on resource RESOURCE.'EXAMPLES'.'E0290_RESOURCE_TRIGGER'.'TOUCH_ALERT' IN GLOBAL.'EXAMPLES'
with
        group = 'PUBLIC',
        condition = none,
        nowarn,
        nosuspend,
        master,
        state = none,
        submit SYSTEM.'EXAMPLES'.'E0290_RESOURCE_TRIGGER'.'ALERT',
        type = IMMEDIATE_LOCAL;

create or alter named resource RESOURCE.'EXAMPLES'.'E0295_RESOURCE_LINK'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0295_RESOURCE_LINK'.'SERVER_CPU_UNITS'
with
	group = 'PUBLIC',
	usage = SYSTEM;

create or alter resource RESOURCE.'EXAMPLES'.'E0295_RESOURCE_LINK'.'SERVER_CPU_UNITS' in GLOBAL.'EXAMPLES'.'LOCALHOST'
with
	amount = 4,
	group = 'PUBLIC',
	online,
	requestable amount = 1;

link resource RESOURCE.'EXAMPLES'.'E0295_RESOURCE_LINK'.'SERVER_CPU_UNITS' in GLOBAL.'EXAMPLES'.'LOCALHOST' to scope GLOBAL.'EXAMPLES'.'HOST_1' force;

link resource RESOURCE.'EXAMPLES'.'E0295_RESOURCE_LINK'.'SERVER_CPU_UNITS' in GLOBAL.'EXAMPLES'.'LOCALHOST' to scope GLOBAL.'EXAMPLES'.'HOST_2' force;
create or alter folder SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK'.'ON_HOST_1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0295_RESOURCE_LINK'.'SERVER_CPU_UNITS'
			amount = 1
			NOKEEP
	),
	runtime = 1,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK'.'ON_HOST_2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_2',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0295_RESOURCE_LINK'.'SERVER_CPU_UNITS'
			amount = 1
			NOKEEP
	),
	runtime = 0,
	runtime final = 0,
	run program = 'SDMSpopup.sh "$JOBNAME" -c "1=FAILURE:0=SUCCESS" $IGF $RT $S',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK'.'RESOURCE_LINK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK'.'RESOURCE_LINK'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK'.'ON_HOST_1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK'.'ON_HOST_2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

create or alter comment on folder SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK'
with
	TEXT = 'This example shows how jobs running in one scope can allocate resources in another
using resource links.';

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK'.'RESOURCE_LINK'
with
	TEXT = 'This example shows how jobs running in one scope can allocate resources in another
using resource links.';


cleanup folder SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK',
	job definition SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK'.'ON_HOST_1',
	job definition SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK'.'RESOURCE_LINK',
	job definition SYSTEM.'EXAMPLES'.'E0295_RESOURCE_LINK'.'ON_HOST_2'
);

create or alter resource state definition 'NEW';

create or alter resource state definition 'VALID';

create or alter resource state definition 'INVALID';

create or alter resource state profile 'VALID_INVALID'
with
	initial state = 'NEW',
	states = (
		'INVALID',
		'VALID'
	);

create or alter resource state mapping 'TOGGLE'
with map = (
		'SUCCESS' maps 'INVALID' to 'VALID',
		'SUCCESS' maps 'VALID' to 'INVALID',
		'SUCCESS' maps 'NEW' to 'VALID'
);

create or alter named resource RESOURCE.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'
with
        group = 'PUBLIC',
        usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'.'TOUCH_ALERT_COND'
with
	group = 'PUBLIC',
	state profile = 'VALID_INVALID',
	usage = SYNCHRONIZING,
	parameters = (
		'PARM1' LOCAL_CONSTANT = 'parm1'
	);

create or alter resource RESOURCE.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'.'TOUCH_ALERT_COND' in GLOBAL.'EXAMPLES'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	factor = 1.0,
	requestable amount = 0,
	tag = none,
	trace base = none,
	trace interval = none,
	parameter = none;

create or alter folder SYSTEM.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'.'ALERT'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	run program = 'SDMSpopup.sh "Resource Trigger Alert" $TRIGGERNAME',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'.'RESOURCE_TRIGGER'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'.'TOUCH_ALERT_COND'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'TOGGLE'
			expired = none
			state = none
	),
	runtime = 0,
	run program = 'SDMSpopup.sh $JOBNAME',
	NOSUSPEND,
	type = JOB,
	workdir = none;


cleanup folder SYSTEM.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER',
	job definition SYSTEM.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'.'ALERT',
	job definition SYSTEM.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'.'RESOURCE_TRIGGER'
);

create or alter trigger 'ALERT_FALSE' on resource RESOURCE.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'.'TOUCH_ALERT_COND' IN GLOBAL.'EXAMPLES'
with
	group = 'PUBLIC',
	condition = '$PARM1 == "stimmt nicht"',
	nowarn,
	nosuspend,
	master,
	state = none,
	submit SYSTEM.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'.'ALERT',
	type = IMMEDIATE_LOCAL;

create or alter trigger 'ALERT_TRUE' on resource RESOURCE.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'.'TOUCH_ALERT_COND' IN GLOBAL.'EXAMPLES'
with
	group = 'PUBLIC',
	condition = '$PARM1 == "parm1"',
	nowarn,
	nosuspend,
	master,
	state = none,
	submit SYSTEM.'EXAMPLES'.'E0300_CONDITIONAL_RESOURCE_TRIGGER'.'ALERT',
	type = IMMEDIATE_LOCAL;


create or alter exit state definition 'PLAY1';
create or alter exit state definition 'PLAY2';
create or alter exit state definition 'PLAY3';
create or alter exit state definition 'PLAY4';
create or alter exit state definition 'PLAY5';
create or alter exit state definition 'PLAY6';
create or alter exit state definition 'PLAY7';
create or alter exit state definition 'PLAY8';
create or alter exit state definition 'PLAY9';
create or alter exit state definition 'YES';
create or alter exit state definition 'NO';
create or alter exit state definition 'WON';
create or alter exit state definition 'UNDECIDED';
create or alter exit state definition 'X';
create or alter exit state definition 'NO_X';

create or alter exit state mapping 'CHECK1'
with map = (
			'FAILURE',
		0,	'PLAY1',
		1,	'FAILURE'
);
create or alter exit state mapping 'CHECK2'
with map = (
			'FAILURE',
		0,	'PLAY2',
		1,	'FAILURE'
);
create or alter exit state mapping 'CHECK3'
with map = (
			'FAILURE',
		0,	'PLAY3',
		1,	'FAILURE'
);
create or alter exit state mapping 'CHECK4'
with map = (
			'FAILURE',
		0,	'PLAY4',
		1,	'FAILURE'
);
create or alter exit state mapping 'CHECK5'
with map = (
			'FAILURE',
		0,	'PLAY5',
		1,	'FAILURE'
);
create or alter exit state mapping 'CHECK6'
with map = (
			'FAILURE',
		0,	'PLAY6',
		1,	'FAILURE'
);
create or alter exit state mapping 'CHECK7'
with map = (
			'FAILURE',
		0,	'PLAY7',
		1,	'FAILURE'
);
create or alter exit state mapping 'CHECK8'
with map = (
			'FAILURE',
		0,	'PLAY8',
		1,	'FAILURE'
);
create or alter exit state mapping 'CHECK9'
with map = (
			'FAILURE',
		0,	'PLAY9',
		1,	'FAILURE'
);
create or alter exit state mapping 'TICTACTOE'
with map = (
			'FAILURE',
		1,	'PLAY1',
		2,	'PLAY2',
		3,	'PLAY3',
		4,	'PLAY4',
		5,	'PLAY5',
		6,	'PLAY6',
		7,	'PLAY7',
		8,	'PLAY8',
		9,	'PLAY9',
		10,	'FAILURE'
);
create or alter exit state mapping 'X_NO_X'
with map = (
			'X'
);

create or alter exit state translation 'TICTACTOE_WIN'
with translation = (
		'YES' to 'WON',
		'NO' to 'UNDECIDED'
);

create or alter exit state profile 'TICTACTOE2'
with
		default mapping = 'TICTACTOE',
		states = (
			'FAILURE' final,
			'PLAY1' final,
			'PLAY2' final,
			'PLAY3' final,
			'PLAY4' final,
			'PLAY5' final,
			'PLAY6' final,
			'PLAY7' final,
			'PLAY8' final,
			'PLAY9' final,
			'SKIPPED' final unreachable
		);

create or alter exit state profile 'TICTACTOE_WIN'
with
		states = (
			'WON' final unreachable,
			'UNDECIDED' final
		);

create or alter exit state profile 'X_NO_X'
with
		default mapping = 'X_NO_X',
		states = (
			'NO_X' final,
			'X' final unreachable
		);

create or alter exit state profile 'NO_YES'
with
		states = (
			'NO' final unreachable,
			'YES' final
		);


create or alter resource state definition 'X';
create or alter resource state definition 'O';
create or alter resource state definition 'EMPTY';

create or alter resource state profile 'X_O'
with
	initial state = 'X',
	states = (
		'O',
		'X'
	);

create or alter resource state profile 'TICTACTOE'
with
	initial state = 'EMPTY',
	states = (
		'EMPTY',
		'O',
		'X'
	);

create or alter resource state mapping 'TICTACTOE_TOGGLE'
with map = (
		'X' maps 'O' to 'X',
		'X' maps 'X' to 'O'
);

create or alter resource state mapping 'FELD1O'
with map = (
		'PLAY1' maps 'EMPTY' to 'O'
);

create or alter resource state mapping 'FELD1X'
with map = (
		'PLAY1' maps 'EMPTY' to 'X'
);

create or alter resource state mapping 'FELD2O'
with map = (
		'PLAY2' maps 'EMPTY' to 'O'
);

create or alter resource state mapping 'FELD2X'
with map = (
		'PLAY2' maps 'EMPTY' to 'X'
);

create or alter resource state mapping 'FELD3O'
with map = (
		'PLAY3' maps 'EMPTY' to 'O'
);

create or alter resource state mapping 'FELD3X'
with map = (
		'PLAY3' maps 'EMPTY' to 'X'
);

create or alter resource state mapping 'FELD4O'
with map = (
		'PLAY4' maps 'EMPTY' to 'O'
);

create or alter resource state mapping 'FELD4X'
with map = (
		'PLAY4' maps 'EMPTY' to 'X'
);

create or alter resource state mapping 'FELD5O'
with map = (
		'PLAY5' maps 'EMPTY' to 'O'
);

create or alter resource state mapping 'FELD5X'
with map = (
		'PLAY5' maps 'EMPTY' to 'X'
);

create or alter resource state mapping 'FELD6O'
with map = (
		'PLAY6' maps 'EMPTY' to 'O'
);

create or alter resource state mapping 'FELD6X'
with map = (
		'PLAY6' maps 'EMPTY' to 'X'
);

create or alter resource state mapping 'FELD7O'
with map = (
		'PLAY7' maps 'EMPTY' to 'O'
);

create or alter resource state mapping 'FELD7X'
with map = (
		'PLAY7' maps 'EMPTY' to 'X'
);

create or alter resource state mapping 'FELD8O'
with map = (
		'PLAY8' maps 'EMPTY' to 'O'
);

create or alter resource state mapping 'FELD8X'
with map = (
		'PLAY8' maps 'EMPTY' to 'X'
);

create or alter resource state mapping 'FELD9O'
with map = (
		'PLAY9' maps 'EMPTY' to 'O'
);

create or alter resource state mapping 'FELD9X'
with map = (
		'PLAY9' maps 'EMPTY' to 'X'
);

create or alter named resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'
with
	group = 'PUBLIC',
	state profile = none,
	usage = CATEGORY,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY1'
with
	group = 'PUBLIC',
	state profile = 'TICTACTOE',
	usage = SYNCHRONIZING,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY2'
with
	group = 'PUBLIC',
	state profile = 'TICTACTOE',
	usage = SYNCHRONIZING,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY3'
with
	group = 'PUBLIC',
	state profile = 'TICTACTOE',
	usage = SYNCHRONIZING,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY4'
with
	group = 'PUBLIC',
	state profile = 'TICTACTOE',
	usage = SYNCHRONIZING,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY5'
with
	group = 'PUBLIC',
	state profile = 'TICTACTOE',
	usage = SYNCHRONIZING,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY6'
with
	group = 'PUBLIC',
	state profile = 'TICTACTOE',
	usage = SYNCHRONIZING,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY7'
with
	group = 'PUBLIC',
	state profile = 'TICTACTOE',
	usage = SYNCHRONIZING,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY8'
with
	group = 'PUBLIC',
	state profile = 'TICTACTOE',
	usage = SYNCHRONIZING,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY9'
with
	group = 'PUBLIC',
	state profile = 'TICTACTOE',
	usage = SYNCHRONIZING,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'TOGGLE'
with
	group = 'PUBLIC',
	state profile = 'X_O',
	usage = SYNCHRONIZING,
	parameters = none;



create or alter folder SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter folder SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter folder SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter folder SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter folder SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY1'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'O'
			)
	),
	runtime = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY2'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'O'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK3'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY3'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'O'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK4'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY4'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'O'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK5'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY5'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'O'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK6'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY6'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'O'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK7'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY7'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'O'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK8'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY8'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'O'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK9'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY9'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'O'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK_WIN_O'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'TICTACTOE_WIN',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'WON'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = any,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_123'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_147'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_159'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_258'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_357'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_369'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_456'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_789'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY1'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'X'
			)
	),
	runtime = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY2'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'X'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK3'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY3'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'X'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK4'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY4'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'X'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK5'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY5'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'X'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK6'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY6'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'X'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK7'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY7'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'X'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK8'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY8'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'X'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK9'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY9'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = (
				'X'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK_WIN_X'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'TICTACTOE_WIN',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'WON'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = any,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_123'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_147'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_159'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_258'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_357'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_369'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_456'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_789'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	parameters = none,
	profile = 'NO_YES',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = MILESTONE,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'ENDSCORE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	run program = 'sh -c "SDMSpopup.sh -c "0=OK" `echo \'show job $MASTERID;\' | sdmsh | awk \'/DEFINED_RESOURCES :/ { start=1; i=0; } /TICTACTOE.PLAY/ { if(start==1) {if($6 != "\'"EMPTY"\'") {board[i] = $6;} else {board[i] = i+1}; i++;} } /TICTACTOE.TOGGLE/ { if(start==1) {spieler = $6} } END {print "\'"Endscore"\'"; for(i=0;i<9;i+=3) { printf("\'"\'"%s|%s|%s\\n"\'"\'", board[i], board[i+1], board[i+2]); }} \'`"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	run program = 'sh -c "SDMSpopup.sh -c \'1=1:2=2:3=3:4=4:5=5:6=6:7=7:8=8:9=9\' `echo \'show job $MASTERID;\' | sdmsh | awk \'/DEFINED_RESOURCES :/ { start=1; i=0; } /TICTACTOE.PLAY/ { if(start==1) {if($6 != "\'"EMPTY"\'") {board[i] = $6;} else {board[i] = i+1}; i++;} } /TICTACTOE.TOGGLE/ { if(start==1) {player = ($6 == "\'"X"\'" ? "\'"O"\'" : "\'"X"\'")} } END {print "\'"\'"Player:"\'"\'" player; for(i=0;i<9;i+=3) { printf("\'"\'"%s|%s|%s\\n"\'"\'", board[i], board[i+1], board[i+2]); }} \'`"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TOGGLE_IS_O'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'TOGGLE'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'TICTACTOE_TOGGLE'
			expired = none
			state = (
				'O'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TOGGLE_IS_X'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'X_NO_X',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'TOGGLE'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'TICTACTOE_TOGGLE'
			expired = none
			state = (
				'X'
			)
	),
	runtime = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'NO_X',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'TICTACTOE_WIN',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK1',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY1'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD1O'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK2',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY2'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD2O'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK3'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK3',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY3'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD3O'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK4'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK4',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY4'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD4O'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK5'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK5',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY5'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD5O'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK6'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK6',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY6'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD6O'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK7'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK7',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY7'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD7O'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK8'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK8',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY8'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD8O'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK9'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK9',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY9'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD9O'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'DRAW_O'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK1'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK1',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY1'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD1X'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK2',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY2'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD2X'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK3'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK3',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY3'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD3X'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK4'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK4',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY4'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD4X'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK5'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK5',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY5'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD5X'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK6'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK6',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY6'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD6X'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK7'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK7',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY7'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD7X'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK8'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK8',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY8'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD8X'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK9'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@HOST_1',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,mapping = 
	'CHECK9',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY9'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FELD9X'
			expired = none
			state = (
				'EMPTY'
			)
	),
	runtime = 1,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'FAILURE',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'DRAW_X'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'TICTACTOE2',
	required = none,
	rerun program = none,
	resource = none,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK_WIN_O'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'DRAW_O'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'WON'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_123'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_147'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_159'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_258'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_357'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_369'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_456'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_789'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_123'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK2'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK3'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_147'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK4'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK7'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_159'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK5'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK9'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_258'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK2'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK5'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK8'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_357'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK3'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK5'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK7'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_369'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK3'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK6'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK9'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_456'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK4'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK5'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK6'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_789'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK7'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK8'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK9'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK_WIN_X'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'DRAW_X'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'WON'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_123'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_147'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_159'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_258'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_357'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_369'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_456'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_789'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'YES'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_123'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK2'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK3'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_147'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK4'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK7'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_159'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK1'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK5'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK9'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_258'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK2'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK5'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK8'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_357'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK3'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK5'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK7'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_369'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK3'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK6'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK9'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_456'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK4'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK5'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK6'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_789'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK7'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK8'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		),
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK9'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'ENDSCORE'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK1'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY1'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK2'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY2'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK3'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY3'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK4'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY4'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK5'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY5'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK6'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY6'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK7'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY7'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK8'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY8'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK9'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY9'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'DRAW_O'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TOGGLE_IS_O'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK1'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY1'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK2'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY2'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK3'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY3'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK4'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY4'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK5'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY5'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK6'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY6'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK7'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY7'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK8'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY8'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK9'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'PLAY9'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'DRAW_X'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TOGGLE_IS_X'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'X'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK_WIN_O'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK3'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK4'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK5'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK6'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK7'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK8'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK9'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'WON'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = 'TICTACTOE_WIN'
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_123'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_147'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_159'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_258'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_357'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_369'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_456'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_789'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK_WIN_X'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK3'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK4'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK5'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK6'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK7'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK8'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK9'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'WON'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = 'TICTACTOE_WIN'
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_123'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_147'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_159'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_258'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_357'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_369'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_456'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_789'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'ENDSCORE'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK_WIN_O'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK_WIN_X'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TOGGLE_IS_O'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TOGGLE_IS_X'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'DRAW_O'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'DRAW_X'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'DRAW_O'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK3'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK4'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK5'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK6'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK7'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK8'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK9'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'DRAW_X'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK1'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK2'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK3'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK4'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK5'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK6'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK7'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK8'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK9'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

create or alter resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY1' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	requestable amount = 0,
	state = 'EMPTY',
	parameter = none;

create or alter resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY2' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	requestable amount = 0,
	state = 'EMPTY',
	parameter = none;

create or alter resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY3' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	requestable amount = 0,
	state = 'EMPTY',
	parameter = none;

create or alter resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY4' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	requestable amount = 0,
	state = 'EMPTY',
	parameter = none;

create or alter resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY5' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	requestable amount = 0,
	state = 'EMPTY',
	parameter = none;

create or alter resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY6' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	requestable amount = 0,
	state = 'EMPTY',
	parameter = none;

create or alter resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY7' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	requestable amount = 0,
	state = 'EMPTY',
	parameter = none;

create or alter resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY8' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	requestable amount = 0,
	state = 'EMPTY',
	parameter = none;

create or alter resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY9' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	requestable amount = 0,
	state = 'EMPTY',
	parameter = none;

create or alter resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'TOGGLE' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	requestable amount = 0,
	state = 'X',
	parameter = none;

create or alter trigger 'DRAW' on job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW'
with
	condition = none,
	nowarn,
	nosuspend,
	nomaster,
	state = (
		'UNDECIDED'
	),
	submitcount = 8,
	submit SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW',
	type = AFTER_FINAL;

create or alter trigger 'DRAW_O' on job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'DRAW_O'
with
	condition = none,
	nowarn,
	nosuspend,
	nomaster,
	state = (
		'FAILURE'
	),
	submitcount = 5,
	submit SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'DRAW_O',
	type = AFTER_FINAL;

create or alter trigger 'DRAW_X' on job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'DRAW_X'
with
	condition = none,
	nowarn,
	nosuspend,
	nomaster,
	state = (
		'FAILURE'
	),
	submitcount = 5,
	submit SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'DRAW_X',
	type = AFTER_FINAL;

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE'
with
	TEXT =
'This (complex) example shows that the system is powerful enough to implement
a game engine.

The game engine knows who\'s turn it is, validates the moves and checks
if a winning position is reached. In the latter case, the final position
is shown and the game ends.

The game state is kept in ten resources PLAY1-PLAY9 and TOGGLE.
Jobs like TOGGLE_IS_X are used to translate resource states to exit states
The jobs ENDSCORE and REQUEST_ACTION use access to the scheduling system
in order to be able to render the board.
';



cleanup folder SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0330_TICTACTOE',
	folder SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O',
	folder SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X',
	folder SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O',
	folder SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK1',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK2',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK3',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK4',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK5',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK6',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK7',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK8',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK9',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'CHECK_WIN_O',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'WON',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_123',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_147',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_159',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_258',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_357',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_369',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_456',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_O'.'MS_789',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK1',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK2',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK3',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK4',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK5',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK6',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK7',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK8',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK9',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'CHECK_WIN_X',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'WON',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_123',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_147',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_159',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_258',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_357',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_369',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_456',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'CHECK_WIN_X'.'MS_789',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'ENDSCORE',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'REQUEST_ACTION',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TOGGLE_IS_O',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TOGGLE_IS_X',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK1',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK2',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK3',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK4',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK5',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK6',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK7',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK8',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'CHECK9',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'DRAW_O',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK1',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK2',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK3',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK4',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK5',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK6',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK7',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK8',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'CHECK9',
	job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'DRAW_X',
	resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY1' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE',
	resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY2' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE',
	resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY3' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE',
	resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY4' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE',
	resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY5' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE',
	resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY6' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE',
	resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY7' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE',
	resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY8' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE',
	resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'PLAY9' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE',
	resource RESOURCE.'EXAMPLES'.'E0330_TICTACTOE'.'TOGGLE' in SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'TIC_TAC_TOE',
	trigger 'DRAW' on job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW',
	trigger 'DRAW_O' on job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_O'.'DRAW_O',
	trigger 'DRAW_X' on job definition SYSTEM.'EXAMPLES'.'E0330_TICTACTOE'.'DRAW_X'.'DRAW_X'
);

create or alter exit state definition 'YES';

create or alter exit state definition 'NO';

create or alter exit state mapping 'DEADLINE_CHECK'
with map = (
			'FAILURE',
		0,	'SUCCESS',
		1,	'SKIPPED',
		2,	'FAILURE'
);

create or alter exit state profile 'DEADLINE_CHECK'
with
		default mapping = 'DEADLINE_CHECK',
		states = (
			'FAILURE' restartable broken,
			'SUCCESS' final,
			'SKIPPED' final unreachable
		);

create or alter named resource RESOURCE.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING'.'DEADLINE'
with
	group = 'PUBLIC',
	state profile = 'TIMESTAMP',
	usage = SYNCHRONIZING,
	parameters = (
		'DEADLINE' CONSTANT = '$TIMESTAMP'
	);

create or alter resource RESOURCE.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING'.'DEADLINE' in GLOBAL.'EXAMPLES'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	factor = 1.0,
	requestable amount = 0,
	tag = none,
	trace base = none,
	trace interval = none,
	state = 'TOUCHED',
	parameter = none;
create or alter folder SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'DEADLINE_CHECK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'DEADLINE',
		'EXPECTED_RUNTIME'
	),
	profile = 'DEADLINE_CHECK',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING'.'DEADLINE'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = 'sh -c "NOW=`date +%s`
if [ `expr \\$NOW + $EXPECTED_RUNTIME` -gt $DEADLINE ]
then
    echo \'Deadline reached\' ; exit 1
else
    echo \'Ok to run\' ; exit 0
fi"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'E0360_DEADLINE_SCHEDULING_SKIP'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = (
		'DEADLINE'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'JOB'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'EXPECTED_RUNTIME'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 3600,
	runtime final = 3600,
	run program = 'SDMSpopup.sh "$JOBNAME"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'SET_DEADLINE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'DEADLINE'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'sh -c \'echo "whenever error disconnect 1
ALTER RESOURCE RESOURCE.EXAMPLES.E0360_DEADLINE_SCHEDULING.DEADLINE in GLOBAL.EXAMPLES WITH TOUCH = \'"\'"\'\'$DEADLINE\'\'"\'"\';" | sdmsh -v\'',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'DEADLINE_CHECK'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'SET_DEADLINE'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'JOB'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'DEADLINE_CHECK'
		mode = JOB_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'DEADLINE_CHECK'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'JOB'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'E0360_DEADLINE_SCHEDULING_SKIP'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'DEADLINE_CHECK'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'SET_DEADLINE'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'DEADLINE_CHECK'
alter parameter = (
		'DEADLINE'
			reference resource RESOURCE.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING'.'DEADLINE' ('DEADLINE'),
		'EXPECTED_RUNTIME'
			reference child SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'JOB' ('EXPECTED_RUNTIME')
	);

alter job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'E0360_DEADLINE_SCHEDULING_SKIP'
alter parameter = (
		'DEADLINE'
			PARAMETER default = 'T12:00'
	);

alter job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'JOB'
alter parameter = (
		'EXPECTED_RUNTIME'
			CONSTANT = '$EXPRUNTIME'
	);

alter job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'SET_DEADLINE'
alter parameter = (
		'DEADLINE'
			PARAMETER default = 'T12'
	);


cleanup folder SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP',
	job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'DEADLINE_CHECK',
	job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'E0360_DEADLINE_SCHEDULING_SKIP',
	job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'JOB',
	job definition SYSTEM.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING_SKIP'.'SET_DEADLINE'
);

create or alter exit state definition 'YES';

create or alter exit state definition 'NO';

create or alter exit state mapping 'DEADLINE_CHECK'
with map = (
			'FAILURE',
		0,	'SUCCESS',
		1,	'SKIPPED',
		2,	'FAILURE'
);

create or alter exit state profile 'DEADLINE_CHECK'
with
		default mapping = 'DEADLINE_CHECK',
		states = (
			'FAILURE' restartable broken,
			'SUCCESS' final,
			'SKIPPED' final unreachable
		);

create or alter named resource RESOURCE.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING'
with
	group = 'PUBLIC',
	usage = CATEGORY;

create or alter named resource RESOURCE.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING'.'DEADLINE'
with
	group = 'PUBLIC',
	state profile = 'TIMESTAMP',
	usage = SYNCHRONIZING,
	parameters = (
		'DEADLINE' CONSTANT = '$TIMESTAMP'
	);

create or alter resource RESOURCE.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING'.'DEADLINE' in GLOBAL.'EXAMPLES'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	factor = 1.0,
	requestable amount = 0,
	tag = none,
	trace base = none,
	trace interval = none,
	state = 'TOUCHED',
	parameter = none;

create or alter exit state profile 'STANDARD_NOSKIP'
with
		default mapping = 'UNIX',
		states = (
			'FAILURE' restartable broken,
			'SUCCESS' final
		);
create or alter folder SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'DEADLINE_CHECK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'DEADLINE',
		'EXPECTED_RUNTIME'
	),
	profile = 'DEADLINE_CHECK',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING'.'DEADLINE'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = N
			state mapping = none
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = 'sh -c "NOW=`date +%s`
if [ `expr \\$NOW + $EXPECTED_RUNTIME` -gt $DEADLINE ]
then
    echo \'Deadline reached\' ; exit 1
else
    echo \'Ok to run\' ; exit 0
fi"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'E0365_DEADLINE_SCHEDULING_FAIL'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = (
		'DEADLINE'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'JOB'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'EXPECTED_RUNTIME'
	),
	profile = 'STANDARD_NOSKIP',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 3600,
	runtime final = 3600,
	run program = 'SDMSpopup.sh "$JOBNAME"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'SET_DEADLINE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	MASTER,
	priority = 50,
	parameters = (
		'DEADLINE'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'sh -c \'echo "whenever error disconnect 1
ALTER RESOURCE RESOURCE.EXAMPLES.E0360_DEADLINE_SCHEDULING.DEADLINE in GLOBAL.EXAMPLES WITH TOUCH = \'"\'"\'\'$DEADLINE\'\'"\'"\';" | sdmsh -v\'',
	NOSUSPEND,
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'DEADLINE_CHECK'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'SET_DEADLINE'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'JOB'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'DEADLINE_CHECK'
		mode = JOB_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'DEADLINE_CHECK'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'JOB'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'E0365_DEADLINE_SCHEDULING_FAIL'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'SET_DEADLINE'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'DEADLINE_CHECK'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'DEADLINE_CHECK'
alter parameter = (
		'DEADLINE'
			reference resource RESOURCE.'EXAMPLES'.'E0360_DEADLINE_SCHEDULING'.'DEADLINE' ('DEADLINE'),
		'EXPECTED_RUNTIME'
			reference child SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'JOB' ('EXPECTED_RUNTIME')
	);

alter job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'E0365_DEADLINE_SCHEDULING_FAIL'
alter parameter = (
		'DEADLINE'
			PARAMETER default = 'T12:00'
	);

alter job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'JOB'
alter parameter = (
		'EXPECTED_RUNTIME'
			CONSTANT = '$EXPRUNTIME'
	);

alter job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'SET_DEADLINE'
alter parameter = (
		'DEADLINE'
			PARAMETER default = 'T12'
	);


cleanup folder SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'
with keep = (
	folder SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL',
	job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'DEADLINE_CHECK',
	job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'E0365_DEADLINE_SCHEDULING_FAIL',
	job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'JOB',
	job definition SYSTEM.'EXAMPLES'.'E0365_DEADLINE_SCHEDULING_FAIL'.'SET_DEADLINE'
);

create or alter exit state definition 'NORTH';
create or alter exit state definition 'EAST';
create or alter exit state definition 'SOUTH';
create or alter exit state definition 'WEST';
create or alter exit state definition 'ESCAPED';
create or alter exit state definition 'STARVED';

create or alter exit state mapping 'FROG'
with map = (
			'FAILURE',
		0,	'NORTH',
		1,	'EAST',
		2,	'SOUTH',
		3,	'WEST',
		4,	'FAILURE'
);

create or alter exit state mapping 'FROG_MOVE'
with map = (
			'ESCAPED'
);

create or alter exit state profile 'FROG'
with
		default mapping = 'FROG',
		states = (
			'FAILURE' restartable broken,
			'ESCAPED' final,
			'NORTH' final,
			'EAST' final,
			'SOUTH' final,
			'WEST' final
		);

create or alter exit state profile 'FROG_MOVE'
with
		states = (
			'FAILURE' restartable,
			'STARVED' final,
			'ESCAPED' final,
			'AGAIN' final
		);

create or alter exit state translation 'FROG'
with translation = (
		'NORTH' to 'AGAIN',
		'EAST' to 'AGAIN',
		'SOUTH' to 'AGAIN',
		'WEST' to 'AGAIN'
);

create or alter exit state translation 'FROG_WON'
with translation = (
		'AGAIN' to 'STARVED'
);


create or alter resource state definition 'ROOM01';
create or alter resource state definition 'ROOM02';
create or alter resource state definition 'ROOM03';
create or alter resource state definition 'ROOM04';
create or alter resource state definition 'ROOM05';
create or alter resource state definition 'ROOM06';
create or alter resource state definition 'ROOM07';
create or alter resource state definition 'ROOM08';
create or alter resource state definition 'ROOM09';
create or alter resource state definition 'ROOM10';
create or alter resource state definition 'ROOM11';
create or alter resource state definition 'ROOM12';
create or alter resource state definition 'ROOM13';
create or alter resource state definition 'ROOM14';
create or alter resource state definition 'ROOM15';
create or alter resource state definition 'ROOM16';
create or alter resource state definition 'ESCAPED';

create or alter resource state profile 'FROG'
with
	initial state = 'ROOM01',
	states = (
		'ROOM01',
		'ROOM02',
		'ROOM03',
		'ROOM04',
		'ROOM05',
		'ROOM06',
		'ROOM07',
		'ROOM08',
		'ROOM09',
		'ROOM10',
		'ROOM11',
		'ROOM12',
		'ROOM13',
		'ROOM14',
		'ROOM15',
		'ROOM16',
		'ESCAPED'
	);

create or alter resource state mapping 'FROG'
with map = (
		'EAST' maps 'ROOM01' to 'ROOM02',
		'EAST' maps 'ROOM02' to 'ROOM03',
		'EAST' maps 'ROOM05' to 'ROOM06',
		'EAST' maps 'ROOM07' to 'ROOM08',
		'EAST' maps 'ROOM09' to 'ROOM10',
		'EAST' maps 'ROOM10' to 'ROOM11',
		'EAST' maps 'ROOM13' to 'ROOM14',
		'EAST' maps 'ROOM15' to 'ROOM16',
		'SOUTH' maps 'ROOM02' to 'ROOM06',
		'SOUTH' maps 'ROOM03' to 'ROOM07',
		'SOUTH' maps 'ROOM04' to 'ROOM08',
		'SOUTH' maps 'ROOM08' to 'ROOM12',
		'SOUTH' maps 'ROOM10' to 'ROOM14',
		'SOUTH' maps 'ROOM11' to 'ROOM15',
		'SOUTH' maps 'ROOM12' to 'ROOM16',
		'SOUTH' maps 'ROOM13' to 'ESCAPED',
		'WEST' maps 'ROOM02' to 'ROOM01',
		'WEST' maps 'ROOM03' to 'ROOM02',
		'WEST' maps 'ROOM06' to 'ROOM05',
		'WEST' maps 'ROOM08' to 'ROOM07',
		'WEST' maps 'ROOM11' to 'ROOM10',
		'WEST' maps 'ROOM10' to 'ROOM09',
		'WEST' maps 'ROOM16' to 'ROOM15',
		'WEST' maps 'ROOM14' to 'ROOM13',
		'NORTH' maps 'ROOM06' to 'ROOM02',
		'NORTH' maps 'ROOM07' to 'ROOM03',
		'NORTH' maps 'ROOM08' to 'ROOM04',
		'NORTH' maps 'ROOM12' to 'ROOM08',
		'NORTH' maps 'ROOM16' to 'ROOM12',
		'NORTH' maps 'ROOM15' to 'ROOM11',
		'NORTH' maps 'ROOM14' to 'ROOM10'
);

create or alter named resource RESOURCE.'EXAMPLES'.'E0420_FROG'
with
	group = 'PUBLIC',
	state profile = none,
	usage = CATEGORY,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0420_FROG'.'FROG'
with
	group = 'PUBLIC',
	state profile = 'FROG',
	usage = SYNCHRONIZING,
	parameters = none;

create or alter folder SYSTEM.'EXAMPLES'.'E0420_FROG'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'FROG'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'FROG_MOVE',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'JUMP'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'FROG',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0420_FROG'.'FROG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FROG'
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = 'bash -c "exit `expr \\$RANDOM % 4`"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'MOVE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'FROG',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'ESCAPED'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	mapping = 'FROG_MOVE',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'FROG_MOVE',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0420_FROG'.'FROG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = (
				'ESCAPED'
			)
	),
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'AGAIN',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'SHOW_LABYRINTH'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = '/tmp/$JOBID.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'frosch.sh $MASTERID',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'WHILE_NOT_ESCAPED'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'FROG_MOVE',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'WON'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	mapping = 'FROG_MOVE',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'FROG_MOVE',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0420_FROG'.'FROG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = (
				'ESCAPED'
			)
	),
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'AGAIN',
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'ESCAPED'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0420_FROG'.'JUMP'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'SHOW_LABYRINTH'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0420_FROG'.'ESCAPED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'WON'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0420_FROG'.'WHILE_NOT_ESCAPED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'FROG'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0420_FROG'.'WHILE_NOT_ESCAPED'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0420_FROG'.'WON'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = 'FROG_WON'
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'MOVE'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0420_FROG'.'JUMP'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0420_FROG'.'ESCAPED'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0420_FROG'.'SHOW_LABYRINTH'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'WHILE_NOT_ESCAPED'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0420_FROG'.'MOVE'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		translation = 'FROG'
		ignore dependency = none
);

create or alter resource RESOURCE.'EXAMPLES'.'E0420_FROG'.'FROG' in SYSTEM.'EXAMPLES'.'E0420_FROG'.'FROG'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	requestable amount = 0,
	state = 'ROOM01',
	parameter = none;

create or alter trigger 'MOVE' on job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'WHILE_NOT_ESCAPED'
with
	active,
	condition = none,
	nomaster,
	nowarn,
	nosuspend,
	state = (
		'AGAIN'
	),
	submitcount = 50,
	submit SYSTEM.'EXAMPLES'.'E0420_FROG'.'MOVE',
	type = BEFORE_FINAL;

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0420_FROG'.'FROG'
with
	TEXT = 'This example lets a frog jump through a labyrinth. It jumps into a random direction.
If it didn\'t find the exit within 50 jumps it dies from starvation.
The labyrinth is displayed after each jump.';



create or alter exit state definition 'NORTH';
create or alter exit state definition 'EAST';
create or alter exit state definition 'SOUTH';
create or alter exit state definition 'WEST';
create or alter exit state definition 'ESCAPED';
create or alter exit state definition 'STARVED';

create or alter exit state mapping 'FROG'
with map = (
			'FAILURE',
		0,	'NORTH',
		1,	'EAST',
		2,	'SOUTH',
		3,	'WEST',
		4,	'FAILURE'
);

create or alter exit state mapping 'FROG_MOVE'
with map = (
			'ESCAPED'
);

create or alter exit state profile 'FROG'
with
		default mapping = 'FROG',
		states = (
			'FAILURE' restartable broken,
			'ESCAPED' final,
			'NORTH' final,
			'EAST' final,
			'SOUTH' final,
			'WEST' final
		);

create or alter exit state profile 'FROG_MOVE'
with
		states = (
			'FAILURE' restartable,
			'STARVED' final,
			'ESCAPED' final,
			'AGAIN' final
		);

create or alter exit state translation 'FROG'
with translation = (
		'NORTH' to 'AGAIN',
		'EAST' to 'AGAIN',
		'SOUTH' to 'AGAIN',
		'WEST' to 'AGAIN'
);

create or alter exit state translation 'FROG_WON'
with translation = (
		'AGAIN' to 'STARVED'
);


create or alter resource state definition 'ROOM01';
create or alter resource state definition 'ROOM02';
create or alter resource state definition 'ROOM03';
create or alter resource state definition 'ROOM04';
create or alter resource state definition 'ROOM05';
create or alter resource state definition 'ROOM06';
create or alter resource state definition 'ROOM07';
create or alter resource state definition 'ROOM08';
create or alter resource state definition 'ROOM09';
create or alter resource state definition 'ROOM10';
create or alter resource state definition 'ROOM11';
create or alter resource state definition 'ROOM12';
create or alter resource state definition 'ROOM13';
create or alter resource state definition 'ROOM14';
create or alter resource state definition 'ROOM15';
create or alter resource state definition 'ROOM16';
create or alter resource state definition 'ESCAPED';

create or alter resource state profile 'FROG'
with
	initial state = 'ROOM01',
	states = (
		'ROOM01',
		'ROOM02',
		'ROOM03',
		'ROOM04',
		'ROOM05',
		'ROOM06',
		'ROOM07',
		'ROOM08',
		'ROOM09',
		'ROOM10',
		'ROOM11',
		'ROOM12',
		'ROOM13',
		'ROOM14',
		'ROOM15',
		'ROOM16',
		'ESCAPED'
	);

create or alter resource state mapping 'FROG'
with map = (
		'EAST' maps 'ROOM01' to 'ROOM02',
		'EAST' maps 'ROOM02' to 'ROOM03',
		'EAST' maps 'ROOM05' to 'ROOM06',
		'EAST' maps 'ROOM07' to 'ROOM08',
		'EAST' maps 'ROOM09' to 'ROOM10',
		'EAST' maps 'ROOM10' to 'ROOM11',
		'EAST' maps 'ROOM13' to 'ROOM14',
		'EAST' maps 'ROOM15' to 'ROOM16',
		'SOUTH' maps 'ROOM02' to 'ROOM06',
		'SOUTH' maps 'ROOM03' to 'ROOM07',
		'SOUTH' maps 'ROOM04' to 'ROOM08',
		'SOUTH' maps 'ROOM08' to 'ROOM12',
		'SOUTH' maps 'ROOM10' to 'ROOM14',
		'SOUTH' maps 'ROOM11' to 'ROOM15',
		'SOUTH' maps 'ROOM12' to 'ROOM16',
		'SOUTH' maps 'ROOM13' to 'ESCAPED',
		'WEST' maps 'ROOM02' to 'ROOM01',
		'WEST' maps 'ROOM03' to 'ROOM02',
		'WEST' maps 'ROOM06' to 'ROOM05',
		'WEST' maps 'ROOM08' to 'ROOM07',
		'WEST' maps 'ROOM11' to 'ROOM10',
		'WEST' maps 'ROOM10' to 'ROOM09',
		'WEST' maps 'ROOM16' to 'ROOM15',
		'WEST' maps 'ROOM14' to 'ROOM13',
		'NORTH' maps 'ROOM06' to 'ROOM02',
		'NORTH' maps 'ROOM07' to 'ROOM03',
		'NORTH' maps 'ROOM08' to 'ROOM04',
		'NORTH' maps 'ROOM12' to 'ROOM08',
		'NORTH' maps 'ROOM16' to 'ROOM12',
		'NORTH' maps 'ROOM15' to 'ROOM11',
		'NORTH' maps 'ROOM14' to 'ROOM10'
);

create or alter named resource RESOURCE.'EXAMPLES'.'E0420_FROG'
with
	group = 'PUBLIC',
	state profile = none,
	usage = CATEGORY,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0420_FROG'.'FROG'
with
	group = 'PUBLIC',
	state profile = 'FROG',
	usage = SYNCHRONIZING,
	parameters = none;

create or alter folder SYSTEM.'EXAMPLES'.'E0430_FROG2'
with
	group = 'PUBLIC',
	environment = none,
	parameters = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'FROG2'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'FROG_MOVE',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'JUMP'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'FROG',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0420_FROG'.'FROG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'FROG'
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = 'bash -c "exit `expr \\$RANDOM % 4`"',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'MOVE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'FROG',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'ESCAPED'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	mapping = 'FROG_MOVE',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'FROG_MOVE',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0420_FROG'.'FROG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = (
				'ESCAPED'
			)
	),
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'AGAIN',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SHOW_LABYRINTH'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = '/tmp/$JOBID.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'frosch.sh $MASTERID',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SHOW_LABYRINTH_MASTER'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'MYKEY',
		'MYJOBID'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SUBMIT_SHOW_LABYRINTH'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = '/tmp/$JOBID.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'SHOW_JOBID',
		'SHOW_KEY'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'sdms-submit -h $SDMSHOST -p $SDMSPORT -j $SHOW_JOBID -k $SHOW_KEY --job SHOW_LABYRINTH --tag $JOBID',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'WHILE_NOT_ESCAPED'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'FROG_MOVE',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'WON'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	mapping = 'FROG_MOVE',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'FROG_MOVE',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0420_FROG'.'FROG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = (
				'ESCAPED'
			)
	),
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'AGAIN',
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'ESCAPED'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0430_FROG2'.'JUMP'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SHOW_LABYRINTH_MASTER'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0430_FROG2'.'WHILE_NOT_ESCAPED'
		dependency 'MASTER'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SUBMIT_SHOW_LABYRINTH'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0430_FROG2'.'ESCAPED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'WON'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0430_FROG2'.'WHILE_NOT_ESCAPED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none,
	SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SHOW_LABYRINTH_MASTER'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'FROG2'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0430_FROG2'.'WHILE_NOT_ESCAPED'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0430_FROG2'.'WON'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = 'FROG_WON'
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SHOW_LABYRINTH_MASTER'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'MOVE'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0430_FROG2'.'JUMP'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0430_FROG2'.'ESCAPED'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SUBMIT_SHOW_LABYRINTH'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SHOW_LABYRINTH_MASTER'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SHOW_LABYRINTH'
		alias = SHOW_LABYRINTH
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		translation = none
		ignore dependency = (
			'MASTER'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'WHILE_NOT_ESCAPED'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0430_FROG2'.'MOVE'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		translation = 'FROG'
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SHOW_LABYRINTH_MASTER'
alter parameter = (
		'MYKEY'
			CONSTANT = '$KEY',
		'MYJOBID'
			CONSTANT = '$JOBID'
	);

alter job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SUBMIT_SHOW_LABYRINTH'
alter parameter = (
		'SHOW_JOBID'
			reference SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SHOW_LABYRINTH_MASTER' ('MYJOBID'),
		'SHOW_KEY'
			reference SYSTEM.'EXAMPLES'.'E0430_FROG2'.'SHOW_LABYRINTH_MASTER' ('MYKEY')
	);

create or alter resource RESOURCE.'EXAMPLES'.'E0420_FROG'.'FROG' in SYSTEM.'EXAMPLES'.'E0430_FROG2'.'FROG2'
with
	amount = 0,
	group = 'PUBLIC',
	online,
	requestable amount = 0,
	state = 'ROOM01',
	parameter = none;

create or alter trigger 'MOVE' on job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'WHILE_NOT_ESCAPED'
with
	active,
	condition = none,
	nomaster,
	nowarn,
	nosuspend,
	state = (
		'AGAIN'
	),
	submitcount = 50,
	submit SYSTEM.'EXAMPLES'.'E0430_FROG2'.'MOVE',
	type = BEFORE_FINAL;

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0430_FROG2'.'FROG2'
with
	TEXT = 'This example lets a frog jump through a labyrinth. It jumps into a random direction.
If it didn\'t find the exit within 50 jumps it dies from starvation.
The labyrinth is displayed after each jump, but this happens independent of the jumping.

Strictly speaking this is a programming error because the display of the labyrinth requires the frog resource.
This resource will probably be changed at the next jump. That means we have a race condition here.

The main purpose of the example is to show that asynchronous processes can be started from within a loop.
If the show_labyrinth job wouldn\'t rely on the common resource, it would be correct.
That means that the example is valid for most situation.';

create or alter exit state definition 'ESCAPED';

create or alter exit state definition 'NORTH';

create or alter exit state definition 'EAST';

create or alter exit state definition 'SOUTH';

create or alter exit state definition 'STARVED';

create or alter exit state definition 'WEST';

create or alter exit state mapping 'DOG'
with map = (
			'FAILURE',
		0,	'NORTH',
		1,	'EAST',
		2,	'SOUTH',
		3,	'WEST',
		4,	'FAILURE'
);

create or alter exit state mapping 'DOG_MOVE'
with map = (
			'ESCAPED',
		1,	'AGAIN'
);

create or alter exit state profile 'DOG'
with
		default mapping = 'DOG',
		states = (
			'FAILURE' restartable broken,
			'ESCAPED' final,
			'NORTH' final,
			'EAST' final,
			'SOUTH' final,
			'WEST' final
		);

create or alter exit state profile 'DOG_MOVE'
with
		default mapping = 'DOG_MOVE',
		states = (
			'FAILURE' restartable broken,
			'STARVED' final,
			'ESCAPED' final unreachable,
			'AGAIN' final
		);

create or alter exit state translation 'DOG_WON'
with translation = (
		'AGAIN' to 'STARVED'
);

create or alter resource state definition 'ROOM01';
create or alter resource state definition 'ROOM02';
create or alter resource state definition 'ROOM03';
create or alter resource state definition 'ROOM04';
create or alter resource state definition 'ROOM05';
create or alter resource state definition 'ROOM06';
create or alter resource state definition 'ROOM07';
create or alter resource state definition 'ROOM08';
create or alter resource state definition 'ROOM09';
create or alter resource state definition 'ROOM10';
create or alter resource state definition 'ROOM11';
create or alter resource state definition 'ROOM12';
create or alter resource state definition 'ROOM13';
create or alter resource state definition 'ROOM14';
create or alter resource state definition 'ROOM15';
create or alter resource state definition 'ROOM16';
create or alter resource state definition 'ESCAPED';

create or alter resource state mapping 'DOG'
with map = (
		'NORTH' maps 'ROOM06' to 'ROOM02',
		'NORTH' maps 'ROOM07' to 'ROOM03',
		'NORTH' maps 'ROOM08' to 'ROOM04',
		'NORTH' maps 'ROOM12' to 'ROOM08',
		'NORTH' maps 'ROOM14' to 'ROOM10',
		'NORTH' maps 'ROOM15' to 'ROOM11',
		'NORTH' maps 'ROOM16' to 'ROOM12',
		'EAST' maps 'ROOM01' to 'ROOM02',
		'EAST' maps 'ROOM02' to 'ROOM03',
		'EAST' maps 'ROOM05' to 'ROOM06',
		'EAST' maps 'ROOM07' to 'ROOM08',
		'EAST' maps 'ROOM09' to 'ROOM10',
		'EAST' maps 'ROOM10' to 'ROOM11',
		'EAST' maps 'ROOM13' to 'ROOM14',
		'EAST' maps 'ROOM15' to 'ROOM16',
		'SOUTH' maps 'ROOM02' to 'ROOM06',
		'SOUTH' maps 'ROOM03' to 'ROOM07',
		'SOUTH' maps 'ROOM04' to 'ROOM08',
		'SOUTH' maps 'ROOM08' to 'ROOM12',
		'SOUTH' maps 'ROOM10' to 'ROOM14',
		'SOUTH' maps 'ROOM11' to 'ROOM15',
		'SOUTH' maps 'ROOM12' to 'ROOM16',
		'SOUTH' maps 'ROOM13' to 'ESCAPED',
		'WEST' maps 'ROOM02' to 'ROOM01',
		'WEST' maps 'ROOM03' to 'ROOM02',
		'WEST' maps 'ROOM06' to 'ROOM05',
		'WEST' maps 'ROOM08' to 'ROOM07',
		'WEST' maps 'ROOM10' to 'ROOM09',
		'WEST' maps 'ROOM11' to 'ROOM10',
		'WEST' maps 'ROOM14' to 'ROOM13',
		'WEST' maps 'ROOM16' to 'ROOM15'
);

create or alter resource state profile 'DOG'
with
	initial state = 'ROOM01',
	states = (
		'ESCAPED',
		'ROOM01',
		'ROOM02',
		'ROOM03',
		'ROOM04',
		'ROOM05',
		'ROOM06',
		'ROOM07',
		'ROOM08',
		'ROOM09',
		'ROOM10',
		'ROOM11',
		'ROOM12',
		'ROOM13',
		'ROOM14',
		'ROOM15',
		'ROOM16'
	);


create or alter named resource RESOURCE.'EXAMPLES'.'E0440_DOG'
with
	group = 'PUBLIC',
	state profile = none,
	usage = CATEGORY,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG'
with
	group = 'PUBLIC',
	state profile = 'DOG',
	usage = SYNCHRONIZING,
	parameters = (
		'ROOM01' PARAMETER = '-1',
		'ROOM09' PARAMETER = '-1',
		'ROOM10' PARAMETER = '-1',
		'ROOM11' PARAMETER = '-1',
		'ROOM05' PARAMETER = '-1',
		'ROOM06' PARAMETER = '-1',
		'ROOM16' PARAMETER = '-1',
		'ROOM07' PARAMETER = '-1',
		'ROOM08' PARAMETER = '-1',
		'ROOM14' PARAMETER = '-1',
		'ROOM15' PARAMETER = '-1',
		'ROOM02' PARAMETER = '-1',
		'ROOM03' PARAMETER = '-1',
		'ROOM12' PARAMETER = '-1',
		'ROOM04' PARAMETER = '-1',
		'ROOM13' PARAMETER = '-1',
		'POSITION' LOCAL_CONSTANT = '$STATE'
	);

create or alter folder SYSTEM.'EXAMPLES'.'E0440_DOG'
with
	group = 'PUBLIC',
	environment = none,
	parameters = (
		'RT' = '-t 3'
	);

create or alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'AFTER_WALK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '$JOBID.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '$JOBID.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'MOVE_DIRECTION',
		'OLDPOSITION',
		'ROOM10',
		'ROOM11',
		'ROOM14',
		'ROOM01',
		'ROOM02',
		'ROOM15',
		'ROOM12',
		'ROOM03',
		'ROOM04',
		'ROOM13',
		'ROOM08',
		'ROOM07',
		'ROOM06',
		'ROOM05',
		'ROOM16',
		'ROOM09',
		'POSITION'
	),
	profile = 'DOG_MOVE',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = '/bin/bash -c "if [ $POSITION != $OLDPOSITION ]; then
LASTDIR=`sdms-get_variable -j $JOBID -k $KEY -h $SDMSHOST -p $SDMSPORT -n $POSITION`;
if [ \\$LASTDIR -eq -1 ]; then
MD=`expr $MOVE_DIRECTION + 2`; MD=`expr \\$MD % 4`;
sdms-set_variable -j $JOBID -k $KEY -h $SDMSHOST -p $SDMSPORT $POSITION \\$MD; fi; fi; 
exit 1;"',
	NOSUSPEND,
	type = JOB,
	workdir = '/tmp';

create or alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'DOG'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'DOG_MOVE',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'ESCAPED'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	mapping = 'DOG_MOVE',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'DOG_MOVE',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = (
				'ESCAPED'
			)
	),
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'AGAIN',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'MOVE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'DOG',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'SHOW_LABYRINTH'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = '/tmp/$JOBID.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'dog.sh $MASTERID $RT',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'WALK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '$JOBID.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '$JOBID.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'MOVE_DIRECTION',
		'OLDPOSITION',
		'ROOM10',
		'ROOM11',
		'ROOM01',
		'ROOM14',
		'ROOM02',
		'ROOM15',
		'ROOM12',
		'ROOM03',
		'ROOM04',
		'ROOM13',
		'ROOM08',
		'ROOM07',
		'ROOM06',
		'ROOM05',
		'ROOM16',
		'ROOM09',
		'POSITION'
	),
	profile = 'DOG',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'DOG'
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = 'bash -c "sdms-set_variable -j $JOBID -h $SDMSHOST -p $SDMSPORT -k $KEY OLDPOSITION $POSITION;
LASTDIR=`sdms-get_variable -j $JOBID -h $SDMSHOST -p $SDMSPORT -k $KEY -n $POSITION`;
DIR=`expr \\$LASTDIR + 1`; DIR=`expr \\$DIR % 4`;
sdms-set_variable -j $JOBID -h $SDMSHOST -p $SDMSPORT -k $KEY MOVE_DIRECTION \\$DIR;
sdms-set_variable -j $JOBID -h $SDMSHOST -p $SDMSPORT -k $KEY $POSITION \\$DIR;
exit \\$DIR;"',
	NOSUSPEND,
	type = JOB,
	workdir = '/tmp';

create or alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'WHILE_NOT_ESCAPED'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'DOG_MOVE',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'WON'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	mapping = 'DOG_MOVE',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'DOG_MOVE',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = (
				'ESCAPED'
			)
	),
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'AGAIN',
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'AFTER_WALK'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0440_DOG'.'ESCAPED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'AGAIN'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'ESCAPED'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0440_DOG'.'WALK'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'SHOW_LABYRINTH'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0440_DOG'.'ESCAPED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'WON'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0440_DOG'.'WHILE_NOT_ESCAPED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'DOG'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0440_DOG'.'WON'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = 'DOG_WON'
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0440_DOG'.'WHILE_NOT_ESCAPED'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'MOVE'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0440_DOG'.'ESCAPED'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0440_DOG'.'WALK'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0440_DOG'.'AFTER_WALK'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0440_DOG'.'SHOW_LABYRINTH'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'WHILE_NOT_ESCAPED'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0440_DOG'.'MOVE'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'AFTER_WALK'
alter parameter = (
		'MOVE_DIRECTION'
			reference SYSTEM.'EXAMPLES'.'E0440_DOG'.'WALK' ('MOVE_DIRECTION')
		EXPORT = NONE,
		'OLDPOSITION'
			reference SYSTEM.'EXAMPLES'.'E0440_DOG'.'WALK' ('OLDPOSITION')
		EXPORT = NONE,
		'ROOM10'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM10')
		EXPORT = NONE,
		'ROOM11'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM11')
		EXPORT = NONE,
		'ROOM14'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM14')
		EXPORT = NONE,
		'ROOM01'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM01')
		EXPORT = NONE,
		'ROOM02'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM02')
		EXPORT = NONE,
		'ROOM15'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM15')
		EXPORT = NONE,
		'ROOM12'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM12')
		EXPORT = NONE,
		'ROOM03'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM03')
		EXPORT = NONE,
		'ROOM04'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM04')
		EXPORT = NONE,
		'ROOM13'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM13')
		EXPORT = NONE,
		'ROOM08'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM08')
		EXPORT = NONE,
		'ROOM07'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM07')
		EXPORT = NONE,
		'ROOM06'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM06')
		EXPORT = NONE,
		'ROOM05'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM05')
		EXPORT = NONE,
		'ROOM16'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM16')
		EXPORT = NONE,
		'ROOM09'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM09')
		EXPORT = NONE,
		'POSITION'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('POSITION')
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'SHOW_LABYRINTH'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'WALK'
alter parameter = (
		'MOVE_DIRECTION'
			RESULT
		EXPORT = NONE,
		'OLDPOSITION'
			RESULT
		EXPORT = NONE,
		'ROOM10'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM10')
		EXPORT = NONE,
		'ROOM11'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM11')
		EXPORT = NONE,
		'ROOM01'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM01')
		EXPORT = NONE,
		'ROOM14'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM14')
		EXPORT = NONE,
		'ROOM02'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM02')
		EXPORT = NONE,
		'ROOM15'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM15')
		EXPORT = NONE,
		'ROOM12'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM12')
		EXPORT = NONE,
		'ROOM03'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM03')
		EXPORT = NONE,
		'ROOM04'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM04')
		EXPORT = NONE,
		'ROOM13'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM13')
		EXPORT = NONE,
		'ROOM08'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM08')
		EXPORT = NONE,
		'ROOM07'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM07')
		EXPORT = NONE,
		'ROOM06'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM06')
		EXPORT = NONE,
		'ROOM05'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM05')
		EXPORT = NONE,
		'ROOM16'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM16')
		EXPORT = NONE,
		'ROOM09'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM09')
		EXPORT = NONE,
		'POSITION'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('POSITION')
		EXPORT = NONE
	);

create or alter resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' in SYSTEM.'EXAMPLES'.'E0440_DOG'.'DOG'
with
	amount = 0,
	group = 'ADMIN',
	online,
	requestable amount = 0,
	state = 'ROOM01',
	parameter = none;

create or alter trigger 'MOVE' on job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'WHILE_NOT_ESCAPED'
with
	active,
	condition = none,
	nomaster,
	nowarn,
	limit state = none,
	nosuspend,
	state = (
		'AGAIN'
	),
	submitcount = 50,
	submit SYSTEM.'EXAMPLES'.'E0440_DOG'.'MOVE',
	type = BEFORE_FINAL;

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0440_DOG'.'DOG'
with
	TAG = none, TEXT = 'This example lets a dog walk through a labyrinth.
If it didn\'t find the exit within 50 jumps it dies from starvation.
The labyrinth is displayed after each move.

The example resembles the frog example, but in this case the higher intelligence of the dog is taken in account.
It therefore doesn\'t walk into a random direction but some algorithm based on the direction it entered a field the first time
and the directions already tried is used.

A little of the processing is done in the after_walk job (two if statements).';


create or alter exit state definition 'ESCAPED';

create or alter exit state definition 'NORTH';

create or alter exit state definition 'EAST';

create or alter exit state definition 'SOUTH';

create or alter exit state definition 'STARVED';

create or alter exit state definition 'WEST';

create or alter exit state mapping 'DOG'
with map = (
			'FAILURE',
		0,	'NORTH',
		1,	'EAST',
		2,	'SOUTH',
		3,	'WEST',
		4,	'FAILURE'
);

create or alter exit state mapping 'DOG_MOVE'
with map = (
			'ESCAPED',
		1,	'AGAIN'
);

create or alter exit state profile 'DOG'
with
		default mapping = 'DOG',
		states = (
			'FAILURE' restartable broken,
			'ESCAPED' final,
			'NORTH' final,
			'EAST' final,
			'SOUTH' final,
			'WEST' final
		);

create or alter exit state profile 'DOG_MOVE'
with
		default mapping = 'DOG_MOVE',
		states = (
			'FAILURE' restartable broken,
			'STARVED' final,
			'ESCAPED' final unreachable,
			'AGAIN' final
		);

create or alter exit state translation 'DOG_WON'
with translation = (
		'AGAIN' to 'STARVED'
);

create or alter resource state definition 'ROOM01';
create or alter resource state definition 'ROOM02';
create or alter resource state definition 'ROOM03';
create or alter resource state definition 'ROOM04';
create or alter resource state definition 'ROOM05';
create or alter resource state definition 'ROOM06';
create or alter resource state definition 'ROOM07';
create or alter resource state definition 'ROOM08';
create or alter resource state definition 'ROOM09';
create or alter resource state definition 'ROOM10';
create or alter resource state definition 'ROOM11';
create or alter resource state definition 'ROOM12';
create or alter resource state definition 'ROOM13';
create or alter resource state definition 'ROOM14';
create or alter resource state definition 'ROOM15';
create or alter resource state definition 'ROOM16';
create or alter resource state definition 'ESCAPED';

create or alter resource state mapping 'DOG'
with map = (
		'NORTH' maps 'ROOM06' to 'ROOM02',
		'NORTH' maps 'ROOM07' to 'ROOM03',
		'NORTH' maps 'ROOM08' to 'ROOM04',
		'NORTH' maps 'ROOM12' to 'ROOM08',
		'NORTH' maps 'ROOM14' to 'ROOM10',
		'NORTH' maps 'ROOM15' to 'ROOM11',
		'NORTH' maps 'ROOM16' to 'ROOM12',
		'EAST' maps 'ROOM01' to 'ROOM02',
		'EAST' maps 'ROOM02' to 'ROOM03',
		'EAST' maps 'ROOM05' to 'ROOM06',
		'EAST' maps 'ROOM07' to 'ROOM08',
		'EAST' maps 'ROOM09' to 'ROOM10',
		'EAST' maps 'ROOM10' to 'ROOM11',
		'EAST' maps 'ROOM13' to 'ROOM14',
		'EAST' maps 'ROOM15' to 'ROOM16',
		'SOUTH' maps 'ROOM02' to 'ROOM06',
		'SOUTH' maps 'ROOM03' to 'ROOM07',
		'SOUTH' maps 'ROOM04' to 'ROOM08',
		'SOUTH' maps 'ROOM08' to 'ROOM12',
		'SOUTH' maps 'ROOM10' to 'ROOM14',
		'SOUTH' maps 'ROOM11' to 'ROOM15',
		'SOUTH' maps 'ROOM12' to 'ROOM16',
		'SOUTH' maps 'ROOM13' to 'ESCAPED',
		'WEST' maps 'ROOM02' to 'ROOM01',
		'WEST' maps 'ROOM03' to 'ROOM02',
		'WEST' maps 'ROOM06' to 'ROOM05',
		'WEST' maps 'ROOM08' to 'ROOM07',
		'WEST' maps 'ROOM10' to 'ROOM09',
		'WEST' maps 'ROOM11' to 'ROOM10',
		'WEST' maps 'ROOM14' to 'ROOM13',
		'WEST' maps 'ROOM16' to 'ROOM15'
);

create or alter resource state profile 'DOG'
with
	initial state = 'ROOM01',
	states = (
		'ESCAPED',
		'ROOM01',
		'ROOM02',
		'ROOM03',
		'ROOM04',
		'ROOM05',
		'ROOM06',
		'ROOM07',
		'ROOM08',
		'ROOM09',
		'ROOM10',
		'ROOM11',
		'ROOM12',
		'ROOM13',
		'ROOM14',
		'ROOM15',
		'ROOM16'
	);


create or alter named resource RESOURCE.'EXAMPLES'.'E0440_DOG'
with
	group = 'PUBLIC',
	state profile = none,
	usage = CATEGORY,
	parameters = none;

create or alter named resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG'
with
	group = 'PUBLIC',
	state profile = 'DOG',
	usage = SYNCHRONIZING,
	parameters = (
		'ROOM01' PARAMETER = '-1',
		'ROOM09' PARAMETER = '-1',
		'ROOM10' PARAMETER = '-1',
		'ROOM11' PARAMETER = '-1',
		'ROOM05' PARAMETER = '-1',
		'ROOM06' PARAMETER = '-1',
		'ROOM16' PARAMETER = '-1',
		'ROOM07' PARAMETER = '-1',
		'ROOM08' PARAMETER = '-1',
		'ROOM14' PARAMETER = '-1',
		'ROOM15' PARAMETER = '-1',
		'ROOM02' PARAMETER = '-1',
		'ROOM03' PARAMETER = '-1',
		'ROOM12' PARAMETER = '-1',
		'ROOM04' PARAMETER = '-1',
		'ROOM13' PARAMETER = '-1',
		'POSITION' LOCAL_CONSTANT = '$STATE'
	);

create or alter folder SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'
with
	group = 'PUBLIC',
	environment = none,
	parameters = (
		'RT' = '-t 3'
	);

create or alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'AFTER_WALK_COLLECT'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '$JOBID.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '$JOBID.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'LASTDIR',
		'MOVE_DIRECTION',
		'OLDPOSITION',
		'ROOM10',
		'ROOM11',
		'ROOM14',
		'ROOM01',
		'ROOM02',
		'ROOM15',
		'ROOM12',
		'ROOM03',
		'ROOM04',
		'ROOM13',
		'ROOM08',
		'ROOM07',
		'ROOM06',
		'ROOM05',
		'NEWPOSITION',
		'ROOM16',
		'ROOM09',
		'POSITION'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = '/bin/bash -c "sdms-set_variable -j $JOBID -k $KEY -h $SDMSHOST -p $SDMSPORT NEWPOSITION $POSITION;
sdms-set_variable -j $JOBID -k $KEY -h $SDMSHOST -p $SDMSPORT LASTDIR `sdms-get_variable -j $JOBID -k $KEY -h $SDMSHOST -p $SDMSPORT -n $POSITION`"
',
	NOSUSPEND,
	type = JOB,
	workdir = '/tmp';

create or alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'AFTER_WALK_SET'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '$JOBID.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '$JOBID.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'LASTDIR',
		'MOVE_DIRECTION',
		'OLDPOSITION',
		'ROOM10',
		'ROOM11',
		'ROOM14',
		'ROOM01',
		'ROOM02',
		'ROOM15',
		'ROOM03',
		'ROOM12',
		'ROOM04',
		'ROOM13',
		'ROOM08',
		'ROOM07',
		'ROOM06',
		'ROOM05',
		'NEWPOSITION',
		'ROOM16',
		'ROOM09'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = '/bin/bash -c "
MD=`expr $MOVE_DIRECTION + 2`; MD=`expr \\$MD % 4`;
sdms-set_variable -j $JOBID -k $KEY -h $SDMSHOST -p $SDMSPORT $NEWPOSITION \\$MD; 
exit 0;"',
	NOSUSPEND,
	type = JOB,
	workdir = '/tmp';

create or alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'DOG'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	MASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'DOG_MOVE',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'ESCAPED'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	mapping = 'DOG_MOVE',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'DOG_MOVE',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = (
				'ESCAPED'
			)
	),
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'AGAIN',
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'MOVE'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'DOG',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'SHOW_LABYRINTH'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = '/tmp/$JOBID.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'RT'
	),
	profile = 'STANDARD',
	required = none,
	rerun program = none,
	resource = none,
	runtime = 0,
	runtime final = 0,
	run program = 'dog.sh $MASTERID $RT',
	NOSUSPEND,
	type = JOB,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WALK'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '$JOBID.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '$JOBID.log' NOTRUNC,
	NOMASTER,
	priority = 50,
	parameters = (
		'MOVE_DIRECTION',
		'OLDPOSITION',
		'ROOM10',
		'ROOM11',
		'ROOM01',
		'ROOM14',
		'ROOM02',
		'ROOM15',
		'ROOM12',
		'ROOM03',
		'ROOM13',
		'ROOM04',
		'ROOM08',
		'ROOM07',
		'ROOM06',
		'ROOM05',
		'ROOM16',
		'ROOM09',
		'POSITION'
	),
	profile = 'DOG',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = 'DOG'
			expired = none
			state = none
	),
	runtime = 0,
	runtime final = 0,
	run program = 'bash -c "sdms-set_variable -j $JOBID -h $SDMSHOST -p $SDMSPORT -k $KEY OLDPOSITION $POSITION;
LASTDIR=`sdms-get_variable -j $JOBID -h $SDMSHOST -p $SDMSPORT -k $KEY -n $POSITION`;
DIR=`expr \\$LASTDIR + 1`; DIR=`expr \\$DIR % 4`;
sdms-set_variable -j $JOBID -h $SDMSHOST -p $SDMSPORT -k $KEY MOVE_DIRECTION \\$DIR;
sdms-set_variable -j $JOBID -h $SDMSHOST -p $SDMSPORT -k $KEY $POSITION \\$DIR;
exit \\$DIR;"',
	NOSUSPEND,
	type = JOB,
	workdir = '/tmp';

create or alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WHILE_NOT_ESCAPED'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	errlog = none,
	group = 'PUBLIC',
	kill program = none,
	logfile = none,
	NOMASTER,
	nicevalue = 0,
	parameters = none,
	profile = 'DOG_MOVE',
	required = none,
	rerun program = none,
	resource = none,
	runtime final = 0,
	run program = none,
	NOSUSPEND,
	type = BATCH,
	workdir = none;

create or alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WON'
with
	aging = none,
	min priority = none,
	children = none,
	dependency mode = all,
	environment = 'SERVER@LOCALHOST',
	errlog = '${JOBID}.log' NOTRUNC,
	group = 'PUBLIC',
	kill program = none,
	logfile = '${JOBID}.log' NOTRUNC,
	mapping = 'DOG_MOVE',
	NOMASTER,
	priority = 50,
	parameters = none,
	profile = 'DOG_MOVE',
	required = none,
	rerun program = none,
	resource = (
		RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG'
			amount = 0
			NOKEEP
			NOSTICKY
			lockmode = X
			state mapping = none
			expired = none
			state = (
				'ESCAPED'
			)
	),
	runtime = 0,
	runtime final = 0,
	run program = '0',
	NOSUSPEND,
	timeout = 0 MINUTE state 'AGAIN',
	type = JOB,
	workdir = none;

alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'AFTER_WALK_COLLECT'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'ESCAPED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = (
			'AGAIN'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'AFTER_WALK_SET'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'AFTER_WALK_COLLECT'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = '$OLDPOSITION != $NEWPOSITION and $LASTDIR == -1'
		state = (
			'SUCCESS'
		)
);

alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'ESCAPED'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WALK'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'SHOW_LABYRINTH'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'ESCAPED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WON'
add or alter required = (
	SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WHILE_NOT_ESCAPED'
		mode = ALL_FINAL
		unresolved = ERROR
		condition = none
		state = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'DOG'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WHILE_NOT_ESCAPED'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WON'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = 'DOG_WON'
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'MOVE'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'SHOW_LABYRINTH'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'AFTER_WALK_COLLECT'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WALK'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'ESCAPED'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none,
	SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'AFTER_WALK_SET'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		static
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WHILE_NOT_ESCAPED'
add or alter children = (
	SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'MOVE'
		alias = none
		CHILDSUSPEND
		nicevalue = 0
		dynamic
		enable
		translation = none
		ignore dependency = none
);

alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'AFTER_WALK_COLLECT'
alter parameter = (
		'LASTDIR'
			RESULT
		EXPORT = NONE,
		'MOVE_DIRECTION'
			reference SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WALK' ('MOVE_DIRECTION')
		EXPORT = NONE,
		'OLDPOSITION'
			reference SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WALK' ('OLDPOSITION')
		EXPORT = NONE,
		'ROOM10'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM10')
		EXPORT = NONE,
		'ROOM11'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM11')
		EXPORT = NONE,
		'ROOM14'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM14')
		EXPORT = NONE,
		'ROOM01'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM01')
		EXPORT = NONE,
		'ROOM02'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM02')
		EXPORT = NONE,
		'ROOM15'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM15')
		EXPORT = NONE,
		'ROOM12'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM12')
		EXPORT = NONE,
		'ROOM03'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM03')
		EXPORT = NONE,
		'ROOM04'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM04')
		EXPORT = NONE,
		'ROOM13'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM13')
		EXPORT = NONE,
		'ROOM08'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM08')
		EXPORT = NONE,
		'ROOM07'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM07')
		EXPORT = NONE,
		'ROOM06'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM06')
		EXPORT = NONE,
		'ROOM05'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM05')
		EXPORT = NONE,
		'NEWPOSITION'
			RESULT
		EXPORT = NONE,
		'ROOM16'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM16')
		EXPORT = NONE,
		'ROOM09'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM09')
		EXPORT = NONE,
		'POSITION'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('POSITION')
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'AFTER_WALK_SET'
alter parameter = (
		'LASTDIR'
			reference SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'AFTER_WALK_COLLECT' ('LASTDIR')
		EXPORT = NONE,
		'MOVE_DIRECTION'
			reference SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WALK' ('MOVE_DIRECTION')
		EXPORT = NONE,
		'OLDPOSITION'
			reference SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WALK' ('OLDPOSITION')
		EXPORT = NONE,
		'ROOM10'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM10')
		EXPORT = NONE,
		'ROOM11'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM11')
		EXPORT = NONE,
		'ROOM14'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM14')
		EXPORT = NONE,
		'ROOM01'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM01')
		EXPORT = NONE,
		'ROOM02'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM02')
		EXPORT = NONE,
		'ROOM15'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM15')
		EXPORT = NONE,
		'ROOM03'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM03')
		EXPORT = NONE,
		'ROOM12'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM12')
		EXPORT = NONE,
		'ROOM04'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM04')
		EXPORT = NONE,
		'ROOM13'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM13')
		EXPORT = NONE,
		'ROOM08'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM08')
		EXPORT = NONE,
		'ROOM07'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM07')
		EXPORT = NONE,
		'ROOM06'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM06')
		EXPORT = NONE,
		'ROOM05'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM05')
		EXPORT = NONE,
		'NEWPOSITION'
			reference SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'AFTER_WALK_COLLECT' ('NEWPOSITION')
		EXPORT = NONE,
		'ROOM16'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM16')
		EXPORT = NONE,
		'ROOM09'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM09')
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'SHOW_LABYRINTH'
alter parameter = (
		'RT'
			IMPORT default = '-t 10'
		EXPORT = NONE
	);

alter job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WALK'
alter parameter = (
		'MOVE_DIRECTION'
			RESULT
		EXPORT = NONE,
		'OLDPOSITION'
			RESULT
		EXPORT = NONE,
		'ROOM10'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM10')
		EXPORT = NONE,
		'ROOM11'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM11')
		EXPORT = NONE,
		'ROOM01'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM01')
		EXPORT = NONE,
		'ROOM14'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM14')
		EXPORT = NONE,
		'ROOM02'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM02')
		EXPORT = NONE,
		'ROOM15'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM15')
		EXPORT = NONE,
		'ROOM12'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM12')
		EXPORT = NONE,
		'ROOM03'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM03')
		EXPORT = NONE,
		'ROOM13'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM13')
		EXPORT = NONE,
		'ROOM04'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM04')
		EXPORT = NONE,
		'ROOM08'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM08')
		EXPORT = NONE,
		'ROOM07'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM07')
		EXPORT = NONE,
		'ROOM06'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM06')
		EXPORT = NONE,
		'ROOM05'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM05')
		EXPORT = NONE,
		'ROOM16'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM16')
		EXPORT = NONE,
		'ROOM09'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('ROOM09')
		EXPORT = NONE,
		'POSITION'
			reference resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' ('POSITION')
		EXPORT = NONE
	);

create or alter resource RESOURCE.'EXAMPLES'.'E0440_DOG'.'DOG' in SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'DOG'
with
	amount = 0,
	group = 'ADMIN',
	online,
	requestable amount = 0,
	state = 'ROOM01',
	parameter = none;

create or alter trigger 'MOVE' on job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'WHILE_NOT_ESCAPED'
with
	active,
	condition = none,
	nomaster,
	nowarn,
	limit state = none,
	nosuspend,
	state = (
		'AGAIN'
	),
	submitcount = 50,
	submit SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'MOVE',
	type = BEFORE_FINAL;

create or alter comment on job definition SYSTEM.'EXAMPLES'.'E0450_DOG_ENTERPRISE'.'DOG'
with
	TAG = none, TEXT = 'This example lets a dog walk through a labyrinth.
If it didn\'t find the exit within 50 jumps it dies from starvation.
The labyrinth is displayed after each move.

The example resembles the frog example, but in this case the higher intelligence of the dog is taken in account.
It therefore doesn\'t walk into a random direction but a simple algorithm based on the direction it entered a field the first time
and the directions already tried is used.

Contrary to the plain dog example, the two if statements are now implemented within the scheduling system using conditional dependencies.';


end multicommand;
