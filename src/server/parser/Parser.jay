%{
//
// Parser.jay
//
// Copyright (C) 2001,2013 independIT Integrative Technologies GmbH
//
//

package de.independit.scheduler.server.parser;

import java.io.*;
import java.util.*;
import java.lang.*;
import java.util.regex.*;
import de.independit.scheduler.server.util.*;
import de.independit.scheduler.server.repository.*;
import de.independit.scheduler.server.exception.*;
import de.independit.scheduler.server.output.*;
import de.independit.scheduler.server.*;

public class Parser
{

	private int stop = 0;
	private static final String patternString = "^[-!#%&(-,/0-9=?@A-Z_a-z|]([- !#%&(-,/0-9=?@A-Z_a-z|]*[-!#%&(-,/0-9=?@A-Z_a-z|])?$";
	private final Pattern identifierPattern = Pattern.compile(patternString);

	private final static Integer PLUS_ONE		= SDMSConstants.iONE;
	private final static Integer MINUS_ONE		= SDMSConstants.iMINUS_ONE;

	private boolean inStatement = false;

	public boolean inStatement() { return inStatement; }

	public Parser() { /* nothing to do */ }
%}

%token <Token>	INTEGER NAN
%token <Token>	FLOAT

%token <Token>	ACTION ACTIVATE ACTIVE ADD AFTER AFTER_FINAL AGING
%token <Token>	ALIAS ALL ALL_FINAL ALTER AMOUNT AND ANY AT APPROVE APPROVAL AUDIT AUTHENTICATED AVG
%token <Token>	BACKLOG_HANDLING BACKUP BASE BATCH BEFORE BEFORE_FINAL BETWEEN BMULTICMD BOTH BROKEN BROKEN_ACTIVE BROKEN_FINISHED BY
%token <Token>	CALENDAR CANCEL CANCELLED CASCADE CATEGORY CHANGE_STATUS CHANGE CHILD CHECK CHILDREN CHILDSUSPEND CHILDTAG CLEANUP CLEAR CLONE CMPOP
%token <Token>	COMMAND COMMENT CONDENSED CONDITION CONFIG CONNECT CONSTANT CONTENT CONTINUE COPY COUNT CREATE CRITICAL CYCLE
%token <Token>	DAY DEFAULT DEFAULT_MAPPING DEFER DEFER_IGNORE DEFINITION DELAY DELETE DELTA DEPENDENCY DEPENDENCY_DEFINITION
%token <Token>	DEPENDENCY_HIERARCHY DEPENDENCY_MODE DEPENDENCY_WAIT DEPLOY DEREGISTER DIR DISABLE DISCONNECT DISPATCH DISTRIBUTION DOLLAR DROP DUMP DURATION DYNAMIC
%token <Token>	EDIT EMBEDDED EMULTICMD ENABLE ENABLED ENDTIME ENVIRONMENT ERRLOG ERROR_TEXT ERROR_TOKEN EQUIVALENT EVENT EXECUTE EXEC_PID
%token <Token>	EXISTING EXIT_CODE EXIT_STATUS EXIT_STATUS_DEFINITION EXIT_STATUS_MAPPING EXIT_STATUS_PROFILE
%token <Token>	EXIT_STATUS_TRANSLATION EXPAND EXPIRED EXPORT EXPR EXT_PID EXTERNAL
%token <Token>	FACTOR FAIL FAILURE FATAL FILTER FINAL FINISH FINISH_CHILD FINISHED FOLDER FOOTPRINT FOR FORCE FORCED_EOC FREE_AMOUNT FREEPCT FROM FUTURE
%token <Token>	GET GET_NEXT_JOB GLOBAL GRANT GROUP
%token <Token>	HEADER HISTORY HORIZON HOUR
%token <Token>	IDENTIFIED IDENTIFIER IGNORE IGNORE_DEPENDENCY IMMEDIATE IMMEDIATE_LOCAL IMMEDIATE_MERGE IMPORT IN INACTIVE
%token <Token>	INFINITE INFO INHERIT INITIAL_STATUS INSTANCE INTERNAL INTERVAL INVERSE IS ISX IX
%token <Token>	JOB JOB_DEFINITION JOB_DEFINITION_HIERARCHY JOB_FINAL JOB_SERVER JOB_STATUS JSON
%token <Token>	KEEP KEEP_FINAL KILL KILLED KILL_PROGRAM
%token <Token>	LANGUAGE LAST LEADING LEVEL LIBERAL LIKE LIMIT LINE LINK LIST LOCAL LOCAL_CONSTANT LOCK LOCKMODE LOGFILE LOOPS
%token <Token>	MAIN MANAGE MANAGED MANAGE_SELECT MAP MAPPING MAPS MASTER MASTER_ID MAX MAXPCT MERGE MERGED MERGE_GLOBAL MERGE_LOCAL MERGE_MODE METHOD MILESTONE
%token <Token>	MIN MINPCT MINUTE MODE MONITOR MONTH MOVE MULTICOMMAND MULTIPLIER
%token <Token>	N NAME NAMED_RESOURCE NICE_PROFILE NICEVALUE NO NODE NOINVERSE NOKEEP NOMASTER NOMERGE NOMINALPCT NONE NONFATAL
%token <Token>	NORESUME NOSTICKY NOSUSPEND NOT NOTRACE NOTRUNC NOWARN
%token <Token>	OBJECT OF OFFLINE ON ONLINE ONLY OPERATE OR OTHER OWNER
%token <Token>	PARENT PARAMETERS PASSWORD PATH PENDING PERL PID PLAIN POOL PRIORITY PROFILE PROTOCOL PUBLIC PYTHON
%token <Token>	QUOTED
%token <Token>	RAW RAWPASSWORD REACHABLE READ REASSURE RECREATE RECURSIVE REFERENCE REGISTER REJECT RENAME RENICE REQUIRED REQUEST REQUESTABLE_AMOUNT RERUN RERUN_PROGRAM RESOLVE RESOURCE
%token <Token>	RESOURCE_TEMPLATE RESOURCE_STATUS RESOURCE_STATUS_DEFINITION RESOURCE_STATUS_MAPPING RESOURCE_STATUS_PROFILE RESOURCE_WAIT
%token <Token>	RESTARTABLE RESTRICT RESULT RESUME REVIEW REVOKE ROLLBACK ROOT RUN RUNNABLE RUNNING RUNTIME RUN_PROGRAM
%token <Token>	S SALT SC SCHEDULE SCHEDULED SCHEDULED_EVENT SCOPE SELECT SECO SELECTION SERIAL SERVER SESSION SET SHOW SHUTDOWN SINGLE SORT SQLSELECT SSL
%token <Token>	STARTED STARTING STARTTIME STATIC STATUS STATUS_MAPPING STATUS_PROFILE STICKY STOP STRICT STRING
%token <Token>	SUBMIT SUBMITCOUNT SUBMITTAG SUBMITTED SUBMITTING_USER SUM SUSPEND SUSPEND_LIMIT SX SUSPENDED SYNCHRONIZE_WAIT SYNCHRONIZING SYNCTIME SYSTEM
%token <Token>	TAG TERMINATED TEST TEXT TIME TIMEOUT TIMESTAMP TO TO_KILL TOKEN TOUCH TRACE TRANSLATION TREE TRIGGER TRUNC TYPE
%token <Token>	UNREACHABLE UNRESOLVED UNTIL_FINAL UNTIL_FINISHED UPDATE URL USAGE USE USER
%token <Token>	VALUE VERSION VIEW
%token <Token>	WARN WARNING WATCH WATCHER WEEK WITH WORKDIR
%token <Token>	X XML
%token <Token>	YEAR
%token <Token>	ZERO ZONE

//D:T-PARM	STRING
// die T_ALIAS Eintraege sind hier nicht mehr notwendig. Die stehen in der Datei $SDMSHOME/doc/lang/bin/mksyntax_genlib.py.

%type <Node>	alter_cmd, alter_comment, alter_dist
%type <Node>	alter_environment, alter_event, alter_exit_status_prof, alter_exit_status_mapping, alter_exit_status_trans
%type <Node>	alter_folder, alter_footprint, alter_group, alter_interval, alter_job, alter_job_definition, alter_jobservers, alter_named_resource, alter_nice_profile
%type <Node>	alter_om, alter_omj, alter_pool, alter_resource, alter_rsm, alter_rsp, alter_schedule, alter_scheduled_event, alter_scope, alter_server
%type <Node>	alter_session, alter_trigger, alter_user, alter_wt, approve_cmd
%type <Node>	child_submit_cmd, cleanup_folder, cmd,
%type <Node>	connect_cmd, connect_cmdu, connect_cmdj, connect_cmds, connect_init, connect_cont, copy_cmd
%type <Node>	copy_dist, copy_folder, copy_named_resource, copy_scope
%type <Node>	create_cmd, create_comment, create_dist
%type <Node>	create_environment, create_event, create_exit_status_prof, create_exit_status_def, create_exit_status_mapping
%type <Node>	create_exit_status_trans
%type <Node>	create_folder, create_footprint, create_group, create_interval, create_job_definition, create_named_resource, create_nice_profile
%type <Node>	create_om, create_pool, create_resource, create_resource_stat_def, create_rsm, create_rsp, create_schedule
%type <Node>	create_scheduled_event, create_scope, create_trigger, create_user create_wt
%type <Node>	deregister_cmd, disconnect_cmd, drop_cmd, drop_comment, drop_dist, drop_environment, drop_event, drop_exit_status_prof, drop_exit_status_def
%type <Node>	drop_exit_status_mapping, drop_exit_status_trans, drop_folder, drop_footprint, drop_group, drop_interval
%type <Node>	drop_named_resource, drop_nice_profile, drop_om, drop_pool, drop_resource, drop_resource_stat_def, drop_rsm, drop_rsp, drop_schedule
%type <Node>	drop_scheduled_event, drop_scope, drop_trigger, drop_user, drop_wt, dump_cmd
%type <Node>	empty_cmd, event_submit_cmd
%type <Node>	finish_job_cmd, full_submit_cmd
%type <Node>	get_next_job, get_parm_cmd, get_set_parm_cmd, get_submittag_cmd, grant_cmd
%type <Node>	kill_sess_cmd
%type <Node>	link_cmd, link_resource
%type <Node>	list_approval, list_calendar, list_cmd, list_dependency_definition, list_dependency_hierarchy, list_environment, list_event, list_exit_status_def
%type <Node>	list_exit_status_mapping, list_exit_status_profile, list_exit_status_trans, list_folder, list_footprint, list_group, list_grant
%type <Node>	list_interval, list_job
%type <Node>	list_job_definition_hierarchy, list_named_resource, list_nice_profile, list_om, list_pool, list_resource_stat_def, list_rsm, list_rsp, list_schedule
%type <Node>	list_scheduled, list_scheduled_event, list_scope, list_session, list_trigger, list_user, list_wt
%type <Node>	move_folder, move_job_definition, move_pool, move_schedule, move_scope, multicmd
%type <Node>	ordinarycmd
%type <Node>	reassure_cmd, register_cmd, rename_cmd, rename_dist, rename_environment, rename_event, rename_exit_status_prof, rename_exit_status_def
%type <Node>	rename_exit_status_mapping, rename_exit_status_trans, rename_folder, rename_footprint, rename_group, rename_interval, rename_job_definition,
%type <Node>	move_named_resource, rename_named_resource, rename_nice_profile, rename_om, rename_resource_stat_def, rename_rsm, rename_rsp, rename_scope, rename_schedule,
%type <Node>	rename_trigger, rename_user, rename_wt, resume_cmd, revoke_cmd, run_test_cmd
%type <Node>	select_cmd, set_parm_cmd, set_status_cmd
%type <Node>	show_comment, show_cmd, show_critical_path, show_dist, show_environment, show_event, show_exit_status_def, show_exit_status_mapping
%type <Node>	show_exit_status_profile, show_exit_status_trans, show_folder, show_footprint, show_group, show_interval, show_job, show_job_definition
%type <Node>	show_named_resource, show_nice_profile, show_om, show_pool, show_resource, show_resource_stat_def, show_rsm, show_rsp, show_schedule
%type <Node>	show_scheduled_event, show_scope
%type <Node>	show_session, show_system, show_trigger, show_user, show_wt, shutdown_cmd, stop_svr_cmd, submit_cmd, suspend_cmd
%type <Node>	versionedcmd

%type <Boolean>	add_or_alter, add_or_delete, alter, ar_online, as_suspend
%type <Boolean>	create
%type <Boolean>	delete, drop
%type <Boolean>	enable
%type <Boolean>	gr_cascforce
%type <Boolean>	ival_merge
%type <Boolean>	jp_optlocal, js_fatal
%type <Boolean>	list, show
%type <Boolean>	master
%type <Boolean>	opt_cascade, opt_force, opt_ignore, opt_leading, opt_suspended, opttrunc
%type <Boolean>	active, staticdynamic
%type <Boolean>	trace, trunc
%type <Boolean> wt_submitpar

%type <String>	aliasname
%type <String>	cmdline, cmpop
%type <String>	daliasname dependencyname, dirspec, dispatchname, distname, dumptype, dump_identifier
%type <String>	environmentname, eventname, expression
%type <String>	filespec, foldername, footprintname
%type <String>	gpmode, groupname
%type <String>	history
%type <String>	identified_by, identifier, intervalname, instancename
%type <String>	jobname, jp_optdefault, jp_optexport, jw_footprintname, jw_mappingname, jw_rsmname, jw_transname
%type <String>	keywords
%type <String>	mappingname
%type <String>	nodename
%type <String>	objecttypename, opt_app_with, opt_filespec, opt_gpmode, opt_username
%type <String>	parametername, pid, profilename
%type <String>	resourcename, rsmname, rspname, rulename
%type <String>	schedulename, scopename, sdatetime, servername, statusname, stridentifier
%type <String>	transname, triggername
%type <String>	username
%type <String>	watchtypename, wt_parametertype, wt_parameterdefault

%type <Integer>	all_jobstates, allany, approval_mode
%type <Integer>	baseinterval
%type <Integer>	ct_event, ct_triggertype
%type <Integer>	esp_state_type
%type <Integer>	integer
%type <Integer>	job_childdef_suspend, job_type, jobstate, jobstate2, jp_aggfunction, jrq_mode, jrq_resolve, jrq_unresolved
%type <Integer>	lj_mode, lockmode, jrd_keep
%type <Integer>	mergemode
%type <Integer>	optall opt_integer, opt_quoted, opt_si_limit, opt_sid, opt_signed_integer, om_recreate
%type <Integer>	resource_usage
%type <Integer>	schevbacklog, sid, signed_integer, sj_filteritem
%type <Integer>	testid
%type <Integer>	us_connect_type

%type <Long>	id, jobid, jp_optid, longg
%type <Long> 	opt_ivowner, basic_priv, operate_priv, privilege, privilege_list

%type <Float>	signed_float

%type <Number>	number

%type <Token>	objecttype, sys_object

%type <Vector>	aj_igndepitem, aj_igndeplist, aj_ignrsrclist, aj_ignnrlist
%type <Vector>	cc_textitem, cc_textlist, cd_with, cfp_withwith, cfp_addwith, cfp_delwith, clf_list, cleanup_list 
%type <Vector>	connect_cmdlist, cpl_resourcelist, ct_eventlist, ct_jobstatuslist, ct_rscstatuslist
%type <Vector>	depnamelist, dump_expandlist, dump_list
%type <Vector>	env_resourcelist, env_with_clause, env_with_item, env_addclause, env_delclause, esm_map_clause, esm_with_clause
%type <Vector>	esm_maplist, esp_states, est_trans_list, est_with, est_withwith
%type <Vector>	folderpathlist, filterexpression, filterterm
%type <Vector>	gr_unlist
%type <Vector>	ival_namelist, ival_dispatchlist, ival_dispatchdef, ival_dispatchitem, ival_sellist
%type <Vector>	job_childdeflist, jobdeflist, job_requiredlist, job_resource_definitionlist, jobid_list, jrd_statelist, jrq_statelist
%type <Vector>	lc_filterexpression, lc_filterterm, lf_filterexpression, lf_filterterm, lj_exitstatelist, lj_jobserverlist, lj_nodelist, lj_parameterlist, lj_userlist 
%type <Vector>	lnr_filterexpression, lnr_filterterm, lnr_usagelist
%type <Vector>  npentrylist
%type <Vector>	opt_dump_list, opt_env_with_clause, opt_esm_maplist, opt_si_with, opt_lj_idlist
%type <Vector>	opt_ordinarycmdlist, ordinarycmdlist
%type <Vector>	parmlist
%type <Vector>	resourcelist, system_resource_reqlist, rsm_with_clause, rsm_withitem, rsm_withitemlist
%type <Vector>	sj_auditfilter, sortlist, statuslist, submitcmdlist, submit_paramlist
%type <Vector>	url_list, us_equiv_list, us_grlist, wt_parameterlist, wt_parameteritem

%type <PathVector>	ar_path, dump_rulelist, folderpath, opt_resourcepath, resourcepath,
%type <PathVector>	schedulepath, serverpath

%type <HashSet>		expand, idlist, lj_jobstatelist, opt_expand, opt_la_with

%type <WithHash>	aj_withlist, aj_withwith, ajd_add_del_list, anr_with_clause, anr_with_list, aom_with_clause, aom_withitemlist, operate_approvelist, ar_parmlist, ar_with_clause, ar_with_list
%type <WithHash>	cc_with, cev_withlist, cev_with_clause, cf_optwith, cf_parmlist, cf_with, cf_withwith, clf_optwith, clf_with
%type <WithHash>	cnr_parmlist, cnr_with_clause, cnr_with_list, cpl_withlist, cpl_resource, connect_with, connect_withlist
%type <WithHash>	cs_optwith, ct_parmlist, ct_withlist, ct_withwith
%type <WithHash>	dump_maplist, dump_with, dump_withlist
%type <WithHash>	esp_with, esp_withwith, esp_state_optionlist
%type <WithHash>	gr_add_dellist, gr_with, gr_withlist
%type <WithHash>	ival_with, ival_withlist
%type <WithHash>	job_childdef, job_parameterslist, job_required, job_resource_definition, job_with_clause, job_withitemlist, jobsvr_parm,
%type <WithHash>	jrd_sticky, js_with, js_withwith, jw_filespec
%type <WithHash>	lc_withlist, lf_withlist, lj_withlist, lnr_withlist, lnr_withwith
%type <WithHash>	npwith, npentry
%type <WithHash>	om_parameterlist, om_period, om_with_clause, om_withitemlist, om_instancelist
%type <WithHash>	opt_connect_with, opt_dump_with, opt_event_submit_with, opt_ival_with, opt_gr_with, opt_lc_withlist, opt_lf_withlist, opt_lj_withlist, opt_lnr_withwith
%type <WithHash>	opt_npwith, opt_om_instancelist, opt_period, opt_schevwith, opt_schedwith, opt_sel_with, opt_sj_with, opt_sp_with, opt_stickyspec, opt_scp_with, opt_submit_with
%type <WithHash>	period, protocol
%type <WithHash>	system_resource_req, rsp_with_clause, rsp_withitemlist
%type <WithHash>	schedwithlist, schedwithwith, schevwithlist, schevwithwith, scope_cfg, scope_cfg_list, scope_cfg_envlist, scope_parm, scope_parmlist, scp_withlist, select_with
%type <WithHash>	selwithlist, signed_period, signed_period_rj, sj_withlist, stickyspec, submit_with, submit_withlist, sp_with
%type <WithHash>	us_add_dellist, us_parmlist, us_with, us_withlist, wt_with_clause, wt_withitemlist

%type <WithItem>	aj_disable, aj_suspend, aj_withitem, ajd_add_del_item, anr_with_item, aom_withitem, approval_required, operate_approval, ar_parm, ar_with_item
%type <WithItem>	cc_withitem, cev_withitem, cf_withitem, cf_parm, clf_withitem, cnr_parm, cnr_with_item, connect_withitem
%type <WithItem>	cpl_managed, cpl_res_item, cpl_withitem, ct_object, ct_parm, ct_rscstatusitem, ct_warn_nowarn, ct_withitem
%type <WithItem>	dump_mapitem, dump_withitem
%type <WithItem>	esp_with_options, esp_state_option, env_resource
%type <WithItem>	filteratom, filteritem
%type <WithItem>	gr_add_delitem, gr_withitem
%type <WithItem>	ival_inverse, ival_selitem, ival_withitem
%type <WithItem>	jcd_item, job_parameter, job_withitem, jp_nondefwith, jp_withitem, jrd_item, jrd_static_item, jrd_sync_item, jrd_system_item, jrq_item, jrq_req_state, js_withitem
%type <WithItem>	lc_filteratom, lc_filteritem, lc_withitem, lf_filteratom, lf_filteritem, lf_withitem, lj_withitem, lnr_filteratom, lnr_filteritem, lnr_withitem
%type <WithItem>	npwithitem, npentryitem
%type <WithItem>	opt_ival_inverse, opt_jp_withitem, om_parameteritem, om_withitem, om_instanceitem, opt_zero
%type <WithItem>	password, parm_is_string
%type <WithItem>	resume, rsp_withitem
%type <WithItem>	schedwith, schevwithitem, scope_cfg_item, scope_parmitem, scp_withitem, se_spec, selwithitem, sj_withitem, submit_param, submit_withitem, suspend
%type <WithItem>	us_add_delitem, us_withitem, wt_withitem, with_group, with_inherit_grant

%type <ObjectURL>	all_dump_url, dist_url, dump_objecturl, env_url, esd_url, esm_url, esp_url, est_url, event_url, folder_url, folderresource_url, fp_url
%type <ObjectURL>	folder_or_job, group_url, interval_url, job_url, jobdef_url, np_url, nr_url, objecturl, om_url
%type <ObjectURL>	parameter_url, param_loc, pool_url, restrict_url, resource_url, rsd_url, rsm_url, rsp_url, scheduledevent_url, schedule_url
%type <ObjectURL>	scope_url, scoperesource_url, t_url, trigger_url, user_url, wt_url

%type <DateTime>		datetime_notz, datetime, datetime_duration
%type <DumpExpandItem>		dump_expanditem
%type <EsmMap>			esm_mapping
%type <EspState>		esp_state
%type <DumpRule>		dump_rule
%type <StatusTranslation>	est_trans
%type <Object>			rvalue, us_equiv_identifier, cintervalname

%start connect

%%

connect:									{ /* Empty input is OK */ }
	|	connect_cmd SECO						{ if (!post($1)) return null; } optcmdlist
	|	sso_connect optcmdlist
	|	error SECO							{ post(new Disconnect()); if(stop == 0) return null; }
	|	error FORCED_EOC						{ post(new Disconnect()); if(stop == 0) return null; }

optcmdlist:
	|	cmdlist								{ yyErrorFlag=0; }

cmdlist:	cmd SECO							{ inStatement = false; post($1); yyErrorFlag=0; }
	|	error SECO							{ inStatement = false; yyErrorFlag=0; /* yyerror is called automatically */ post(null); }
	|	error FORCED_EOC						{ inStatement = false; yyErrorFlag=0; /* yyerror is called automatically */ post(null); }
	|	cmdlist cmd SECO						{ inStatement = false; post($2); yyErrorFlag=0; }
	|	cmdlist error SECO						{ inStatement = false; yyErrorFlag=0; /* yyerror is called automatically */ post(null); }
	|	cmdlist error FORCED_EOC					{ inStatement = false; yyErrorFlag=0; /* yyerror is called automatically */ post(null); }
	|	FORCED_EOC							{ inStatement = false; }
	|	cmdlist FORCED_EOC						{ inStatement = false; }

//D:NT=PARM
//D:NT-ALIAS = sdms-command
cmd:		multicmd							{ $$ = $1; }
	|	ordinarycmd							{ $$ = $1; }
	|	submit_cmd							{ $$ = $1; }

//D:MASTER USER JOB SERVER
//D:NT-ALIAS = multicommand
//D:DESCRIPTION multicommand.tex
//D:PURPOSE P185
multicmd:	BMULTICMD opt_ordinarycmdlist EMULTICMD 			{ $$ = $2 == null ? null : new MultiCommand($2, true); }
	|	BMULTICMD opt_ordinarycmdlist EMULTICMD ROLLBACK 		{ $$ = $2 == null ? null : new MultiCommand($2, false); }

//D:NT=PARM
//D:NT-ALIAS = commandlist
opt_ordinarycmdlist:								{ $$ = new Vector(); }
	|	error SECO							{ yyErrorFlag=0; $$ = null; /* yyerror is called automatically */ }
	|	submitcmdlist							{ $$ = $1; }
	|	ordinarycmdlist							{ $$ = $1; }
	|	ordinarycmdlist error SECO					{ yyErrorFlag=0; $$ = null; /* yyerror is called automatically */ }
	|	ordinarycmdlist	submitcmdlist					{ $$ = $1; $<Vector>$.addAll($2); }
	|	ordinarycmdlist	submitcmdlist error SECO			{ yyErrorFlag=0; $$ = null; /* yyerror is called automatically */ }

submitcmdlist:	submit_cmd SECO							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	submitcmdlist submit_cmd SECO					{ if($1 != null) $1.addElement($2); }

ordinarycmdlist:	ordinarycmd SECO					{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	ordinarycmdlist ordinarycmd SECO				{ if($1 != null) $1.addElement($2); }

ordinarycmd:	alter_cmd							{ $$ = $1; }
	|	approve_cmd							{ $$ = $1; }
	|	connect_cmd							{ $$ = $1; }
	|	copy_cmd							{ $$ = $1; }
	|	create_cmd							{ $$ = $1; }
	|	deregister_cmd							{ $$ = $1; }
	|	disconnect_cmd							{ $$ = $1; }
	|	drop_cmd							{ $$ = $1; }
	|	empty_cmd							{ $$ = $1; }
	|	finish_job_cmd							{ $$ = $1; }
	|	get_next_job							{ $$ = $1; }
	|	get_set_parm_cmd						{ $$ = $1; }
	|	get_submittag_cmd						{ $$ = $1; }
	|	grant_cmd							{ $$ = $1; }
	|	kill_sess_cmd							{ $$ = $1; }
	|	link_cmd							{ $$ = $1; }
	|	reassure_cmd							{ $$ = $1; }
	|	register_cmd							{ $$ = $1; }
	|	rename_cmd							{ $$ = $1; }
	|	resume_cmd							{ $$ = $1; }
	|	revoke_cmd							{ $$ = $1; }
	|	run_test_cmd							{ $$ = $1; }
	|	select_cmd							{ $$ = $1; }
	|	set_status_cmd							{ $$ = $1; }
	|	shutdown_cmd							{ $$ = $1; }
	|	stop_svr_cmd							{ $$ = $1; }
	|	suspend_cmd							{ $$ = $1; }
	|	versionedcmd							{ $$ = $1; }

versionedcmd:	show_cmd							{ $$ = $1; }
	|	list_cmd							{ $$ = $1; }
	|	dump_cmd							{ $$ = $1; }
	|	VERSION longg show_cmd						{ $3.setContextVersion($2); $$ = $3; }
	|	VERSION longg list_cmd						{ $3.setContextVersion($2); $$ = $3; }
	|	VERSION longg dump_cmd						{ $3.setContextVersion($2); $$ = $3; }


alter_cmd:	alter_user							{ $$ = $1; }
	|	alter_comment							{ $$ = $1; }
	|	alter_dist							{ $$ = $1; }
	|	alter_environment						{ $$ = $1; }
	|	alter_event							{ $$ = $1; }
	|	alter_exit_status_mapping					{ $$ = $1; }
	|	alter_exit_status_prof						{ $$ = $1; }
	|	alter_exit_status_trans						{ $$ = $1; }
	|	alter_folder							{ $$ = $1; }
	|	alter_footprint							{ $$ = $1; }
	|	alter_group							{ $$ = $1; }
	|	alter_interval							{ $$ = $1; }
	|	alter_job							{ $$ = $1; }
	|	alter_job_definition						{ $$ = $1; }
	|	alter_named_resource						{ $$ = $1; }
	|	alter_nice_profile  						{ $$ = $1; }
	|	alter_om							{ $$ = $1; }
	|	alter_omj							{ $$ = $1; }
	|	alter_pool							{ $$ = $1; }
	|	alter_resource							{ $$ = $1; }
	|	alter_rsm							{ $$ = $1; }
	|	alter_rsp							{ $$ = $1; }
	|	alter_schedule							{ $$ = $1; }
	|	alter_scheduled_event						{ $$ = $1; }
	|	alter_scope							{ $$ = $1; }
	|	alter_session							{ $$ = $1; }
	|	alter_server							{ $$ = $1; }
	|	alter_trigger							{ $$ = $1; }
	|	alter_wt							{ $$ = $1; }

create_cmd:	create_user							{ $$ = $1; }
	|	create_comment							{ $$ = $1; }
	|	create_dist							{ $$ = $1; }
	|	create_environment						{ $$ = $1; }
	|	create_event							{ $$ = $1; }
	|	create_exit_status_def						{ $$ = $1; }
	|	create_exit_status_mapping					{ $$ = $1; }
	|	create_exit_status_prof						{ $$ = $1; }
	|	create_exit_status_trans					{ $$ = $1; }
	|	create_folder							{ $$ = $1; }
	|	create_footprint						{ $$ = $1; }
	|	create_group							{ $$ = $1; }
	|	create_interval							{ $$ = $1; }
	|	create_job_definition						{ $$ = $1; }
	|	create_named_resource						{ $$ = $1; }
	|	create_nice_profile						{ $$ = $1; }
	|	create_om							{ $$ = $1; }
	|	create_pool							{ $$ = $1; }
	|	create_resource							{ $$ = $1; }
	|	create_resource_stat_def					{ $$ = $1; }
	|	create_rsm							{ $$ = $1; }
	|	create_rsp							{ $$ = $1; }
	|	create_schedule							{ $$ = $1; }
	|	create_scheduled_event						{ $$ = $1; }
	|	create_scope							{ $$ = $1; }
	|	create_trigger							{ $$ = $1; }
	|	create_wt							{ $$ = $1; }

drop_cmd:	drop_user							{ $$ = $1; }
	|	drop_comment							{ $$ = $1; }
	|	drop_dist							{ $$ = $1; }
	|	drop_environment						{ $$ = $1; }
	|	drop_event							{ $$ = $1; }
	|	drop_exit_status_def						{ $$ = $1; }
	|	drop_exit_status_mapping					{ $$ = $1; }
	|	drop_exit_status_trans						{ $$ = $1; }
	|	drop_exit_status_prof						{ $$ = $1; }
	|	drop_folder							{ $$ = $1; }
	|	cleanup_folder							{ $$ = $1; }
	|	drop_footprint							{ $$ = $1; }
	|	drop_group							{ $$ = $1; }
	|	drop_interval							{ $$ = $1; }
	|	drop_named_resource						{ $$ = $1; }
	|	drop_nice_profile						{ $$ = $1; }
	|	drop_om								{ $$ = $1; }
	|	drop_pool							{ $$ = $1; }
	|	drop_resource							{ $$ = $1; }
	|	drop_resource_stat_def						{ $$ = $1; }
	|	drop_rsp							{ $$ = $1; }
	|	drop_rsm							{ $$ = $1; }
	|	drop_scope							{ $$ = $1; }
	|	drop_schedule							{ $$ = $1; }
	|	drop_scheduled_event						{ $$ = $1; }
	|	drop_trigger							{ $$ = $1; }
	|	drop_wt								{ $$ = $1; }

rename_cmd:	rename_user							{ $$ = $1; }
	|	move_folder							{ $$ = $1; }
	|	move_scope							{ $$ = $1; }
	|	move_job_definition						{ $$ = $1; }
	|	move_named_resource						{ $$ = $1; }
	|	move_pool							{ $$ = $1; }
	|	move_schedule							{ $$ = $1; }
	|	rename_dist							{ $$ = $1; }
	|	rename_environment						{ $$ = $1; }
	|	rename_event							{ $$ = $1; }
	|	rename_exit_status_def						{ $$ = $1; }
	|	rename_exit_status_mapping					{ $$ = $1; }
	|	rename_exit_status_prof						{ $$ = $1; }
	|	rename_exit_status_trans					{ $$ = $1; }
	|	rename_folder							{ $$ = $1; }
	|	rename_footprint						{ $$ = $1; }
	|	rename_group							{ $$ = $1; }
	|	rename_interval							{ $$ = $1; }
	|	rename_job_definition						{ $$ = $1; }
	|	rename_named_resource						{ $$ = $1; }
	|	rename_nice_profile						{ $$ = $1; }
	|	rename_om							{ $$ = $1; }
	|	rename_resource_stat_def					{ $$ = $1; }
	|	rename_rsm							{ $$ = $1; }
	|	rename_rsp							{ $$ = $1; }
	|	rename_scope							{ $$ = $1; }
	|	rename_schedule							{ $$ = $1; }
	|	rename_trigger							{ $$ = $1; }
	|	rename_wt							{ $$ = $1; }

copy_cmd:	copy_folder							{ $$ = $1; }
	|	copy_scope							{ $$ = $1; }
	|	copy_named_resource						{ $$ = $1; }
	|	copy_dist							{ $$ = $1; }

link_cmd:	link_resource							{ $$ = $1; }

list_cmd:	list_named_resource						{ $$ = $1; }
	|	list_approval							{ $$ = $1; }
	|	list_calendar							{ $$ = $1; }
	|	list_dependency_definition					{ $$ = $1; }
	|	list_dependency_hierarchy					{ $$ = $1; }
	|	list_environment						{ $$ = $1; }
	|	list_exit_status_def						{ $$ = $1; }
	|	list_exit_status_mapping					{ $$ = $1; }
	|	list_exit_status_profile					{ $$ = $1; }
	|	list_exit_status_trans						{ $$ = $1; }
	|	list_event							{ $$ = $1; }
	|	list_footprint							{ $$ = $1; }
	|	list_folder							{ $$ = $1; }
	|	list_group							{ $$ = $1; }
	|	list_grant							{ $$ = $1; }
	|	list_interval							{ $$ = $1; }
	|	list_job							{ $$ = $1; }
	|	list_job_definition_hierarchy					{ $$ = $1; }
	|	list_nice_profile						{ $$ = $1; }
	|	list_om								{ $$ = $1; }
	|	list_pool							{ $$ = $1; }
	|	list_resource_stat_def						{ $$ = $1; }
	|	list_rsp							{ $$ = $1; }
	|	list_rsm							{ $$ = $1; }
	|	list_schedule							{ $$ = $1; }
	|	list_scheduled							{ $$ = $1; }
	|	list_scheduled_event						{ $$ = $1; }
	|	list_scope							{ $$ = $1; }
	|	list_session							{ $$ = $1; }
	|	list_trigger							{ $$ = $1; }
	|	list_user							{ $$ = $1; }
	|	list_wt								{ $$ = $1; }

show_cmd:	show_named_resource						{ $$ = $1; }
	|	show_comment							{ $$ = $1; }
	|	show_critical_path						{ $$ = $1; }
	|	show_dist							{ $$ = $1; }
	|	show_environment						{ $$ = $1; }
	|	show_exit_status_def						{ $$ = $1; }
	|	show_exit_status_mapping					{ $$ = $1; }
	|	show_exit_status_profile					{ $$ = $1; }
	|	show_exit_status_trans						{ $$ = $1; }
	|	show_event							{ $$ = $1; }
	|	show_folder							{ $$ = $1; }
	|	show_footprint							{ $$ = $1; }
	|	show_group							{ $$ = $1; }
	|	show_interval							{ $$ = $1; }
	|	show_job							{ $$ = $1; }
	|	show_job_definition						{ $$ = $1; }
	|	show_nice_profile						{ $$ = $1; }
	|	show_om								{ $$ = $1; }
	|	show_pool							{ $$ = $1; }
	|	show_resource							{ $$ = $1; }
	|	show_resource_stat_def						{ $$ = $1; }
	|	show_rsm							{ $$ = $1; }
	|	show_rsp							{ $$ = $1; }
	|	show_schedule							{ $$ = $1; }
	|	show_scheduled_event						{ $$ = $1; }
	|	show_scope							{ $$ = $1; }
	|	show_session							{ $$ = $1; }
	|	show_system							{ $$ = $1; }
	|	show_trigger							{ $$ = $1; }
	|	show_user							{ $$ = $1; }
	|	show_wt								{ $$ = $1; }

//----------------------------------------------------------------------------------------------
//
// S T A R T   S I N G L E   C O M M A N D S
//
//----------------------------------------------------------------------------------------------

empty_cmd:									{ $$ = new EmptyCmd(); }


//----------------------------------------------------------------------------------------------
// A P P R O V E   C O M M A N D
// ---------------------------------------------------------------------------------------------
//D:MASTER USER
//D:LEVEL professional
//D:NT-ALIAS = approve
//D:PURPOSE P212
//D:DESCRIPTION approve.tex
approve_cmd:	APPROVE idlist opt_app_with					{ $$ = new ApproveCmd(true, $2, $3); }
	|	REJECT idlist opt_app_with					{ $$ = new ApproveCmd(false, $2, $3); }

opt_app_with:									{ $$ = null; }
	|	WITH COMMENT '=' STRING						{ $$ = $4.textValue; }


//D:MASTER USER
//D:LEVEL professional
//D:NT-ALIAS = list approval
//D:PURPOSE P213
//D:DESCRIPTION list_approval.tex
list_approval:	LIST PENDING APPROVAL opt_la_with					{ $$ = new ListApproval($4); }
	|	LIST APPROVAL opt_la_with						{ $$ = new ListApproval($3); }

opt_la_with:										{ $$ = null; }
	|	WITH JOB IN '(' idlist ')'						{ $$ = $5; }


//----------------------------------------------------------------------------------------------
// S E L E C T   C O M M A N D
// ---------------------------------------------------------------------------------------------
//D:MASTER USER
//D:NT-ALIAS = select
//D:PURPOSE P001
//D:DESCRIPTION select.tex
select_cmd:	SQLSELECT opt_sel_with						{ $$ = new SelectCmd($1.textValue, $2); }

opt_sel_with:									{ $$ = null; }
	|	with select_with						{ $$ = $2; }

select_with:	selwithlist							{ $$ = $1; }

selwithlist:	selwithitem							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	selwithlist ',' selwithitem					{ $1.addItem($3); }

//D:NT-ALIAS = withitem
selwithitem:	identifier SCOPE opt_quoted					{ $$ = new WithItem($1, $2.token * $3); }
	|	identifier FOLDER opt_quoted					{ $$ = new WithItem($1, $2.token * $3); }
	|	identifier JOB opt_quoted					{ $$ = new WithItem($1, $2.token * $3); }
	|	identifier CATEGORY opt_quoted					{ $$ = new WithItem($1, $2.token * $3); }
	|	identifier RESOURCE opt_quoted					{ $$ = new WithItem($1, $2.token * $3); }
	|	identifier SCHEDULE opt_quoted					{ $$ = new WithItem($1, $2.token * $3); }
	|	SORT '(' sortlist ')'						{ $$ = new WithItem(ParseStr.S_SORT, $3); }

opt_quoted:									{ $$ = PLUS_ONE; }
	|	QUOTED								{ $$ = MINUS_ONE; }

sortlist:	signed_integer							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	sortlist ',' signed_integer					{ $1.addElement($3); }



//----------------------------------------------------------------------------------------------
// S E S S I O N   C O M M A N D
//----------------------------------------------------------------------------------------------
//D:MASTER USER JOB SERVER
//D:NT-ALIAS = disconnect
//D:DESCRIPTION disconnect.tex
//D:PURPOSE P003
disconnect_cmd:	DISCONNECT							{ post(new Disconnect()); if(stop == 0) return null; }



//----------------------------------------------------------------------------------------------
// C O N N E C T   C O M M A N D 
//----------------------------------------------------------------------------------------------
connect_cmd:	connect_cmdu							{ $$ = $1; }
	|	connect_cmds							{ $$ = $1; }
	|	connect_cmdj							{ $$ = $1; }

sso_connect:	connect_init 							{ if (!post($1)) return null; } connect_contlist

connect_init:	CONNECT connect_with SECO					{ $$ = new SSOConnect($2, true); }

connect_contlist: connect_cont SECO						{ if (!post($1)) return null; }
	|	connect_contlist connect_cont SECO				{ if (!post($2)) return null; }
	|	error SECO							{ post(new Disconnect()); if(stop == 0) return null; }

connect_cont:	CONTINUE CONNECT connect_with					{ $$ = new SSOConnect($3, false); }


//D:MASTER USER NOJOB NOSERVER
//D:NT-ALIAS = connect
//D:PURPOSE P004
//D:DESCRIPTION connect.tex
connect_cmdu:	CONNECT username identified_by opt_connect_with 		{
										  WithHash w = $4;
										  Vector cmds = (Vector) w.get(ParseStr.S_COMMAND);
										  boolean correct = true;
										  if (cmds != null) {
											for (int i = 0; i < cmds.size(); ++i) {
												if (cmds.get(i) == null) {
													yyerror(ParseStr.S_SYNTAX_ERROR, new String[]{""});
													correct = false;
												}
											}
										  }
										  if (correct)
											$$ = new Connect($2, $3, $4); 
										  else
											$$ = null;
										}

//D:MASTER SERVER NOUSER NOJOB
//D:NT-ALIAS = connect
//D:PURPOSE P169
//D:DESCRIPTION connect.tex
connect_cmds:	CONNECT JOB_SERVER serverpath '.' servername identified_by opt_connect_with
										{ $$ = new Connect($3, $5, $6, $7); }

//D:MASTER JOB NOUSER NOSERVER
//D:NT-ALIAS = connect
//D:PURPOSE P170
//D:DESCRIPTION connect.tex
connect_cmdj:	CONNECT JOB jobid identified_by	opt_connect_with		{ $$ = new Connect($3, $4, $5); }

identified_by:	IDENTIFIED BY STRING						{ $$ = $3.textValue;
										  ConnectionEnvironment ce = getConnectionEnvironment();
										  if(ce != null) {
											((UserConnection) ce.getMe()).scanner.unproto_input($3.textValue); 
										  }
										}


opt_connect_with:								{ $$ = new WithHash(); }
	|	connect_with							{ $$ = $1; }

//D:LINEBREAK
connect_with:	WITH connect_withlist						{ $$ = $2; }

connect_withlist: connect_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	connect_withlist ',' connect_withitem				{ $1.addItem($3); }
		
//D:NT-ALIAS = withitem
connect_withitem:	PROTOCOL '=' protocol					{ $$ = new WithItem(ParseStr.map($1.token), $3); 
										  ConnectionEnvironment ce = getConnectionEnvironment();
										  if(ce!=null) {
											ce.setRenderer($3);
										  }
										}
	|	TIMEOUT '=' integer						{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	trace								{ $$ = new WithItem(ParseStr.S_TRACE_LEVEL, $1); }
	|	COMMAND '=' '(' connect_cmdlist ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|	METHOD '=' STRING						{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	SESSION '=' STRING						{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|	TOKEN '=' STRING						{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|	TRACE LEVEL '=' integer						{ $$ = new WithItem(ParseStr.S_TRACE_LEVEL, $4); }

connect_cmdlist:	cmd							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		connect_cmdlist SECO cmd				{ $1.addElement($3); }

	
protocol:	XML								{ $$ = new WithHash(); $<WithHash>$.addItem(new WithItem("P", Integer.valueOf($1.token))); }
	|	LINE								{ $$ = new WithHash(); $<WithHash>$.addItem(new WithItem("P", Integer.valueOf($1.token))); }
//D:SUPPRESS
	|	TIME								{ $$ = new WithHash(); $<WithHash>$.addItem(new WithItem("P", Integer.valueOf($1.token))); }
	|	SERIAL								{ $$ = new WithHash(); $<WithHash>$.addItem(new WithItem("P", Integer.valueOf($1.token))); }
	|	PYTHON opt_zero							{ $$ = new WithHash(); $<WithHash>$.addItem(new WithItem("P", Integer.valueOf($1.token))); $<WithHash>$.addItem($2); }
	|	PERL opt_zero							{ $$ = new WithHash(); $<WithHash>$.addItem(new WithItem("P", Integer.valueOf($1.token))); $<WithHash>$.addItem($2); }
	|	JSON opt_zero							{ $$ = new WithHash(); $<WithHash>$.addItem(new WithItem("P", Integer.valueOf($1.token))); $<WithHash>$.addItem($2); }

opt_zero:									{ $$ = new WithItem("Z", Boolean.FALSE); }
	|	ZERO TERMINATED							{ $$ = new WithItem("Z", Boolean.TRUE); }



//-----------------------------------------------------------------------------------
// D E B U G G I N G   C O M M A N D S
//-----------------------------------------------------------------------------------
run_test_cmd:	RUN TEST testid							{ $$ = new RunTest($3); }
	|	RUN TEST testid STRING						{ $$ = new RunTest($3, $4.textValue); }
	|	RUN TEST testid STRING READ					{ $$ = new RunTest($3, $4.textValue, true); }
	|	RUN TEST testid STRING id					{ $$ = new RunTest($3, $4.textValue, $5); }
	|	RUN TEST testid id						{ $$ = new RunTest($3, $4); }



//-----------------------------------------------------------------------------------
// S E R V E R   &   S E S S I O N   C O N T R O L 
//-----------------------------------------------------------------------------------
//D:MASTER
//D:NT-ALIAS = stop server
//D:DESCRIPTION stop_server.tex
//D:PURPOSE P005
stop_svr_cmd:	STOP SERVER							{ $$ = new StopServer(); }
	|	STOP SERVER KILL						{ $$ = new StopServer(getConnectionEnvironment(),true); }

//D:MASTER
//D:NT-ALIAS = alter server
//D:NODEFAULTS
//D:PURPOSE P006
//D:DESCRIPTION alter_server.tex
alter_server:	ALTER SERVER WITH enable CONNECT				{ $$ = new ConnectCtrl($4.booleanValue()); }
	|	ALTER SERVER WITH SCHEDULE					{ $$ = new AlterServer(); }
	|	ALTER SERVER WITH TRACE LEVEL '=' integer			{ $$ = new AlterServer($7); }
	|	ALTER SERVER WITH as_suspend integer				{ $$ = new AlterServer($4, $5); }

as_suspend:	SUSPEND								{ $$ = Boolean.TRUE; }
	|	RESUME								{ $$ = Boolean.FALSE; }

//D:MASTER
//D:NT-ALIAS = show system
//D:DESCRIPTION show_system.tex
//D:PURPOSE P007
show_system:	SHOW SYSTEM							{ $$ = new ShowSystem(false); }
	|	SHOW SYSTEM WITH LOCK						{ $$ = new ShowSystem(true); }

//D:MASTER
//D:NT-ALIAS = list session
//D:DESCRIPTION list_session.tex
//D:PURPOSE P008
list_session:	LIST SESSION							{ $$ = new ListSession(); }

//D:MASTER
//D:NT-ALIAS = show session
//D:DESCRIPTION show_session.tex
//D:PURPOSE P009
show_session:	SHOW SESSION opt_sid						{ $$ = new ShowSession($3); }

//D:MASTER
//D:NT-ALIAS = kill session
//D:DESCRIPTION kill_session.tex
//D:PURPOSE P010
kill_sess_cmd:	KILL SESSION sid						{ $$ = new KillSession($3); }

//D:MASTER
//D:NT-ALIAS = alter session
//D:PURPOSE P011
//D:DESCRIPTION alter_session.tex
alter_session:	ALTER SESSION opt_sid connect_with				{ $$ = new AlterSession($3, $4); }
	|	ALTER SESSION SET USER '=' username opt_connect_with		{ $$ = new AlterSession($6, $7); }
	|	ALTER SESSION SET USER '=' username FOR username opt_connect_with	{ $$ = new AlterSession($6, $8, $9); }
	|	ALTER SESSION SET USER IS DEFAULT				{ $$ = new AlterSession(); }

opt_sid:									{ $$ = null; }
	|	sid								{ $$ = $1; }



// -----------------------------------------------------------------------------------
//     U S E R
// -----------------------------------------------------------------------------------

//D:MASTER
//D:PURPOSE P012
//D:NT-ALIAS = create user
//D:DESCRIPTION create_user.tex
create_user:	create USER username us_with					{ $$ = new CreateUser($3, $4, $1); }

//D:MASTER
//D:NT-ALIAS = alter user
//D:NODEFAULTS
//D:PURPOSE P013
//D:DESCRIPTION alter_user.tex
alter_user:	alter user_url us_with				 		{ $$ = new AlterUser($2, $3, $1); }
	|	alter user_url us_add_dellist					{ $$ = new AlterUser($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = drop user
//D:PURPOSE P014
//D:DESCRIPTION drop_user.tex
drop_user:	drop user_url			 				{ $$ = new DropUser($2, $1); }

//D:MASTER
//D:NT-ALIAS = rename user
//D:PURPOSE P015
//D:DESCRIPTION rename_user.tex
rename_user:	RENAME user_url TO username					{ $$ = new RenameUser($2, $4); }

//D:MASTER
//D:NT-ALIAS = show user
//D:DESCRIPTION show_user.tex
//D:PURPOSE P016
show_user:	SHOW USER opt_username						{ $$ = new ShowUser($3); }

opt_username:									{ $$ = null; }
	|	username							{ $$ = $1; }

//D:MASTER
//D:NT-ALIAS = list user
//D:DESCRIPTION list_user.tex
//D:PURPOSE P017
list_user:	LIST USER							{ $$ = new ListUser(); }

//D:LINEBREAK
us_with:	WITH us_withlist						{ $$ = $2; }

//D:NT-ALIAS = withlist
us_withlist:	us_withitem							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	us_withlist ',' us_withitem					{ $1.addItem($3); }
	
//D:NT-ALIAS = withitem
		//D:OPTION password
us_withitem:	password							{ $$ = $1; }
		//D:OPTION enable
	|	enable								{ $$ = new WithItem(ParseStr.S_ENABLE, $1); }
		//D:OPTION group
	|	GROUP '=' '(' us_grlist ')'					{ $$ = new WithItem(ParseStr.S_GROUPLIST, $4); }
		//D:OPTION default group
	|	DEFAULT GROUP '=' groupname					{ $$ = new WithItem(ParseStr.S_DEFAULTGROUP, $4); }
		//D:OPTION connect type
	|	CONNECT TYPE '=' us_connect_type				{ $$ = new WithItem(ParseStr.S_CONNECT, $4); }
		//D:DEFAULT
	|	EQUIVALENT '=' NONE						{ $$ = new WithItem(ParseStr.S_EQUIVALENT, null); }
	|	EQUIVALENT '=' '(' us_equiv_list ')'				{ $$ = new WithItem(ParseStr.S_EQUIVALENT, $4); }
		//D:DEFAULT
	|	PARAMETERS '=' NONE						{ $$ = new WithItem(ParseStr.S_PARAMETERS, null); }
	|	PARAMETERS '=' '(' us_parmlist ')'				{ $$ = new WithItem(ParseStr.S_PARAMETERS, $4); }

us_connect_type:	PLAIN							{ $$ = ParseStr.I_PLAIN; }
	|		SSL							{ $$ = ParseStr.I_SSL; }
	|		SSL AUTHENTICATED					{ $$ = ParseStr.I_SSL_AUTH; }

//D:LINEBREAK
us_add_dellist: us_add_delitem							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	us_add_dellist ',' us_add_delitem				{ $1.addItem($3); }
	
//D:NT-ALIAS = add_delitem
us_add_delitem:	add_or_delete GROUP '=' '(' us_grlist ')'			{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_ADDGROUP : ParseStr.S_DELGROUP, $5); }
	|	add_or_alter PARAMETERS '=' '(' us_parmlist ')'			{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XADDPARM : ParseStr.S_ADDPARM, $5); }
	|	delete PARAMETERS '=' '(' parmlist ')'				{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XDELPARM : ParseStr.S_DELPARM, $5); }
	|	alter PARAMETERS '=' '(' us_parmlist ')'			{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XALTPARM : ParseStr.S_ALTPARM, $5); }
	
us_grlist:	groupname							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	us_grlist ',' groupname						{ $1.addElement($3); }

us_equiv_list:	us_equiv_identifier						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	us_equiv_list ',' us_equiv_identifier				{ $1.addElement($3); }

us_equiv_identifier: username							{ $$ = $1; }
	|	serverpath							{ $$ = $1; }

us_parmlist:	parm_is_string							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	us_parmlist ',' parm_is_string					{ $1.addItem($3); }


// -----------------------------------------------------------------------------------
//     G R O U P 
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create group
//D:PURPOSE P018
//D:DESCRIPTION create_group.tex
create_group:	create GROUP groupname opt_gr_with				{ $$ = new CreateGroup($3, $4, $1); }

//D:MASTER
//D:NT-ALIAS = alter group
//D:NODEFAULTS
//D:PURPOSE P019
//D:DESCRIPTION alter_group.tex
alter_group:	alter group_url gr_with						{ $$ = new AlterGroup($2, $3, $1); }
	|	alter group_url gr_add_dellist					{ $$ = new AlterGroup($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = drop group
//D:PURPOSE P020
//D:DESCRIPTION drop_group.tex
drop_group:	drop group_url							{ $$ = new DropGroup($2, $1); }

//D:MASTER
//D:NT-ALIAS = rename group
//D:PURPOSE P021
//D:DESCRIPTION rename_group.tex
rename_group:	RENAME group_url TO groupname					{ $$ = new RenameGroup($2, $4); }

//D:MASTER
//D:NT-ALIAS = show group
//D:DESCRIPTION show_group.tex
//D:PURPOSE P022
show_group:	SHOW group_url							{ $$ = new ShowGroup($2); }

//D:MASTER
//D:NT-ALIAS = list group
//D:DESCRIPTION list_group.tex
//D:PURPOSE P023
list_group:	LIST GROUP							{ $$ = new ListGroup(); }

opt_gr_with:									{ $$ = new WithHash(); }
	|	gr_with								{ $$ = $1; }

//D:LINEBREAK
gr_with:	WITH gr_withlist						{ $$ = $2; }
	
gr_withlist:	gr_withitem							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
//	|	gr_withlist ',' gr_withitem					{ $1.addItem($3); }
	
//D:NT-ALIAS = withitem
gr_withitem:	USER '=' '(' gr_unlist ')'					{ $$ = new WithItem(ParseStr.S_USERLIST, $4); }
	|	USER '=' NONE							{ $$ = new WithItem(ParseStr.S_USERLIST, new Vector());	}

//D:LINEBREAK
gr_add_dellist:	gr_add_delitem							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	gr_add_dellist ',' gr_add_delitem				{ $1.addItem($3); }

//D:NT-ALIAS = add_delitem
gr_add_delitem:	add_or_delete USER '=' '(' gr_unlist ')'			{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_ADDUSER:ParseStr.S_DELUSER, $5); }

gr_unlist:	username							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	gr_unlist ',' username						{ $1.addElement($3); }



// -----------------------------------------------------------------------------------
//     F O L D E R
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create folder
//D:PURPOSE P024
//D:DESCRIPTION create_folder.tex
create_folder:	create FOLDER folderpath cf_optwith				{ if ($3.size() == 1 && !$1.booleanValue())
										  	yyerror(ParseStr.S_SYNTAX_ERROR, new String[] {new String(".")});
										  $$ = new CreateFolder($3, $4, $1);
										}

//D:MASTER
//D:NT-ALIAS = drop folder
//D:DESCRIPTION drop_folder.tex
//D:PURPOSE P025
drop_folder:	drop url_list opt_cascade opt_force				{ $$ = new DropFolder($2, $3, $4, $1); }

//D:MASTER
//D:LEVEL professional
//D:NT-ALIAS = cleanup folder
//D:PURPOSE P167
//D:DESCRIPTION cleanup_folder.tex
cleanup_folder:	CLEANUP FOLDER clf_list clf_optwith				{ $$ = new CleanupFolder($3, $4); }

//D:MASTER
//D:NT-ALIAS = move folder
//D:DESCRIPTION move_folder.tex
//D:PURPOSE P026
move_folder:	MOVE folder_url TO folderpath					{ $$ = new MoveFolder($2, $4); }

//D:MASTER
//D:NT-ALIAS = rename folder
//D:DESCRIPTION rename_folder.tex
//D:PURPOSE P202
rename_folder:	RENAME folder_url TO foldername					{ $$ = new MoveFolder($2, $4); }

//D:MASTER
//D:NT-ALIAS = copy folder
//D:PURPOSE P027
//D:DESCRIPTION copy_folder.tex
copy_folder:	COPY url_list TO folderpath					{ $$ = new CopyFolder($2, $4); }
//D:OVERRIDE
	|	COPY url_list TO foldername					{ $$ = new CopyFolder($2, $4); }

url_list:	folder_or_job							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	url_list ',' folder_or_job					{ $1.addElement($3); }

folder_or_job:	folder_url							{ $$ = $1; }
	|	jobdef_url							{ $$ = $1; }

//D:MASTER
//D:NT-ALIAS = alter folder
//D:NODEFAULTS
//D:PURPOSE P160
//D:DESCRIPTION alter_folder.tex
alter_folder:	alter folder_url cf_withwith					{ $$ = new AlterFolder($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = list folder
//D:DESCRIPTION list_folder.tex
//D:PURPOSE P028
list_folder:	list FOLDER folderpath opt_lf_withlist				{ $$ = new ListFolder($3, $4, $1); }
	|	list FOLDER id opt_lf_withlist					{ $$ = new ListFolder($3, $4, $1); }

//D:MASTER
//D:NT-ALIAS = show folder
//D:DESCRIPTION show_folder.tex
//D:PURPOSE P029
show_folder:	SHOW folder_url							{ $$ = new ShowFolder($2); }

//D:MASTER
//D:NT-ALIAS = show job definition
//D:PURPOSE P166
//D:DESCRIPTION show_job_definition.tex
show_job_definition:	SHOW jobdef_url						{ $$ = new ShowFolder($2); }

cf_optwith:									{ $$ = null; }
	|	cf_withwith							{ $$ = $1; }

//D:LINEBREAK
cf_withwith:	WITH cf_with							{ $$ = $2; }

cf_with:	cf_withitem							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	cf_with ',' cf_withitem						{ $1.addItem($3); }

//D:NT-ALIAS = withitem
cf_withitem:	ENVIRONMENT '=' environmentname					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
		//D:DEFAULT
		//D:OPTION environment
	|	ENVIRONMENT '=' NONE						{ $$ = new WithItem(ParseStr.map($1.token), null); }
		//D:OPTION parameters
	|	PARAMETERS '=' '(' cf_parmlist ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
		//D:DEFAULT
	|	PARAMETERS '=' NONE						{ $$ = new WithItem(ParseStr.map($1.token), null); }
		//D:OPTION group
	|	GROUP '=' groupname opt_cascade					{ $$ = new WithItem($4.booleanValue() ? ParseStr.S_GROUP_CASCADE : ParseStr.S_GROUP, $3); }
	|	with_inherit_grant						{ $$ = $1; }

cf_parmlist:	cf_parm								{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	cf_parmlist ',' cf_parm						{ $1.addItem($3); }

cf_parm:	parametername '=' STRING					{ Vector v = new Vector();
										  v.addElement(ParseStr.I_CONSTANT);
										  v.addElement($3.textValue);
										  v.addElement(Boolean.FALSE);	// non local variable
										  $$ = new WithItem($1, v);
										}

clf_list:	folderpath							{ $$ = new Vector(); $<Vector>$.addElement(new ObjectURL(ParseStr.I_FOLDER, $1)); }
	|	clf_list ',' folderpath						{ $1.addElement(new ObjectURL(ParseStr.I_FOLDER, $3)); }

//D:LINEBREAK
clf_optwith:									{ $$ = null; }
	|	WITH clf_with							{ $$ = $2; }

clf_with:	clf_withitem							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	clf_with ',' clf_withitem					{ $1.addItem($3); }

//D:NT-ALIAS = withitem
clf_withitem:	FORCE								{ $$ = new WithItem(ParseStr.map($1.token), Boolean.TRUE); }
		//D:DEFAULT
	|	KEEP '=' NONE							{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|	KEEP '=' '(' cleanup_list ')'					{ $$ = new WithItem(ParseStr.map($1.token), $4); }

opt_lf_withlist:								{ $$ = new WithHash(); }
	|		WITH lf_withlist					{ $$ = $2; }

lf_withlist:		lf_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		lf_withlist ',' lf_withitem				{ $1.addItem($3); }

//D:NT-ALIAS = withitem
lf_withitem:		expand							{ $$ = new WithItem(ParseStr.S_EXPAND, $1); }
	|		lf_filterexpression					{ $$ = new WithItem(ParseStr.S_FILTER, $1); }

lf_filterexpression:	lf_filterterm						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		lf_filterexpression OR lf_filterterm			{ $1.addElement($3); }

//D:NT-ALIAS = filterterm
lf_filterterm:		lf_filteritem						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		lf_filterterm AND lf_filteritem				{ $1.addElement($3); }

//D:NT-ALIAS = filteritem
lf_filteritem:		lf_filteratom						{ $$ = $1; }
	|		'(' lf_filterexpression ')'				{ $$ = new WithItem(ParseStr.S_FILTER, $2); }
	|		NOT '(' lf_filterexpression ')'				{ $$ = new WithItem(ParseStr.S_NEGFILTER, $3);  }

//D:NT-ALIAS = filteratom
lf_filteratom:		NAME LIKE STRING					{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|		OWNER IN '(' lj_userlist ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }



// -----------------------------------------------------------------------------------
//     J O B   D E F I N I T I O N   H I E R A R C H Y
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = list job definition hierarchy
//D:DESCRIPTION list_job_definition_hierarchy.tex
//D:PURPOSE P030
list_job_definition_hierarchy:	list JOB_DEFINITION_HIERARCHY folderpath opt_expand
										{ $$ = new ListJobDefinitionHierarchy($3, $4, $1); }
	|			list JOB_DEFINITION_HIERARCHY id opt_expand
										{ $$ = new ListJobDefinitionHierarchy($3, $4, $1); }



// -----------------------------------------------------------------------------------
//     D E P E N D E N C Y   D E F I N I T I O N
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = list dependency definition
//D:DESCRIPTION list_dependency_definition.tex
//D:PURPOSE P031
list_dependency_definition:	LIST DEPENDENCY_DEFINITION folderpath		{ $$ = new ListDependencyDefinition($3); }



// -----------------------------------------------------------------------------------
//     D E P E N D E N C Y   H I E R A R C H Y
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = list dependency hierarchy
//D:DESCRIPTION list_dependency_hierarchy.tex
//D:PURPOSE P032
list_dependency_hierarchy:	list DEPENDENCY_HIERARCHY jobid opt_expand	{ $$ = new ListDependencyHierarchy($3, $4, $1); }



// -----------------------------------------------------------------------------------
//     S C O P E
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create scope
//D:DESCRIPTION create_scope.tex
//D:PURPOSE P033
create_scope:		create scope_url cs_optwith				{ $$ = new CreateScope ($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = drop scope
//D:DESCRIPTION drop_scope.tex
//D:PURPOSE P034
drop_scope:		drop scope_url opt_cascade				{ $$ = new DropScope($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = move scope
//D:DESCRIPTION move_scope.tex
//D:PURPOSE P035
move_scope:		MOVE scope_url TO serverpath				{ $$ = new MoveScope($2, $4); }

//D:MASTER
//D:NT-ALIAS = rename scope
//D:DESCRIPTION rename_scope.tex
//D:PURPOSE P203
rename_scope:		RENAME scope_url TO scopename				{ $$ = new MoveScope($2, $4); }

//D:MASTER
//D:NT-ALIAS = copy scope
//D:PURPOSE P036
//D:DESCRIPTION copy_scope.tex
copy_scope:		COPY scope_url TO serverpath				{ $$ = new CopyScope($2, $4); }
	|		COPY scope_url TO scopename				{ $$ = new CopyScope($2, $4); }

//D:MASTER
//D:NT-ALIAS = alter scope
//D:DESCRIPTION alter_scope.tex
//D:NODEFAULTS
//D:PURPOSE P037
alter_scope:		alter scope_url js_withwith				{ $$ = new AlterScope ($2, $3, $1); }
	|		alter_jobservers					{ $$ = $1; }

//D:MASTER
//D:NT-ALIAS = list scope
//D:DESCRIPTION list_scope.tex
//D:PURPOSE P038
list_scope:		LIST scope_url opt_expand				{ $$ = new ListScope($2, $3); }

//D:MASTER
//D:NT-ALIAS = show scope
//D:DESCRIPTION show_scope.tex
//D:PURPOSE P039
show_scope:		SHOW scope_url opt_expand				{ $$ = new ShowScope($2, $3); }

cs_optwith:									{ $$ = null; }
	|		js_withwith						{ $$ = $1; }

//D:LINEBREAK
with:			WITH

js_withwith:		with js_with						{ $$ = $2; }

js_with:		js_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		js_with ',' js_withitem					{ $1.addItem($3); }

			//D:OPTION node
js_withitem:		NODE '=' nodename					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	 		//D:OPTION password
	|		password						{ $$ = $1; }
			//D:OPTION enable
	|		enable							{ $$ = new WithItem(ParseStr.S_ENABLE, $1); }
			//D:OPTION parameters
	|		scope_parm						{ $$ = new WithItem(ParseStr.S_PARAMETERS, $1); }
			//D:OPTION config
	|		scope_cfg						{ $$ = new WithItem(ParseStr.S_CONFIG, $1); }
			//D:OPTION group
	|		GROUP '=' groupname opt_cascade				{ $$ = new WithItem($4.booleanValue() ? ParseStr.S_GROUP_CASCADE : ParseStr.S_GROUP, $3); }
			//D:DEFAULT
			//D:OPTION error text
	|		ERROR_TEXT '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token) , null); }
	|		ERROR_TEXT '=' STRING					{ $$ = new WithItem(ParseStr.map($1.token) , $3.textValue); }
	|		with_inherit_grant					{ $$ = $1; }

js_fatal:		FATAL							{ $$ = Boolean.TRUE; }
	|		NONFATAL						{ $$ = Boolean.FALSE; }

//D:NT-ALIAS = withitem

scope_parm:		PARAMETERS '=' '(' scope_parmlist ')'			{ $$ = $4; }
			//D:DEFAULT
	|		PARAMETERS '=' NONE					{ $$ = null; }

//D:NT-ALIAS = parameters
jobsvr_parm:		PARAMETERS '=' '(' scope_cfg_envlist ')'		{ $$ = $4; }
			//D:DEFAULT
	|		PARAMETERS '=' NONE					{ $$ = null; }

scope_parmlist:		scope_parmitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		scope_parmlist ',' scope_parmitem			{ $1.addItem($3); }

//D:NT-ALIAS = parameteritem
scope_parmitem:		parm_is_string						{ $$ = $1; }
	|		parametername '=' DYNAMIC				{ $$ = new WithItem($1, null); }

scope_cfg:		CONFIG '=' '(' scope_cfg_list ')'			{ $$ = $4; }
			//D:DEFAULT
	|		CONFIG '=' NONE						{ $$ = null; }

scope_cfg_list:		scope_cfg_item						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		scope_cfg_list ',' scope_cfg_item			{ $1.addItem($3); }

//D:NT-ALIAS = configitem
scope_cfg_item:		parametername '=' NONE					{ $$ = new WithItem ($1, null); }
	|		parm_is_string						{ $$ = $1; }
	|		parametername '=' '(' scope_cfg_envlist ')'		{ $$ = new WithItem ($1, $4); }

scope_cfg_envlist:	parm_is_string						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		scope_cfg_envlist ',' parm_is_string			{ $1.addItem($3); }


//D:MASTER NOUSER SERVER
//D:NT-ALIAS = alter jobserver
//D:NODEFAULTS
//D:PURPOSE P171
//D:DESCRIPTION alter_jobserver.tex
alter_jobservers:	alter JOB_SERVER with js_fatal ERROR_TEXT '=' STRING	{ $$ = new AlterScope($4.booleanValue(), $7.textValue, $1); }
	|		alter JOB_SERVER with DYNAMIC jobsvr_parm		{ $$ = new AlterScope($5, $1); }


// -----------------------------------------------------------------------------------
//     J O B S E R V E R   V E R W A L T U N G
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = shutdown
//D:DESCRIPTION shutdown.tex
//D:PURPOSE P045
shutdown_cmd:		SHUTDOWN serverpath					{ $$ = new ShutdownServer($2); }

//D:MASTER
//D:NT-ALIAS = suspend
//D:DESCRIPTION suspend.tex
//D:PURPOSE P046
suspend_cmd:		SUSPEND serverpath					{ $$ = new SuspendServer($2); }

//D:MASTER
//D:NT-ALIAS = resume
//D:DESCRIPTION resume.tex
//D:PURPOSE P047
resume_cmd:		RESUME serverpath					{ $$ = new ResumeServer($2); }

//D:MASTER USER SERVER
//D:NT-ALIAS = register
//D:PURPOSE P048
//D:DESCRIPTION register.tex
register_cmd:		REGISTER serverpath '.' servername with PID '=' pid opt_suspended
										{ $$ = new RegisterServer($2, $4, $8, $9); }
	|		REGISTER WITH PID '=' pid				{ $$ = new RegisterServer(null, null, $5, null); }

//D:MASTER USER SERVER
//D:NT-ALIAS = deregister
//D:PURPOSE P049
//D:DESCRIPTION deregister.tex
deregister_cmd:		DEREGISTER serverpath '.' servername 			{ $$ = new RegisterServer($2, $4, null, Boolean.FALSE); }

//D:MASTER SERVER NOUSER
//D:NT-ALIAS = get next job
//D:DESCRIPTION get_next_job.tex
//D:PURPOSE P050
get_next_job:		GET_NEXT_JOB						{ $$ = new GetNextJob(); }


// -----------------------------------------------------------------------------------
//     N A M E D   R E S O U R C E
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create named resource
//D:PURPOSE P051
//D:DESCRIPTION create_named_resource.tex
create_named_resource:	create NAMED_RESOURCE resourcepath cnr_with_clause	{ $$ = new CreateNamedResource($3, $4, $1); }

//D:MASTER
//D:NT-ALIAS = drop named resource
//D:PURPOSE P052
//D:DESCRIPTION drop_named_resource.tex
drop_named_resource:	drop nr_url opt_cascade					{ $$ = new DropNamedResource($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = move named resource
//D:PURPOSE P053
//D:DESCRIPTION move_named_resource.tex
move_named_resource:	MOVE nr_url TO resourcepath				{ $$ = new RenameNamedResource($2, $4); }

//D:MASTER
//D:NT-ALIAS = rename named resource
//D:PURPOSE P205
//D:DESCRIPTION rename_named_resource.tex
rename_named_resource:	RENAME nr_url TO resourcename				{ $$ = new RenameNamedResource($2, $4); }

//D:MASTER
//D:NT-ALIAS = copy named resource
//D:PURPOSE P054
//D:DESCRIPTION copy_named_resource.tex
copy_named_resource:	COPY nr_url TO resourcepath				{ $$ = new CopyNamedResource($2, $4); }
	|		COPY nr_url TO resourcename				{ $$ = new CopyNamedResource($2, $4); }

//D:MASTER
//D:NT-ALIAS = alter named resource
//D:NODEFAULTS
//D:PURPOSE P055
//D:DESCRIPTION alter_named_resource.tex
alter_named_resource:	alter nr_url anr_with_clause				{ $$ = new AlterNamedResource($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = show named resource
//D:DESCRIPTION show_named_resource.tex
//D:PURPOSE P056
show_named_resource:	show nr_url opt_expand					{ $$ = new ShowNamedResource($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = list named resource
//D:DESCRIPTION list_named_resource.tex
//D:PURPOSE P057
list_named_resource:	LIST NAMED_RESOURCE opt_resourcepath opt_lnr_withwith	{ if($3 == null)
											if($4 == null)	$$ = new ListNamedResource();
											else		$$ = new ListNamedResource($3, $4);
										  else
											if($4 == null)	$$ = new ListNamedResource($3, new WithHash());
											else		$$ = new ListNamedResource($3, $4);
										}
	|		LIST NAMED_RESOURCE id opt_lnr_withwith	{ if($3 == null)
											if($4 == null)	$$ = new ListNamedResource();
											else		$$ = new ListNamedResource($3, $4);
										  else
											if($4 == null)	$$ = new ListNamedResource($3, new WithHash());
											else		$$ = new ListNamedResource($3, $4);
										}

cnr_with_clause:	with cnr_with_list					{ $$ = $2; }

anr_with_clause:	with anr_with_list					{ $$ = $2; }

cnr_with_list:		cnr_with_item						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		cnr_with_list ',' cnr_with_item				{ $1.addItem($3); }

anr_with_list:		anr_with_item						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		anr_with_list ',' anr_with_item				{ $1.addItem($3); }

//D:NT-ALIAS = withitem
			//D:OPTION usage
cnr_with_item:		USAGE '=' resource_usage				{ $$ = new WithItem(ParseStr.S_USAGE, $3); }
	 		//D:OPTION state profile
	|		anr_with_item						{ $$ = $1; }

//D:NT-ALIAS = withitem
anr_with_item:		STATUS_PROFILE '=' rspname				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:DEFAULT
	|		STATUS_PROFILE '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
			//D:OPTION group
	|		GROUP '=' groupname opt_cascade				{ $$ = new WithItem($4.booleanValue() ? ParseStr.S_GROUP_CASCADE : ParseStr.S_GROUP, $3); }
			//D:OPTION parameter
	|		PARAMETERS '=' '(' cnr_parmlist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
			//D:DEFAULT
	|		PARAMETERS '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), new WithHash()); }
			//D:LEVEL enterprise
	|		FACTOR '=' FLOAT					{ $$ = new WithItem(ParseStr.map($1.token), $3.value); }
	|		with_inherit_grant					{ $$ = $1; }

resource_usage:		STATIC							{ $$ = ParseStr.I_STATIC; }
	|		SYSTEM							{ $$ = ParseStr.I_SYSTEM; }
	|		SYNCHRONIZING						{ $$ = ParseStr.I_SYNCHRONIZING; }
	|		CATEGORY						{ $$ = ParseStr.I_CATEGORY; }
			//D:LEVEL enterprise
	|		POOL							{ $$ = ParseStr.I_POOL; }

cnr_parmlist:		cnr_parm						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		cnr_parmlist ',' cnr_parm				{ $1.addItem($3); }

//D:NT-ALIAS = parameter
cnr_parm:		parametername PARAMETERS '=' STRING			{ Vector v = new Vector();
										  v.addElement(ParseStr.I_PARAMETER);
										  v.addElement($4.textValue);
										  $$ = new WithItem($1, v);
										}
	|		parametername LOCAL_CONSTANT				{ Vector v = new Vector();
										  v.addElement(ParseStr.I_LOCAL_CONSTANT);
										  v.addElement(null);
										  $$ = new WithItem($1, v);
										}
	|		parametername LOCAL_CONSTANT '=' STRING			{ Vector v = new Vector();
										  v.addElement(ParseStr.I_LOCAL_CONSTANT);
										  v.addElement($4.textValue);
										  $$ = new WithItem($1, v);
										}
	|		parametername CONSTANT '=' STRING			{ Vector v = new Vector();
										  v.addElement(ParseStr.I_CONSTANT);
										  v.addElement($4.textValue);
										  $$ = new WithItem($1, v);
										}
	|		parametername PARAMETERS				{ Vector v = new Vector();
										  v.addElement(ParseStr.I_PARAMETER);
										  v.addElement(null);
										  $$ = new WithItem($1, v);
										}

opt_resourcepath:								{ $$ = null; }
	|		resourcepath						{ $$ = $1; }

opt_lnr_withwith:								{ $$ = null; }
	|		lnr_withwith						{ $$ = $1; }

lnr_withwith:		with lnr_withlist					{ $$ = $2; }

lnr_withlist:		lnr_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		lnr_withlist ',' lnr_withitem				{ $1.addItem($3); }

//D:NT-ALIAS = withitem
lnr_withitem:		expand							{ $$ = new WithItem(ParseStr.S_EXPAND, $1); }
	|		lnr_filterexpression					{ $$ = new WithItem(ParseStr.S_FILTER, $1); }

lnr_filterexpression:	lnr_filterterm						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		lnr_filterexpression OR lnr_filterterm			{ $1.addElement($3); }

//D:NT-ALIAS = filterterm
lnr_filterterm:		lnr_filteritem						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		lnr_filterterm AND lnr_filteritem			{ $1.addElement($3); }

//D:NT-ALIAS = filteritem
lnr_filteritem:		lnr_filteratom						{ $$ = $1; }
	|		'(' lnr_filterexpression ')'				{ $$ = new WithItem(ParseStr.S_FILTER, $2); }
	|		NOT '(' lnr_filterexpression ')'			{ $$ = new WithItem(ParseStr.S_NEGFILTER, $3);  }

//D:NT-ALIAS = filteratom
lnr_filteratom:		USAGE IN '(' lnr_usagelist ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		NAME LIKE STRING					{ $$ = new WithItem(ParseStr.S_NRNAME, $3.textValue); }

lnr_usagelist:		resource_usage						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		lnr_usagelist ',' resource_usage			{ $1.addElement($3); }



// -----------------------------------------------------------------------------------
//     R E S O U R C E
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create resource
//D:PURPOSE P058
//D:DESCRIPTION create_resource.tex
create_resource:	create RESOURCE resourcepath IN ar_path ar_with_clause	{ $$ = new CreateResource($3, $5, $6, $1); }

//D:MASTER
//D:NT-ALIAS = drop resource
//D:PURPOSE P059
//D:DESCRIPTION drop_resource.tex
drop_resource:		drop resource_url opt_force				{ $$ = new DropResource($2, $1, $3); }

//D:MASTER
//D:NT-ALIAS = alter resource
//D:NODEFAULTS
//D:PURPOSE P060
//D:DESCRIPTION alter_resource.tex
alter_resource:		alter resource_url ar_with_clause			{ $$ = new AlterResource($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = link resource
//D:PURPOSE P187
//D:DESCRIPTION link_resource.tex
link_resource:	LINK scoperesource_url TO scope_url opt_force			{ $$ = new LinkResource($2, $4, $5); }

//D:MASTER
//D:NT-ALIAS = show resource
//D:DESCRIPTION show_resource.tex
//D:PURPOSE P061
show_resource:		SHOW resource_url					{ $$ = new ShowResource($2); }

ar_path:		serverpath						{ $$ = $1; }
	|		folderpath						{ $$ = $1; }

ar_with_clause:									{ $$ = new WithHash(); }
	|		with ar_with_list					{ $$ = $2; }

ar_with_list:		ar_with_item						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		ar_with_list ',' ar_with_item				{ $1.addItem($3); }

//D:NT-ALIAS = withitem
			//D:OPTION state
ar_with_item:		STATUS '=' statusname					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	 		//D:OPTION amount
	|		AMOUNT '=' integer					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		AMOUNT '=' INFINITE					{ $$ = new WithItem(ParseStr.map($1.token), MINUS_ONE); }
			//D:DEFAULT
			//D:OPTION factor
			//D:LEVEL enterprise
	|		FACTOR '=' NONE						{ $$ = new WithItem(ParseStr.map($1.token), null); }
			//D:LEVEL enterprise
	|		FACTOR '=' FLOAT					{ $$ = new WithItem(ParseStr.map($1.token), $3.value); }
			//D:OPTION requestable amount
	|		REQUESTABLE_AMOUNT '=' integer				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		REQUESTABLE_AMOUNT '=' INFINITE				{ $$ = new WithItem(ParseStr.map($1.token), MINUS_ONE); }
			//D:OPTION touch
	|		TOUCH '=' datetime					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		TOUCH							{ $$ = new WithItem(ParseStr.map($1.token), null); }
			//D:OPTION online
	|		ar_online						{ $$ = new WithItem(ParseStr.S_ONLINE, $1); }
			//D:OPTION group
	|		with_group						{ $$ = $1; }
			//D:OPTION parameter
	|		PARAMETERS '=' '(' ar_parmlist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		PARAMETERS '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
			//D:DEFAULT
			//D:OPTION tag
			//D:LEVEL enterprise
	|		TAG '=' NONE						{ $$ = new WithItem(ParseStr.map($1.token), null); }
			//D:LEVEL enterprise
	|		TAG '=' STRING						{ $$ = new WithItem(ParseStr.map($1.token), $3.value); }
			//D:LEVEL enterprise
	|		TRACE INTERVAL '=' opt_integer				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
			//D:LEVEL enterprise
	|		TRACE BASE '=' opt_integer				{ $$ = new WithItem(ParseStr.map($2.token), $4); }
			//D:LEVEL enterprise
	|		BASE MULTIPLIER '=' integer				{ $$ = new WithItem(ParseStr.map($2.token), $4); }

			//D:DEFAULT
ar_online:		ONLINE							{ $$ = Boolean.TRUE; }
	|		OFFLINE							{ $$ = Boolean.FALSE; }

ar_parmlist:		ar_parm							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		ar_parmlist ',' ar_parm					{ $1.addItem($3); }

//D:NT-ALIAS = parameter
ar_parm:		parametername '=' STRING				{ Vector v = new Vector();
										  v.addElement(ParseStr.I_CONSTANT);
										  v.addElement($3.textValue);
										  $$ = new WithItem($1, v); }
	|		parametername '=' DEFAULT				{ Vector v = new Vector();
										  v.addElement(ParseStr.I_CONSTANT);
										  v.addElement(null);
										  $$ = new WithItem($1, v);
										}



// -----------------------------------------------------------------------------------
//     R E S O U R C E   S T A T E   D E F I N I T I O N
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create resource state definition
//D:PURPOSE P062
//D:DESCRIPTION create_resource_state_definition.tex
//D:EXAMPLE create_resource_state_definition.tex
create_resource_stat_def:	create RESOURCE_STATUS_DEFINITION statusname	{ $$ = new CreateResourceStatus($3, $1); }

//D:MASTER
//D:NT-ALIAS = drop resource state definition
//D:PURPOSE P063
//D:DESCRIPTION drop_resource_state_definition.tex
drop_resource_stat_def:		drop RESOURCE_STATUS_DEFINITION statusname	{ $$ = new DropResourceStatus($3, $1); }

//D:MASTER
//D:NT-ALIAS = rename resource state definition
//D:PURPOSE P064
//D:DESCRIPTION rename_resource_state_definition.tex
rename_resource_stat_def:	RENAME RESOURCE_STATUS_DEFINITION statusname TO statusname
										{ $$ = new RenameResourceStatus($3, $5); }

//D:MASTER
//D:NT-ALIAS = list resource state definition
//D:DESCRIPTION list_resource_state_definition.tex
//D:PURPOSE P065
list_resource_stat_def:		LIST RESOURCE_STATUS_DEFINITION			{ $$ = new ListResourceStatus(); }

//D:MASTER
//D:NT-ALIAS = show resource state definition
//D:DESCRIPTION show_resource_state_definition.tex
//D:PURPOSE P066
show_resource_stat_def:		SHOW RESOURCE_STATUS_DEFINITION statusname	{ $$ = new ShowResourceStatus($3); }



// -----------------------------------------------------------------------------------
//     R E S O U R C E   S T A T E   P R O F I L E
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create resource state profile
//D:PURPOSE P067
//D:DESCRIPTION create_resource_state_profile.tex
//D:EXAMPLE create_resource_state_profile.tex
create_rsp:		create RESOURCE_STATUS_PROFILE profilename rsp_with_clause
										{ $$ = new CreateRsp($3, $4, $1); }

//D:MASTER
//D:NT-ALIAS = drop resource state profile
//D:PURPOSE P068
//D:DESCRIPTION drop_resource_state_profile.tex
drop_rsp:		drop RESOURCE_STATUS_PROFILE profilename		{ $$ = new DropRsp($3, $1); }

//D:MASTER
//D:NT-ALIAS = alter resource state profile
//D:NODEFAULTS
//D:PURPOSE P069
//D:DESCRIPTION alter_resource_state_profile.tex
alter_rsp:		alter RESOURCE_STATUS_PROFILE profilename rsp_with_clause
										{ $$ = new AlterRsp($3, $4, $1); }

//D:MASTER
//D:NT-ALIAS = rename resource state profile
//D:PURPOSE P070
//D:DESCRIPTION rename_resource_state_profile.tex
rename_rsp:		RENAME RESOURCE_STATUS_PROFILE profilename TO profilename
										{ $$ = new RenameRsp($3, $5); }

//D:MASTER
//D:NT-ALIAS = list resource state profile
//D:DESCRIPTION list_resource_state_profile.tex
//D:PURPOSE P071
list_rsp:		LIST RESOURCE_STATUS_PROFILE				{ $$ = new ListRsp(); }

//D:MASTER
//D:NT-ALIAS = show resource state profile
//D:DESCRIPTION show_resource_state_profile.tex
//D:PURPOSE P072
show_rsp:		SHOW RESOURCE_STATUS_PROFILE profilename		{ $$ = new ShowRsp($3); }

rsp_with_clause:	with rsp_withitemlist					{ $$ = $2; }

rsp_withitemlist:	rsp_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		rsp_withitemlist ',' rsp_withitem			{ $1.addItem($3); }

//D:NT-ALIAS = withitem
			//D:OPTION state
rsp_withitem:		STATUS '=' '(' statuslist ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	 		//D:OPTION initial state
	|		INITIAL_STATUS '=' statusname				{ $$ = new WithItem(ParseStr.map($1.token), $3); }

statuslist:		statusname						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		statuslist ',' statusname				{ $1.addElement($3); }



// -----------------------------------------------------------------------------------
//     R E S O U R C E   S T A T E   M A P P I N G
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create resource state mapping
//D:PURPOSE P073
//D:DESCRIPTION create_resource_state_mapping.tex
//D:EXAMPLE create_resource_state_mapping.tex
create_rsm:		create RESOURCE_STATUS_MAPPING mappingname rsm_with_clause
										{ $$ = new CreateRsm($3, $4, $1); }

//D:MASTER
//D:NT-ALIAS = drop resource state mapping
//D:PURPOSE P074
//D:DESCRIPTION drop_resource_state_mapping.tex
drop_rsm:		drop RESOURCE_STATUS_MAPPING mappingname		{ $$ = new DropRsm($3, $1); }

//D:MASTER
//D:NT-ALIAS = alter resource state mapping
//D:NODEFAULTS
//D:PURPOSE P075
//D:DESCRIPTION alter_resource_state_mapping.tex
alter_rsm:		alter RESOURCE_STATUS_MAPPING mappingname rsm_with_clause
										{ $$ = new AlterRsm($3, $4, $1); }

//D:MASTER
//D:NT-ALIAS = rename resource state mapping
//D:PURPOSE P076
//D:DESCRIPTION rename_resource_state_mapping.tex
rename_rsm:		RENAME RESOURCE_STATUS_MAPPING mappingname TO profilename
										{ $$ = new RenameRsm($3, $5); }

//D:MASTER
//D:NT-ALIAS = list resource state mapping
//D:DESCRIPTION list_resource_state_mapping.tex
//D:PURPOSE P077
list_rsm:		LIST RESOURCE_STATUS_MAPPING				{ $$ = new ListRsm(null); }
	|		LIST RESOURCE_STATUS_MAPPING FOR profilename		{ $$ = new ListRsm($4); }


//D:MASTER
//D:NT-ALIAS = show resource state mapping
//D:DESCRIPTION show_resource_state_mapping.tex
//D:PURPOSE P078
show_rsm:		SHOW RESOURCE_STATUS_MAPPING profilename		{ $$ = new ShowRsm($3); }

rsm_with_clause:	with MAP '=' '(' rsm_withitemlist ')'			{ $$ = $5; }

rsm_withitemlist:	rsm_withitem						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		rsm_withitemlist ',' rsm_withitem			{ $1.addElement($3); }

//D:NT-ALIAS = withitem
rsm_withitem:		statusname MAPS statusname TO statusname		{ $$ = new Vector();
										  $<Vector>$.addElement($1);
										  $<Vector>$.addElement($3);
										  $<Vector>$.addElement($5);
										}
	|		statusname MAPS ANY TO statusname			{ $$ = new Vector();
										  $<Vector>$.addElement($1);
										  $<Vector>$.addElement(null);
										  $<Vector>$.addElement($5);
										}



// -----------------------------------------------------------------------------------
//     E N V I R O N M E N T
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create environment
//D:PURPOSE P079
//D:DESCRIPTION create_environment.tex
create_environment:	create ENVIRONMENT environmentname opt_env_with_clause	{ $$ = new CreateEnvironment($3, $4, $1); }

//D:MASTER
//D:NT-ALIAS = drop environment
//D:PURPOSE P080
//D:DESCRIPTION drop_environment.tex
drop_environment:	drop env_url						{ $$ = new DropEnvironment($2, $1); }

//D:MASTER
//D:NT-ALIAS = alter environment
//D:NODEFAULTS
//D:PURPOSE P081
//D:DESCRIPTION alter_environment.tex
alter_environment:	alter env_url env_with_clause				{ $$ = new AlterEnvironment($2, $3, $1); }
	|		alter env_url env_addclause				{ $$ = new AlterEnvironment($2, true, $3, $1); }
	|		alter env_url env_delclause				{ $$ = new AlterEnvironment($2, false, $3, $1); }

//D:MASTER
//D:NT-ALIAS = rename environment
//D:PURPOSE P082
//D:DESCRIPTION rename_environment.tex
rename_environment:	RENAME env_url TO environmentname			{ $$ = new RenameEnvironment($2, $4); }

//D:MASTER
//D:NT-ALIAS = list environment
//D:DESCRIPTION list_environment.tex
//D:PURPOSE P083
list_environment:	LIST ENVIRONMENT					{ $$ = new ListEnvironment(); }

//D:MASTER
//D:NT-ALIAS = show environment
//D:DESCRIPTION show_environment.tex
//D:PURPOSE P084
show_environment:	SHOW env_url opt_expand					{ $$ = new ShowEnvironment($2, $3); }

opt_env_with_clause:								{ $$ = null; }
	|		env_with_clause						{ $$ = $1; }

env_with_clause:	with env_with_item					{ $$ = $2; }

env_with_item:		RESOURCE '=' '(' env_resourcelist ')'			{ $$ = $4; }
	|		RESOURCE '=' NONE					{ $$ = new Vector(); }

env_resourcelist:	env_resource						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		env_resourcelist ',' env_resource			{ $1.addElement($3); }

env_resource:		resourcepath						{ $$ = new WithItem($1, null); }
	|		resourcepath CONDITION '=' STRING			{ $$ = new WithItem($1, $4.textValue); }
	|		resourcepath CONDITION '=' NONE				{ $$ = new WithItem($1, null); }

resourcelist:		resourcepath						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		resourcelist ',' resourcepath				{ $1.addElement($3); }


//D:LINEBREAK
env_addclause:		ADD '(' env_resourcelist ')'				{ $$ = $3; }

//D:LINEBREAK
env_delclause:		DELETE '(' resourcelist ')'				{ $$ = $3; }



// -----------------------------------------------------------------------------------
//     E X I T   S T A T E   D E F I N I T I O N
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create exit state definition
//D:PURPOSE P085
//D:DESCRIPTION create_exit_state_definition.tex
//D:EXAMPLE create_exit_state_definition.tex
create_exit_status_def:	create EXIT_STATUS_DEFINITION statusname		{ $$ = new CreateExitStatusDef($3, $1); }

//D:MASTER
//D:NT-ALIAS = drop exit state definition
//D:PURPOSE P086
//D:DESCRIPTION drop_exit_state_definition.tex
drop_exit_status_def:	drop esd_url						{ $$ = new DropExitStatusDef($2, $1); }

//D:MASTER
//D:NT-ALIAS = rename exit state definition
//D:PURPOSE P087
//D:DESCRIPTION rename_exit_state_definition.tex
rename_exit_status_def:	RENAME esd_url TO statusname				{ $$ = new RenameExitStatusDef($2, $4); }

//D:MASTER
//D:NT-ALIAS = show exit state definition
//D:DESCRIPTION show_exit_state_definition.tex
//D:PURPOSE P088
show_exit_status_def:	SHOW esd_url						{ $$ = new ShowExitStatusDef($2); }

//D:MASTER
//D:NT-ALIAS = list exit state definition
//D:DESCRIPTION list_exit_state_definition.tex
//D:PURPOSE P089
list_exit_status_def:	LIST EXIT_STATUS_DEFINITION				{ $$ = new ListExitStatusDef(); }



// -----------------------------------------------------------------------------------
//     E X I T   S T A T E   M A P P I N G
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create exit state mapping
//D:PURPOSE P090
//D:DESCRIPTION create_exit_status_mapping.tex
//D:EXAMPLE create_exit_status_mapping.tex
create_exit_status_mapping:	create EXIT_STATUS_MAPPING mappingname esm_with_clause
										{ $$ = new CreateExitStatusMapping($3, $4, $1); }

//D:MASTER
//D:NT-ALIAS = drop exit state mapping
//D:PURPOSE P091
//D:DESCRIPTION drop_exit_state_mapping.tex
drop_exit_status_mapping:	drop esm_url					{ $$ = new DropExitStateMapping($2, $1); }

//D:MASTER
//D:NT-ALIAS = alter exit state mapping
//D:NODEFAULTS
//D:PURPOSE P092
//D:DESCRIPTION alter_exit_status_mapping.tex
alter_exit_status_mapping:	alter esm_url esm_with_clause			{ $$ = new AlterExitStateMapping($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = rename exit state mapping
//D:PURPOSE P093
//D:DESCRIPTION rename_exit_state_mapping.tex
rename_exit_status_mapping:	RENAME esm_url TO profilename			{ $$ = new RenameExitStateMapping($2, $4); }

//D:MASTER
//D:NT-ALIAS = show exit state mapping
//D:DESCRIPTION show_exit_state_mapping.tex
//D:PURPOSE P094
show_exit_status_mapping:	SHOW esm_url					{ $$ = new ShowExitStateMapping($2); }

//D:MASTER
//D:NT-ALIAS = list exit state mapping
//D:DESCRIPTION list_exit_state_mapping.tex
//D:PURPOSE P095
list_exit_status_mapping:	LIST EXIT_STATUS_MAPPING			{ $$ = new ListExitStateMapping(); }


esm_with_clause:		with esm_map_clause				{ $$ = $2; }

esm_map_clause:			MAP '=' '(' statusname opt_esm_maplist ')'	{ final EsmMap esmMap = new EsmMap($4);
										  $5.insertElementAt(esmMap, 0);
										  $$ = $5;
										}

opt_esm_maplist:								{ $$ = new Vector(); }
	|			',' esm_maplist					{ $$ = $2; }

esm_maplist:			esm_mapping					{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|			esm_maplist ',' esm_mapping			{ $1.addElement($3); }

esm_mapping:			signed_integer ',' statusname			{ $$ = new EsmMap($1, $3); }



// -----------------------------------------------------------------------------------
//     E X I T   S T A T E   P R O F I L E
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create exit state profile
//D:DESCRIPTION list_exit_state_profile.tex
//D:PURPOSE P161
//D:DESCRIPTION create_exit_state_profile.tex
//D:EXAMPLE create_exit_state_profile.tex
create_exit_status_prof:	create EXIT_STATUS_PROFILE profilename esp_withwith
										{ if(!$4.containsKey(ParseStr.S_STATUS))
										  yyerror(ParseStr.S_SYNTAX_ERROR, new String[] {new String(ParseStr.S_STATUS)});
										  $$ = new CreateExitStatProf($3, $4, $1);
										}

//D:MASTER
//D:NT-ALIAS = drop exit state profile
//D:PURPOSE P096
//D:DESCRIPTION drop_exit_state_profile.tex
drop_exit_status_prof:		drop esp_url					{ $$ = new DropExitStatProf($2, $1); }

//D:MASTER
//D:NT-ALIAS = alter exit state profile
//D:NODEFAULTS
//D:PURPOSE P097
//D:DESCRIPTION alter_exit_state_prof.tex
alter_exit_status_prof:		alter esp_url esp_withwith			{ $$ = new AlterExitStatProf($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = rename exit state profile
//D:PURPOSE P098
//D:DESCRIPTION rename_exit_state_profile.tex
rename_exit_status_prof:	RENAME esp_url TO profilename			{ $$ = new RenameExitStatProf($2, $4); }

//D:MASTER
//D:NT-ALIAS = show exit state profile
//D:DESCRIPTION show_exit_state_profile.tex
//D:PURPOSE P099
show_exit_status_profile:	SHOW esp_url					{ $$ = new ShowExitStateProfile($2); }

//D:MASTER
//D:NT-ALIAS = list exit state profile
//D:PURPOSE P100
//D:DESCRIPTION list_exit_state_profile.tex
list_exit_status_profile:	LIST EXIT_STATUS_PROFILE			{ $$ = new ListExitStateProfile(); }

esp_withwith:			with esp_with					{ $$ = $2; }

esp_with:			esp_with_options				{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|			esp_with ',' esp_with_options			{ $1.addItem($3); }

//D:NT-ALIAS = withitem
				//D:OPTION default mapping
esp_with_options:		DEFAULT_MAPPING '=' mappingname			{ $$ = new WithItem(ParseStr.map($1.token), $3); }
				//D:DEFAULT
	|			DEFAULT_MAPPING '=' NONE			{ $$ = new WithItem(ParseStr.map($1.token), null); }
				//D:OPTION state
	|			STATUS '=' '(' esp_states ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
				//D:OPTION force
	|			FORCE						{ $$ = new WithItem(ParseStr.map($1.token), Boolean.TRUE); }

esp_states:			esp_state					{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|			esp_states ',' esp_state			{ $1.addElement($3); }

esp_state:			statusname esp_state_type esp_state_optionlist	{ $$ = new EspState($1, $2, $3); }
	|			statusname esp_state_type 			{ $$ = new EspState($1, $2, new WithHash()); }

esp_state_optionlist:		esp_state_option				{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|			esp_state_optionlist esp_state_option		{ $1.addItem($2); }

//D:NT-ALIAS = option
esp_state_option:		UNREACHABLE					{ $$ = $$ = new WithItem(ParseStr.map($1.token), null); }
	|			DISABLE						{ $$ = $$ = new WithItem(ParseStr.map($1.token), null); }
	|			BROKEN						{ $$ = $$ = new WithItem(ParseStr.map($1.token), null); }
	|			BATCH DEFAULT					{ $$ = $$ = new WithItem(ParseStr.map($1.token), null); }
	|			DEPENDENCY DEFAULT				{ $$ = $$ = new WithItem(ParseStr.map($1.token), null); }

esp_state_type:			FINAL						{ $$ = ParseStr.I_FINAL; }
	|			RESTARTABLE					{ $$ = ParseStr.I_RESTARTABLE; }
	|			PENDING						{ $$ = ParseStr.I_PENDING; }



//--------------------------------------------------------------------------
//     F O O T P R I N T
//--------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create footprint
//D:PURPOSE P101
//D:DESCRIPTION create_footprint.tex
create_footprint:	create FOOTPRINT footprintname cfp_withwith		{ $$ = new CreateFootprint($3, $4, $1); }

//D:MASTER
//D:NT-ALIAS = drop footprint
//D:DESCRIPTION drop_footprint.tex
//D:PURPOSE P102
drop_footprint:		drop fp_url						{ $$ = new DropFootprint($2, $1); }

//D:MASTER
//D:NT-ALIAS = alter footprint
//D:NODEFAULTS
//D:PURPOSE P103
//D:DESCRIPTION alter_footprint.tex
alter_footprint:	alter fp_url cfp_withwith				{ $$ = new AlterFootprint($2, $3, $1); }
	|		alter fp_url cfp_addwith				{ $$ = new AlterFootprint($2, $3, true, $1); }
	|		alter fp_url cfp_delwith				{ $$ = new AlterFootprint($2, $3, false, $1); }

//D:MASTER
//D:NT-ALIAS = rename footprint
//D:DESCRIPTION rename_footprint.tex
//D:PURPOSE P104
rename_footprint:	RENAME fp_url TO footprintname				{ $$ = new RenameFootprint($2, $4); }

//D:MASTER
//D:NT-ALIAS = list footprint
//D:DESCRIPTION list_footprint.tex
//D:PURPOSE P105
list_footprint:		LIST FOOTPRINT						{ $$ = new ListFootprint(); }

//D:MASTER
//D:NT-ALIAS = show footprint
//D:DESCRIPTION show_footprint.tex
//D:PURPOSE P106
show_footprint:		SHOW fp_url opt_expand					{ $$ = new ShowFootprint($2, $3); }

cfp_withwith:		with RESOURCE '=' '(' system_resource_reqlist ')'	{ $$ = $5; }

//D:LINEBREAK
cfp_addwith:		ADD RESOURCE '=' '(' system_resource_reqlist ')'	{ $$ = $5; }

//D:LINEBREAK
cfp_delwith:		DELETE RESOURCE '=' '(' resourcelist ')'		{ $$ = $5; }



//--------------------------------------------------------------------------
//     E X I T   S T A T E   T R A N S L A T I O N
//--------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create exit state translation
//D:PURPOSE P107
//D:DESCRIPTION create_exit_state_translation.tex
//D:EXAMPLE create_exit_state_translation.tex
create_exit_status_trans:	create EXIT_STATUS_TRANSLATION transname est_withwith
										{ $$ = new CreateExitStateTranslation($3, $4, $1); }

//D:MASTER
//D:NT-ALIAS = alter exit state translation
//D:NODEFAULTS
//D:PURPOSE P108
//D:DESCRIPTION alter_exit_state_trans.tex
alter_exit_status_trans:	alter est_url est_withwith			{ $$ = new AlterExitStateTranslation($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = drop exit state translation
//D:PURPOSE P109
//D:DESCRIPTION drop_exit_state_translation.tex
drop_exit_status_trans:		drop est_url					{ $$ = new DropExitStateTranslation($2, $1); }

//D:MASTER
//D:NT-ALIAS = rename exit state translation
//D:PURPOSE P110
//D:DESCRIPTION rename_exit_state_translation.tex
rename_exit_status_trans:	RENAME est_url TO transname			{ $$ = new RenameExitStateTranslation($2, $4); }

//D:MASTER
//D:NT-ALIAS = list exit state translation
//D:DESCRIPTION list_exit_state_translation.tex
//D:PURPOSE P111
list_exit_status_trans:		LIST EXIT_STATUS_TRANSLATION			{ $$ = new ListExitStateTranslation(); }

//D:MASTER
//D:NT-ALIAS = show exit state translation
//D:DESCRIPTION show_exit_state_translation.tex
//D:PURPOSE P112
show_exit_status_trans:		SHOW est_url					{ $$ = new ShowExitStateTranslation($2); }

est_withwith:			with est_with					{ $$ = $2; }

est_with:			TRANSLATION '=' '(' est_trans_list ')'		{ $$ = $4; }

est_trans_list:			est_trans					{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|			est_trans_list ',' est_trans			{ $1.addElement($3); }

est_trans:			statusname TO statusname			{ $$ = new StatusTranslation($1, $3); }



// -----------------------------------------------------------------------------------
//     N I C E   P R O F I L E
// -----------------------------------------------------------------------------------

//D:MASTER
//D:LEVEL professional
//D:NT-ALIAS = create nice profile
//D:PURPOSE P206
//D:DESCRIPTION create_nice_profile.tex
create_nice_profile:	create NICE_PROFILE profilename	opt_npwith		{ $$ = new CreateNiceProfile($3, $4, $1); }

//D:MASTER
//D:LEVEL professional
//D:NT-ALIAS = alter nice profile
//D:PURPOSE P207
//D:DESCRIPTION alter_nice_profile.tex
alter_nice_profile:	alter np_url with npwith				{ $$ = new AlterNiceProfile($2, $4, $1); }

//D:MASTER
//D:LEVEL professional
//D:NT-ALIAS = drop nice profile
//D:PURPOSE P208
//D:DESCRIPTION drop_nice_profile.tex
drop_nice_profile:	drop np_url			 			{ $$ = new DropNiceProfile($2, $1); }

//D:MASTER
//D:LEVEL professional
//D:NT-ALIAS = rename nice profile
//D:PURPOSE P209
//D:DESCRIPTION rename_nice_profile.tex
rename_nice_profile:	RENAME np_url TO profilename				{ $$ = new RenameNiceProfile($2, $4); }

//D:MASTER
//D:LEVEL professional
//D:NT-ALIAS = list nice profile
//D:DESCRIPTION list_nice_profile.tex
//D:PURPOSE P210
list_nice_profile:	LIST NICE_PROFILE					{ $$ = new ListNiceProfile(); }

//D:MASTER
//D:LEVEL professional
//D:NT-ALIAS = show nice profile
//D:DESCRIPTION show_nice_profile.tex
//D:PURPOSE P211
show_nice_profile:		SHOW np_url					{ $$ = new ShowNiceProfile($2); }

opt_npwith:									{ $$ = new WithHash(); }
	|		with npwith						{ $$ = $2; }

npwith:			npwithitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		npwith ',' npwithitem					{ $1.addItem($3); }

npwithitem:		active							{ $$ = new WithItem(ParseStr.S_ACTIVE, $1); }
	|		PROFILE '=' '(' npentrylist ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		PROFILE '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }

npentrylist:		npentry							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		npentrylist ',' npentry					{ $1.addElement($3); }

npentry:		npentryitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		npentry npentryitem					{ $1.addItem($2); }

npentryitem:		active							{ $$ = new WithItem(ParseStr.S_ACTIVE, $1); }
	|		folder_url						{ $$ = new WithItem(ParseStr.S_FOLDER, $1); }
	|		RENICE '=' signed_integer				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		SUSPEND							{ $$ = new WithItem(ParseStr.map($1.token), ParseStr.I_NP_SUSPEND); }
	|		NOSUSPEND						{ $$ = new WithItem(ParseStr.S_SUSPEND, ParseStr.I_NP_NOSUSPEND); }
	|		SUSPEND	RESTRICT					{ $$ = new WithItem(ParseStr.map($1.token), ParseStr.I_NP_ADMINSUSPEND); }



//--------------------------------------------------------------------------
//     J O B  /  B A T C H  /  M I L E S T O N E  /  P I P E L I N E
//--------------------------------------------------------------------------

/*
//D:MASTER
//D:NT-ALIAS = drop job definition
//D:PURPOSE P113
//D:DESCRIPTION drop_job_definition.tex
drop_job_definition:	drop jobdef_url opt_force	{ $$ = new DropJobDefinition($2, $3, $1.booleanValue()); }

//
*/

//D:MASTER
//D:NT-ALIAS = create job definition
//D:PURPOSE P162
//D:DESCRIPTION create_job_definition.tex
create_job_definition:	create JOB_DEFINITION folderpath '.' jobname job_with_clause
										{ $$ = new CreateJobDefinition($3, $5, $6, $1); }

//D:MASTER
//D:NT-ALIAS = alter job definition
//D:NODEFAULTS
//D:PURPOSE P163
//D:DESCRIPTION alter_job_definition.tex
alter_job_definition:   alter jobdef_url job_with_clause
										{ $$ = new AlterJobDefinition($2, $3, $1); }
	|               alter jobdef_url ajd_add_del_list
										{ $$ = new AlterJobDefDependents($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = move job definition
//D:PURPOSE P164
//D:DESCRIPTION move_job_definition.tex
move_job_definition:	MOVE jobdef_url TO folderpath				{ $$ = new MoveJobDefinition($2, $4); }

//D:MASTER
//D:NT-ALIAS = rename job definition
//D:PURPOSE P200
//D:DESCRIPTION rename_job_definition.tex
rename_job_definition:	RENAME jobdef_url TO jobname				{ $$ = new MoveJobDefinition($2, $4); }

job_with_clause:	with job_withitemlist					{ $$ = $2; }

job_withitemlist:	job_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		job_withitemlist ',' job_withitem			{ $1.addItem($3); }

//D:NT-ALIAS = withitem
			//D:OPTION run program
job_withitem:		RUN_PROGRAM '=' cmdline					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	 		//D:OPTION profile
	|		PROFILE '=' profilename					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION mapping
	|		MAPPING '=' jw_mappingname				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION rerun program
	|		RERUN_PROGRAM '=' cmdline				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION kill program
	|		KILL_PROGRAM '=' cmdline				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION workdir
	|		WORKDIR '=' dirspec					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION type
	|		TYPE '=' job_type					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION logfile
	|		LOGFILE '=' jw_filespec 				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:DEFAULT
	|		LOGFILE '=' NONE 					{ $$ = new WithItem(ParseStr.map($1.token), new WithHash()); }
			//D:OPTION errlog
	|		ERRLOG '=' jw_filespec 					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:DEFAULT
	|		ERRLOG '=' NONE 					{ $$ = new WithItem(ParseStr.map($1.token), new WithHash()); }
			//D:OPTION min priority
			//D:LEVEL professional
	|		MIN PRIORITY '=' opt_integer				{ $$ = new WithItem(ParseStr.S_MPRIORITY, $4); }
			//D:OPTION priority
	|		PRIORITY '=' opt_signed_integer				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION nicevalue
	|		NICEVALUE '=' opt_signed_integer			{ $$ = new WithItem(ParseStr.S_PRIORITY, $3); }
			//D:OPTION aging
			//D:LEVEL professional
	|		AGING '=' opt_period	 				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION suspend
	|		suspend							{ $$ = $1; }
			//D:OPTION resume
	|		resume							{ $$ = $1; }
			//D:OPTION master
	|		master							{ $$ = new WithItem(ParseStr.S_MASTER, $1); }
			//D:OPTION dependency mode
	|		DEPENDENCY_MODE '=' allany				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION children
	|		CHILDREN '=' '(' job_childdeflist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
			//D:DEFAULT
	|		CHILDREN '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
			//D:OPTION required
	|		REQUIRED '=' '(' job_requiredlist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
			//D:DEFAULT
	|		REQUIRED '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
			//D:OPTION environment
	|		ENVIRONMENT '=' environmentname				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION footprint
	|		FOOTPRINT '=' jw_footprintname				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION resource
	|		RESOURCE '=' '(' job_resource_definitionlist ')'	{ $$ = new WithItem(ParseStr.map($1.token), $4); }
			//D:DEFAULT
	|		RESOURCE '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
			//D:OPTION timeout
	|		TIMEOUT '=' period STATUS statusname			{ $3.addItem(new WithItem(ParseStr.S_STATUS, $5));
										  $$ = new WithItem(ParseStr.map($1.token), $3);
										}
			//D:DEFAULT
	|		TIMEOUT '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
			//D:OPTION parameter
	|		PARAMETERS '=' '(' job_parameterslist ')'		{ $$ = new WithItem(ParseStr.map($1.token), $4); }
			//D:DEFAULT
	|		PARAMETERS '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), new WithHash()); }
			//D:OPTION runtime
	|		RUNTIME '=' integer 					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		RUNTIME FINAL '=' integer				{ $$ = new WithItem(ParseStr.S_FINAL, $4); }
			//D:OPTION group
	|		with_group						{ $$ = $1; }
	|		with_inherit_grant					{ $$ = $1; }
			//D:LEVEL professional
	|		approval_required					{ $$ = $1; }


//D:LINEBREAK
ajd_add_del_list:	ajd_add_del_item					{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		ajd_add_del_list ',' ajd_add_del_item			{ $1.addItem($3); }

ajd_add_del_item:	add_or_alter CHILDREN '=' '(' job_childdeflist ')'	{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XADDCHILD : ParseStr.S_ADDCHILD, $5); }
	|		add_or_alter REQUIRED '=' '(' job_requiredlist ')'	{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XADDREQ : ParseStr.S_ADDREQ, $5); }
	|		add_or_alter RESOURCE '=' '(' job_resource_definitionlist ')'
										{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XADDRES : ParseStr.S_ADDRES, $5); }
	|		add_or_alter PARAMETERS '=' '(' job_parameterslist ')'	{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XADDPARM : ParseStr.S_ADDPARM, $5); }
	|		delete CHILDREN '=' '(' jobdeflist ')'			{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XDELCHILD : ParseStr.S_DELCHILD, $5); }
	|		delete REQUIRED '=' '(' jobdeflist ')'			{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XDELREQ : ParseStr.S_DELREQ, $5); }
	|		delete RESOURCE '=' '(' resourcelist ')'		{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XDELRES : ParseStr.S_DELRES, $5); }
	|		delete PARAMETERS '=' '(' parmlist ')'			{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XDELPARM : ParseStr.S_DELPARM, $5); }
	|		alter CHILDREN '=' '(' job_childdeflist ')'		{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XALTCHILD : ParseStr.S_ALTCHILD, $5); }
	|		alter REQUIRED '=' '(' job_requiredlist ')'		{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XALTREQ : ParseStr.S_ALTREQ, $5); }
	|		alter RESOURCE '=' '(' job_resource_definitionlist ')'	{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XALTRES : ParseStr.S_ALTRES, $5); }
	|		alter PARAMETERS '=' '(' job_parameterslist ')'		{ $$ = new WithItem($1.booleanValue() ? ParseStr.S_XALTPARM : ParseStr.S_ALTPARM, $5); }

add_or_alter:		ADD							{ $$ = Boolean.FALSE; }
	|		ADD OR ALTER						{ $$ = Boolean.TRUE; }

delete:			DELETE							{ $$ = Boolean.FALSE; }
	|		DELETE EXISTING						{ $$ = Boolean.TRUE; }

add_or_delete:		ADD							{ $$ = Boolean.TRUE; }
	|		DELETE							{ $$ = Boolean.FALSE; }

			//D:DEFAULT
job_type:		JOB							{ $$ = ParseStr.I_JOB; }
	|		MILESTONE						{ $$ = ParseStr.I_MILESTONE; }
	|		BATCH							{ $$ = ParseStr.I_BATCH; }

opttrunc:									{ $$ = SDMSConstants.SE_NOTRUNC; }
	|		trunc							{ $$ = $1; }

trunc:			TRUNC							{ $$ = SDMSConstants.SE_TRUNC; }
			//D:DEFAULT
	|		NOTRUNC							{ $$ = SDMSConstants.SE_NOTRUNC; }

suspend:		SUSPEND							{ $$ = new WithItem(ParseStr.S_SUSPEND, SDMSConstants.SE_SUSPEND); }
			//D:DEFAULT
	|		NOSUSPEND						{ $$ = new WithItem(ParseStr.S_SUSPEND, SDMSConstants.SE_NOSUSPEND); }

master:			MASTER							{ $$ = SDMSConstants.SE_MASTER; }
			//D:DEFAULT
	|		NOMASTER						{ $$ = SDMSConstants.SE_NOMASTER; }

			//D:DEFAULT
allany:			ALL							{ $$ = ParseStr.I_ALL; }
	|		ANY							{ $$ = ParseStr.I_ANY; }

cmdline:		STRING							{ $$ = $1.textValue; }
			//D:DEFAULT
	|		NONE							{ $$ = null; }

dirspec:		STRING							{ $$ = $1.textValue; }
			//D:DEFAULT
	|		NONE							{ $$ = null; }

jw_filespec:		filespec opttrunc					{ final WithHash w = new WithHash();
										  w.addItem(new WithItem(ParseStr.S_FILENAME, $1));
										  w.addItem(new WithItem(ParseStr.S_TRUNC, $2));
										  $$ = w;
										}

jw_mappingname:		mappingname						{ $$ = $1; }
			//D:DEFAULT
	|		NONE							{ $$ = null; }

jw_footprintname:	footprintname						{ $$ = $1; }
			//D:DEFAULT
	|		NONE							{ $$ = null; }

jw_transname:		transname						{ $$ = $1; }
			//D:DEFAULT
	|		NONE							{ $$ = null; }

jw_rsmname:		rsmname							{ $$ = $1; }
			//D:DEFAULT
	|		NONE							{ $$ = null; }


//----- JOB CHILDREN --------------------------------------------------

job_childdeflist:	job_childdef						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		job_childdeflist ',' job_childdef			{ $1.addElement($3); }

job_childdef:		jcd_item						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		job_childdef jcd_item					{ $1.addItem($2); }

jcd_item:		folderpath '.' jobname					{ final WithHash w = new WithHash();
										  w.addItem(new WithItem(ParseStr.S_PATH, $1));
										  w.addItem(new WithItem(ParseStr.S_NAME, $3));
										  $$ = new WithItem(ParseStr.S_FULLNAME, w);
										}
	|		staticdynamic						{ $$ = new WithItem(ParseStr.S_STATIC, $1); }
	|		PRIORITY '=' opt_signed_integer				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		NICEVALUE '=' opt_signed_integer			{ $$ = new WithItem(ParseStr.S_PRIORITY, $3); }
	|		job_childdef_suspend					{ $$ = new WithItem(ParseStr.S_SUSPEND, $1); }
	|		resume							{ $$ = $1; }
	|		TRANSLATION '=' jw_transname				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		INTERVAL '=' intervalname				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		INTERVAL '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		MERGE_MODE '=' mergemode				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		IGNORE_DEPENDENCY '=' '(' depnamelist ')'		{ $$ = new WithItem(ParseStr.S_IGNORE, $4); }
			//D:DEFAULT
	|		IGNORE_DEPENDENCY '=' NONE				{ $$ = new WithItem(ParseStr.S_IGNORE, new Vector()); }
	|		ALIAS '=' aliasname					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:DEFAULT
	|		ALIAS '=' NONE						{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		enable							{ $$ = new WithItem(ParseStr.S_ENABLE, $1); }
	|		CONDITION '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		CONDITION '=' STRING					{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
			//D:DEFAULT
	|		MODE '=' AND						{ $$ = new WithItem(ParseStr.map($1.token), SDMSSchedulingHierarchy.AND); }
	|		MODE '=' OR						{ $$ = new WithItem(ParseStr.map($1.token), SDMSSchedulingHierarchy.OR); }

staticdynamic:		STATIC							{ $$ = SDMSConstants.SH_STATIC; }
	|		DYNAMIC							{ $$ = SDMSConstants.SH_DYNAMIC; }

			//D:DEFAULT
job_childdef_suspend:	CHILDSUSPEND						{ $$ = ParseStr.I_SH_CHILDSUSPEND; }
	|		SUSPEND							{ $$ = ParseStr.I_SH_SUSPEND; }
	|		NOSUSPEND						{ $$ = ParseStr.I_SH_NOSUSPEND; }

mergemode:		MERGE_LOCAL						{ $$ = ParseStr.I_MERGE_LOCAL; }
	|		MERGE_GLOBAL						{ $$ = ParseStr.I_MERGE_GLOBAL; }
			//D:DEFAULT
	|		NOMERGE							{ $$ = ParseStr.I_NOMERGE; }
	|		FAILURE							{ $$ = ParseStr.I_FAILURE; }


depnamelist:		dependencyname						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		depnamelist ',' dependencyname				{ $1.addElement($3); }


//----- JOB DEPENDENCIES --------------------------------------------

job_requiredlist:	job_required						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		job_requiredlist ',' job_required			{ $1.addElement($3); }

job_required:		jrq_item						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		job_required jrq_item					{ $1.addItem($2); }

jrq_item:		DEPENDENCY dependencyname				{ $$ = new WithItem(ParseStr.map($1.token), $2); }
	|		folderpath '.' jobname					{ final WithHash w = new WithHash();
										  w.addItem(new WithItem(ParseStr.S_PATH, $1));
										  w.addItem(new WithItem(ParseStr.S_NAME, $3));
										  $$ = new WithItem(ParseStr.S_FULLNAME, w);
										}
	|		UNRESOLVED '=' jrq_unresolved				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		STATUS '=' '(' jrq_statelist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		STATUS '=' NONE						{ $$ = new WithItem(ParseStr.map($1.token), new Vector()); }
	|		STATUS '=' UNREACHABLE					{ $$ = new WithItem(ParseStr.map($1.token), ParseStr.map($3.token)); }
	|		STATUS '=' ALL REACHABLE				{ $$ = new WithItem(ParseStr.map($1.token), ParseStr.map($4.token)); }
	|		STATUS '=' DEFAULT					{ $$ = new WithItem(ParseStr.map($1.token), ParseStr.map($3.token)); }
	|		MODE '=' jrq_mode					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:DEFAULT
	|		CONDITION '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		CONDITION '=' STRING					{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|		RESOLVE '=' jrq_resolve					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		EXPIRED '=' signed_period_rj 				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		EXPIRED '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
//	|		REFERENCE TIMESTAMP '=' jrq_sort			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
			//D:NT-ALIAS = select condition
	|		SELECT CONDITION '=' STRING				{ $$ = new WithItem(ParseStr.S_SELECT_CONDITION, $4.textValue); }
			//D:DEFAULT
	|		SELECT CONDITION '=' NONE				{ $$ = new WithItem(ParseStr.S_SELECT_CONDITION, null); }
//	|		SELECT MODE '=' jrq_selectmode				{ $$ = new WithItem(ParseStr.S_SELECT_MODE, $4); }
//	|		FAIL MODE '=' jrq_failmode				{ $$ = new WithItem(ParseStr.map($1.token), $4); }

			//D:DEFAULT
jrq_resolve:		INTERNAL						{ $$ = ParseStr.I_DD_INTERNAL; }
	|		EXTERNAL						{ $$ = ParseStr.I_DD_EXTERNAL; }
	|		BOTH							{ $$ = ParseStr.I_DD_BOTH; }

			//D:DEFAULT
jrq_unresolved:		ERROR_TOKEN						{ $$ = ParseStr.I_DD_ERROR; }
	|		IGNORE							{ $$ = ParseStr.I_DD_IGNORE; }
	|		SUSPEND							{ $$ = ParseStr.I_DD_SUSPEND; }
	|		DEFER							{ $$ = ParseStr.I_DD_DEFER; }
	|		DEFER_IGNORE						{ $$ = ParseStr.I_DD_DEFER_IGNORE; }

			//D:DEFAULT
jrq_mode:		ALL_FINAL						{ $$ = ParseStr.I_DD_ALL_FINAL; }
	|		JOB_FINAL						{ $$ = ParseStr.I_DD_JOB_FINAL; }


jrq_statelist:		jrq_req_state						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		jrq_statelist ',' jrq_req_state				{ $1.addElement($3); }

jrq_req_state:		statusname						{ $$ = new WithItem($1, null); }
	|		statusname CONDITION '=' STRING				{ $$ = new WithItem($1, $4.textValue); }
			//D:DEFAULT
	|		statusname CONDITION '=' NONE				{ $$ = new WithItem($1, null); }


//----- JOB RESOURCE DEFINITION -------------------------------------

job_resource_definitionlist:	job_resource_definition				{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		job_resource_definitionlist ',' job_resource_definition	{ $1.addElement($3); }

system_resource_reqlist:	system_resource_req					{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		system_resource_reqlist ',' system_resource_req		{ $1.addElement($3); }

//D:NT-ALIAS = requirement
job_resource_definition:	jrd_item					{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		job_resource_definition jrd_item			{ $1.addItem($2); }

//D:NT-ALIAS = requirement
system_resource_req:	jrd_system_item						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		system_resource_req jrd_system_item			{ $1.addItem($2); }

jrd_item:		jrd_sync_item						{ $$ = $1; }
	|		jrd_system_item						{ $$ = $1; }
	|		jrd_static_item						{ $$ = $1; }

			//D:OPTION lockmode
jrd_sync_item:		LOCKMODE '=' lockmode					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION state mapping
	|		STATUS_MAPPING '=' jw_rsmname				{ $$ = new WithItem(ParseStr.S_MAP_STATUS, $3); }
			//D:OPTION expired
	|		EXPIRED '=' signed_period 				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		EXPIRED '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
			//D:OPTION state
	|		STATUS '=' '(' jrd_statelist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		STATUS '=' NONE						{ $$ = new WithItem(ParseStr.map($1.token), new Vector()); }
			//D:OPTION sticky
	|		jrd_sticky						{ $$ = new WithItem(ParseStr.S_STICKY, $1); }

//D:NT-ALIAS = item
jrd_system_item:	resourcepath						{ $$ = new WithItem(ParseStr.S_NAME, $1); }
			//D:OPTION amount
	|		AMOUNT '=' integer					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION keep
	|		jrd_keep						{ $$ = new WithItem(ParseStr.S_KEEP, $1); }

			//D:OPTION condition
jrd_static_item:	CONDITION '=' STRING					{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
			//D:DEFAULT
	|		CONDITION '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }

jrd_keep:		KEEP							{ $$ = ParseStr.I_KEEP; }
			//D:DEFAULT
	|		NOKEEP							{ $$ = ParseStr.I_NOKEEP; }
	|		KEEP_FINAL						{ $$ = ParseStr.I_KEEP_FINAL; }

jrd_sticky:		STICKY opt_stickyspec					{ $$ = $2; }
			//D:DEFAULT
	|		NOSTICKY						{ $$ = null; }

//D:LINEBREAK
opt_stickyspec:									{ $$ = new WithHash(); }
	|		'(' stickyspec ')'					{ $$ = $2; }

stickyspec:		stridentifier						{ $$ = new WithHash(); $<WithHash>$.addItem(new WithItem(ParseStr.S_NAME, $1)); }
	|		folderpath						{ $$ = new WithHash(); $<WithHash>$.addItem(new WithItem(ParseStr.S_JOB_DEFINITION, $1)); }
	|		stridentifier ',' folderpath				{ $$ = new WithHash();
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_NAME, $1));
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_JOB_DEFINITION, $3));
										}
	|		folderpath ',' stridentifier				{ $$ = new WithHash();
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_NAME, $3));
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_JOB_DEFINITION, $1));
										}

jrd_statelist:		statusname						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		jrd_statelist ',' statusname				{ $1.addElement($3); }


//----- JOB PARAMETERS ----------------------------------------------

job_parameterslist:	job_parameter						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		job_parameterslist ',' job_parameter			{ $1.addItem($3); }

job_parameter:		parametername jp_optid opt_jp_withitem jp_optdefault jp_optlocal jp_optexport { final Vector v = new Vector();
										  v.addElement($3);
										  v.addElement($4);
										  v.addElement($5);
										  v.addElement($6);
										  v.addElement($2);
										  $$ = new WithItem($1, v);
										}
	|		parametername jp_optid jp_nondefwith jp_optlocal jp_optexport	{ final Vector v = new Vector();
										  v.addElement($3);
										  v.addElement(null);
										  v.addElement($4);
										  v.addElement($5);
										  v.addElement($2);
										  $$ = new WithItem($1, v);
										}

opt_jp_withitem:								{ $$ = new WithItem(ParseStr.I_PARAMETER, null); }
	|		jp_withitem						{ $$ = $1; }

//NT-ALIAS = parametertype
jp_withitem:		PARAMETERS						{ $$ = new WithItem(ParseStr.I_PARAMETER, null); }
	|		REFERENCE folderpath '(' parametername ')'		{ $2.addElement($4);
										  $$ = new WithItem(ParseStr.I_REFERENCE, $2);
										}
	|		REFERENCE RESOURCE resourcepath '(' parametername ')'	{ $3.addElement($5);
										  $$ = new WithItem(ParseStr.I_RESOURCEREFERENCE, $3);
										}
	|		REFERENCE CHILD folderpath '(' parametername ')'	{ $3.addElement($5);
										  $$ = new WithItem(ParseStr.I_CHILDREFERENCE, $3);
										}
	|		RESULT							{ $$ = new WithItem(ParseStr.I_RESULT, null); }
	|		IMPORT							{ $$ = new WithItem(ParseStr.I_IMPORT, null); }
	|		IMPORT UNRESOLVED					{ $$ = new WithItem(ParseStr.I_IMPORT_UNRESOLVED, null); }

jp_optexport:									{ $$ = null; }
	|		EXPORT '=' parametername				{ $$ = $3; }
	|		EXPORT '=' NONE						{ $$ = null; }

jp_nondefwith:		CONSTANT '=' STRING					{ $$ = new WithItem(ParseStr.I_CONSTANT, $3.textValue); }
	|		jp_aggfunction '(' parametername ')'			{ final Vector v = new Vector();
										  v.addElement($1);
										  v.addElement($3);
										  $$ = new WithItem(ParseStr.I_EXPRESSION, v);
										}

jp_optid:									{ $$ = SDMSConstants.lZERO; }
	|		'(' id ')'						{ $$ = $2; }

jp_optdefault:									{ $$ = null; }
	|		DEFAULT '=' STRING					{ $$ = $3.textValue; }

//D:LINEBREAK
jp_optlocal:									{ $$ = Boolean.FALSE; }
	|		LOCAL							{ $$ = Boolean.TRUE; }

jp_aggfunction:		AVG							{ $$ = ParseStr.I_AVG; }
	|		COUNT							{ $$ = ParseStr.I_COUNT; }
	|		MAX							{ $$ = ParseStr.I_MAX; }
	|		MIN							{ $$ = ParseStr.I_MIN; }
	|		SUM							{ $$ = ParseStr.I_SUM; }

			//D:LEVEL professional
approval_required:	APPROVAL '=' '(' operate_approvelist ')'		{ $$ = new WithItem(ParseStr.S_APPROVE, $4); }
	|		APPROVAL '=' NONE					{ $$ = new WithItem(ParseStr.S_APPROVE, new WithHash()); }

operate_approvelist: operate_approval						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	operate_approvelist ',' operate_approval			{ $1.addItem($3); }

operate_approval:	operate_priv approval_mode opt_leading			{ $$ = new WithItem(Long.valueOf($1), new SDMSKey($2, $3)); }

approval_mode:		MASTER							{ $$ = SDMSConstants.SE_DEFAULT; }
	|		DEFAULT							{ $$ = SDMSConstants.SE_DEFAULT; }
	|		PARENT							{ $$ = SDMSConstants.SE_PARENT; }
	|		NO							{ $$ = SDMSConstants.SE_NO; }
	|		REVIEW							{ $$ = SDMSConstants.SE_REVIEW; }
	|		APPROVE							{ $$ = SDMSConstants.SE_APPROVE; }

opt_leading:									{ $$ = Boolean.FALSE; }
	|		LEADING							{ $$ = Boolean.TRUE; }


//-------------------------------------------------------------------
//  D U M P   T O   F I L E
//-------------------------------------------------------------------
//D:MASTER
//D:LEVEL professional
//D:NT-ALIAS = dump
//D:PURPOSE P114
//D:DESCRIPTION dump.tex
//D:EXAMPLE dump.tex
dump_cmd:	DUMP opt_dump_list opt_dump_with opt_filespec			{ $$ = new DumpCommand($2, $3, $4);
										  final String s = $<DumpCommand>$.syntaxCheck();
										  if (s != null) {
											yyerror(s, new String[]{""});
										  }
										}

opt_dump_list:									{ $$ = null; }
		//D:DEFAULT
	|	ALL								{ $$ = null; }
	|	dump_list							{ $$ = $1; }

dump_list:	dump_objecturl							{ $$ = new Vector(); $<Vector>$.addElement ($1); }
	|	dump_list ',' dump_objecturl					{ $1.addElement ($3); }

cleanup_list:	restrict_url							{ $$ = new Vector(); $<Vector>$.addElement ($1); }
	|	cleanup_list ',' restrict_url					{ $1.addElement ($3); }

opt_filespec:									{ $$ = null; }
	|	TO filespec							{ $$ = $2; }

opt_dump_with:									{ $$ = null; }
	|	dump_with							{ $$ = $1; }

dump_with:	with dump_withlist						{ $$ = $2; }

dump_withlist:	dump_withitem							{ $$ = new WithHash(); $<WithHash>$.addItem ($1); }
	|	dump_withlist ',' dump_withitem					{ $1.addItem ($3); }

//D:NT-ALIAS = withitem
dump_withitem:	MULTICOMMAND							{ $$ = new WithItem (ParseStr.map($1.token), Boolean.TRUE); }
	|	CLEANUP opt_force						{ $$ = new WithItem (ParseStr.map($1.token), $2); }
	|	MAP '=' '(' dump_maplist ')'					{ $$ = new WithItem (ParseStr.map($1.token), $4); }
	|	EXPAND '=' '(' dump_expandlist ')'				{ $$ = new WithItem (ParseStr.map($1.token), $4); }
	|	HEADER '=' STRING						{ $$ = new WithItem (ParseStr.map($1.token), $3.textValue); }
		//D:DEFAULT
	|	MODE '=' BACKUP							{ $$ = new WithItem (ParseStr.map($1.token), ParseStr.map($3.token)); }
	|	MODE '=' DEPLOY							{ $$ = new WithItem (ParseStr.map($1.token), ParseStr.map($3.token)); }
	|	IGNORE READ ERROR_TOKEN						{ $$ = new WithItem (ParseStr.map($1.token), Boolean.TRUE); }
	|	LANGUAGE LEVEL '=' STRING					{ $$ = new WithItem (ParseStr.map($1.token), $4.textValue); }

dump_expandlist: dump_expanditem						{ $$ = new PathVector(); $<PathVector>$.addElement ($1); }
	|	dump_expandlist ',' dump_expanditem				{ $1.addElement ($3); }

dump_expanditem: dumptype '=' '(' dump_rulelist ')'				{ $$ = new DumpExpandItem ($1, null, $4); }
	|	dumptype '(' daliasname ')' '=' '(' dump_rulelist ')'		{ $$ = new DumpExpandItem ($1, $3, $7); }

dump_rulelist:	dump_rule							{ $$ = new PathVector(); $<PathVector>$.addElement ($1); }
	|	dump_rulelist ',' dump_rule					{ $1.addElement ($3); }

dump_rule:	rulename							{ $$ = new DumpRule($1, null); }
	|	rulename '(' daliasname ')'					{ $$ = new DumpRule($1, $3); }

dump_maplist:	dump_mapitem							{ $$ = new WithHash(); $<WithHash>$.addItem ($1); }
	|	dump_maplist ',' dump_mapitem					{ $1.addItem ($3); }

//D:NT-ALIAS = mapitem
dump_mapitem:	NAMED_RESOURCE resourcepath TO resourcepath			{ $$ = new WithItem (new WithItem ($2, $4), ParseStr.map($1.token)); }
	|	FOLDER folderpath TO folderpath					{ $$ = new WithItem (new WithItem ($2, $4), ParseStr.map($1.token)); }
	|	SCOPE serverpath TO serverpath					{ $$ = new WithItem (new WithItem ($2, $4), ParseStr.map($1.token)); }
	|	SCHEDULE schedulepath TO schedulepath				{ $$ = new WithItem (new WithItem ($2, $4), ParseStr.map($1.token)); }
	|	GROUP groupname TO groupname					{ $$ = new WithItem (new WithItem ($2, $4), ParseStr.map($1.token)); }
	|	ENVIRONMENT environmentname TO environmentname			{ $$ = new WithItem (new WithItem ($2, $4), ParseStr.map($1.token)); }

daliasname:	aliasname							{ $$ = $1; }
	|	'*'								{ $$ = "*"; }


//-------------------------------------------------------------------
//  S U B M I T   E I N E S   S C H E D U L I N G   E N T I T Y
//-------------------------------------------------------------------

//D:MASTER JOB USER
//D:NT-ALIAS = get submittag
//D:DESCRIPTION get_submittag.tex
//D:PURPOSE P115
get_submittag_cmd:	GET SUBMITTAG						{ $$ = new GetSubmitTag(); }

//D:MASTER USER JOB
//D:NT-ALIAS = submit
//D:PURPOSE P116
//D:DESCRIPTION submit_cmd.tex
submit_cmd:		full_submit_cmd						{ $$ = $1; }
	|		child_submit_cmd					{ $$ = $1; }

full_submit_cmd:	SUBMIT folderpath opt_submit_with			{ $$ = new SubmitJob($2, $3); }
	|		SUBMIT id opt_submit_with				{ $$ = new SubmitJob($2, $3); }

child_submit_cmd:	SUBMIT aliasname opt_submit_with			{ $$ = new SubmitJob($2, $3); }

event_submit_cmd:	SUBMIT folderpath opt_event_submit_with			{ $$ = new SubmitJob($2, $3); }

opt_event_submit_with:								{ $$ = new WithHash(); }
	|		with PARAMETERS '=' '(' submit_paramlist ')'		{ $$ = new WithHash(); $<WithHash>$.addItem(new WithItem(ParseStr.S_PARAMETERS, $5)); }

opt_submit_with:								{ $$ = new WithHash(); }
	|		submit_with						{ $$ = $1; }

submit_with:		with submit_withlist					{ $$ = $2; }

submit_withlist:	submit_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		submit_withlist ',' submit_withitem			{ $1.addItem($3); }

//D:NT-ALIAS = withitem
submit_withitem:	suspend							{ $$ = $1; }
	|		PARAMETERS '=' '(' submit_paramlist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		PARAMETERS '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), new Vector()); }
	|		NICEVALUE '=' signed_integer				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		CHILDTAG '=' STRING					{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|		SUBMITTAG '=' STRING					{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|		CHECK ONLY						{ $$ = new WithItem(ParseStr.S_CHECK_ONLY, Boolean.TRUE); }
	|		with_group						{ $$ = $1; }
	|		UNRESOLVED '=' jrq_unresolved				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		resume							{ $$ = $1; }
	|		MASTER							{ $$ = new WithItem(ParseStr.map($1.token), $1.textValue); }
	|		TIME ZONE '=' STRING					{ $$ = new WithItem(ParseStr.map($1.token), $4.textValue); }
	|		enable							{ $$ = new WithItem(ParseStr.S_ENABLE, $1); }


resume:			RESUME IN period					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		RESUME AT sdatetime					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:DEFAULT
	|		NORESUME						{ $$ = new WithItem(ParseStr.S_RESUME, null); }

submit_paramlist:	submit_param						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		submit_paramlist ',' submit_param			{ $1.addElement($3); }

//D:NT-ALIAS = param
submit_param:		parm_is_string						{ $$ = $1; }



//-----------------------------------------------------------------------------
//  T E R M I N I E R U N G   E I N E S   S U B M I T T E D   E N T I T Y
//-----------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = finish job
//D:DESCRIPTION finish_job.tex
//D:PURPOSE P117
finish_job_cmd:	FINISH JOB jobid with EXIT_CODE '=' signed_integer		{ $$ = new FinishJob($3, $7); }
	|	FINISH JOB with EXIT_CODE '=' signed_integer			{ $$ = new FinishJob($6); }



//-----------------------------------------------------------------------------
//  A L T E R   S T A T E   E I N E S   S U B M I T T E D   E N T I T Y
//-----------------------------------------------------------------------------

//D:MASTER USER SERVER JOB
//D:NT-ALIAS = alter job
//D:NODEFAULTS
//D:PURPOSE P118
//D:DESCRIPTION alter_job.tex
alter_job:	ALTER JOB jobid aj_withwith					{ $$ = new AlterJob($3, $4); }
	|	ALTER JOB aj_withwith						{ $$ = new AlterJob($3); }

aj_withwith:	with aj_withlist						{ $$ = $2; }

aj_withlist:	aj_withitem							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	aj_withlist ',' aj_withitem					{ $1.addItem($3); }

//D:NT-ALIAS = withitem
aj_withitem:	CANCEL								{ $$ = new WithItem(ParseStr.map($1.token), Boolean.TRUE); }
	|	aj_disable							{ $$ = $1; }
	|	CLEAR WARNING							{ $$ = new WithItem(ParseStr.S_CLEAR_WARN, Boolean.TRUE); }
	|	CLONE 								{ $$ = new WithItem(ParseStr.map($1.token), Boolean.FALSE); }
	|	CLONE RESUME							{ $$ = new WithItem(ParseStr.map($1.token), Boolean.FALSE); }
	|	CLONE SUSPEND							{ $$ = new WithItem(ParseStr.map($1.token), Boolean.TRUE); }
	|	COMMENT '=' STRING						{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|	ERROR_TEXT '=' STRING						{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|	EXEC_PID '=' pid						{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	EXIT_CODE '=' signed_integer					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	EXIT_STATUS '=' statusname opt_force				{ Vector v = new Vector(); v.addElement($3); v.addElement($4); $$ = new WithItem(ParseStr.S_EXIT_STATUS, v); }
	|	EXT_PID '=' pid							{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	IGNORE_DEPENDENCY '=' '(' aj_igndeplist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|	IGNORE RESOURCE '=' '(' aj_ignrsrclist ')'			{ $$ = new WithItem(ParseStr.S_IGNORE_RESOURCE, $5); }
		//D:SUPPRESS
	|	IGNORE NAMED_RESOURCE '=' '(' aj_ignnrlist ')'			{ $$ = new WithItem(ParseStr.S_IGNORE_NAMED_RESOURCE, $5); }
	|	KILL								{ $$ = new WithItem(ParseStr.map($1.token), Boolean.TRUE); }
	|	KILL RECURSIVE							{ $$ = new WithItem(ParseStr.map($1.token), Boolean.FALSE); }
	|	NICEVALUE '=' signed_integer					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	PRIORITY '=' integer						{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	RENICE '=' signed_integer					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	RERUN								{ $$ = new WithItem(ParseStr.map($1.token), Boolean.FALSE); }
		//D:SUPPRESS
	|	RERUN_PROGRAM '=' STRING					{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|	RERUN RECURSIVE							{ $$ = new WithItem(ParseStr.map($1.token), Boolean.TRUE); }
	|	RESUME								{ $$ = new WithItem(ParseStr.map($1.token), Boolean.FALSE); }
	|	resume								{ $$ = $1; }
	|	RUN '=' integer							{ $$ = new WithItem(ParseStr.map($1.token), $3); }
		//D:SUPPRESS
	|	RUN_PROGRAM '=' STRING						{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|	STATUS '=' jobstate						{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	aj_suspend							{ $$ = $1; }
	|	TIMESTAMP '=' STRING						{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|	WARNING '=' STRING						{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }

aj_suspend:	SUSPEND								{ $$ = new WithItem(ParseStr.map($1.token), Boolean.TRUE); }
	|	SUSPEND RESTRICT						{ $$ = new WithItem(ParseStr.map($1.token), ParseStr.I_ADMINSUSPEND); }
	|	SUSPEND LOCAL							{ $$ = new WithItem(ParseStr.map($1.token), ParseStr.I_LOCALSUSPEND); }
	|	SUSPEND LOCAL RESTRICT						{ $$ = new WithItem(ParseStr.map($1.token), ParseStr.I_LOCALADMINSUSPEND); }

aj_disable:	DISABLE								{ $$ = new WithItem(ParseStr.S_DISABLE, Boolean.TRUE); }
	|	ENABLE								{ $$ = new WithItem(ParseStr.S_DISABLE, Boolean.FALSE); }

jobstate:	STARTING							{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	STARTED								{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	RUNNING								{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	FINISHED							{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	BROKEN_ACTIVE							{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	BROKEN_FINISHED							{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	ERROR_TOKEN							{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	RESOURCE_WAIT							{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	DEPENDENCY_WAIT							{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	SYNCHRONIZE_WAIT						{ $$ = SDMSSubmittedEntity.map($1.token); }

jobstate2:	SUBMITTED							{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	RUNNABLE							{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	SUSPENDED							{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	TO_KILL								{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	KILLED								{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	CANCELLED							{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	FINAL								{ $$ = SDMSSubmittedEntity.map($1.token); }
	|	UNREACHABLE							{ $$ = SDMSSubmittedEntity.map($1.token); }

//D:NT-ALIAS = jobstate
all_jobstates:	jobstate							{ $$ = $1; }
	|	jobstate2							{ $$ = $1; }

aj_igndeplist:	aj_igndepitem							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	aj_igndeplist ',' aj_igndepitem					{ $1.addElement($3); }

aj_igndepitem:	jobid								{ $$ = new Vector(); $<Vector>$.addElement($1); $<Vector>$.addElement(Boolean.FALSE); }
	|	jobid RECURSIVE							{ $$ = new Vector(); $<Vector>$.addElement($1); $<Vector>$.addElement(Boolean.TRUE); }

aj_ignrsrclist:	id								{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	aj_ignrsrclist ',' id						{ $1.addElement($3); }

aj_ignnrlist:	resourcepath							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	aj_ignnrlist ',' resourcepath					{ $1.addElement($3); }



//-----------------------------------------------------------------------------
// R E A S S U R E   A   S U B M I T T E D   E N T I T Y
//-----------------------------------------------------------------------------

//D:MASTER SERVER NOUSER
//D:NT-ALIAS = reassure
//D:DESCRIPTION reassure.tex
//D:PURPOSE P119
reassure_cmd:	REASSURE jobid optrun						{ $$ = new ReassureJob($2); }

optrun:
	|	with RUN '=' integer



//-----------------------------------------------------------------------------
//  L I S T   C A L E N D A R
//-----------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = list calendar
//D:PURPOSE P186
//D:DESCRIPTION list_calendar.tex
list_calendar:		LIST CALENDAR opt_lc_withlist				{ $$ = new ListCalendar($3); }

opt_lc_withlist:								{ $$ = null; }
	|		with lc_withlist					{ $$ = $2; }

lc_withlist:		lc_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		lc_withlist ',' lc_withitem				{ $1.addItem($3); }

lc_withitem:		FILTER '=' lc_filterexpression				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		STARTTIME '=' datetime					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		ENDTIME '=' datetime					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		TIME ZONE '=' STRING					{ $$ = new WithItem(ParseStr.map($1.token), $4.textValue); }

lc_filterexpression:	lc_filterterm						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		lc_filterexpression OR lc_filterterm			{ $1.addElement($3); }

lc_filterterm:		lc_filteritem						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		lc_filterterm AND lc_filteritem				{ $1.addElement($3); }

lc_filteritem:		lc_filteratom						{ $$ = $1; }
	|		'(' lc_filterexpression ')'				{ $$ = new WithItem(ParseStr.S_FILTER, $2);     }
	|		NOT '(' lc_filterexpression ')'				{ $$ = new WithItem(ParseStr.S_NEGFILTER, $3);  }

lc_filteratom:		NAME LIKE STRING					{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|		OWNER IN '(' lj_userlist ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		JOB '.' stridentifier cmpop rvalue			{ final WithHash w = new WithHash();
										  w.addItem(new WithItem(ParseStr.S_NAME, $3));
										  w.addItem(new WithItem(ParseStr.S_CMPOP, $4));
										  w.addItem(new WithItem(ParseStr.S_VALUE, $5));
										  $$ = new WithItem(ParseStr.S_PARAMETERS, w);
										}

//-----------------------------------------------------------------------------
//  L I S T   S U B M I T T E D   E N T I T Y
//-----------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = list job
//D:PURPOSE P120
//D:DESCRIPTION list_job.tex
list_job:		list JOB opt_lj_idlist opt_lj_withlist			{ if($3 == null) 
											if($4 == null) $$ = new ListSubmitted();
											else		$$ = new ListSubmitted($4);
										  else
											if($4 == null) $$ = new ListSubmitted($3);
											else		$$ = new ListSubmitted($3, $4);
										}

opt_lj_idlist:									{ $$ = null; }
	|		jobid_list						{ $$ = $1; }

jobid_list:		jobid							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		jobid_list ',' jobid					{ $1.addElement($3); }

opt_lj_withlist:								{ $$ = null; }
	|		with lj_withlist					{ $$ = $2; }

lj_withlist:		lj_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		lj_withlist ',' lj_withitem				{ $1.addItem($3); }

//D:NT-ALIAS = withitem
lj_withitem:		filterexpression					{ $$ = new WithItem(ParseStr.S_FILTER, $1);	}
	|		MODE '=' lj_mode					{ $$ = new WithItem(ParseStr.map($1.token), $3);	}
	|		ENABLED ONLY						{ $$ = new WithItem(ParseStr.map($1.token), Boolean.TRUE); }
	|		expand							{ $$ = new WithItem(ParseStr.S_EXPAND, $1);	}
	|		PARAMETERS '=' '(' lj_parameterlist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4);	}

filterexpression:	filterterm						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		filterexpression OR filterterm				{ $1.addElement($3); }

filterterm:		filteritem						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		filterterm AND filteritem				{ $1.addElement($3); }

filteritem:		filteratom						{ $$ = $1; }
	|		'(' filterexpression ')'				{ $$ = new WithItem(ParseStr.S_FILTER, $2);	}
	|		NOT '(' filterexpression ')'				{ $$ = new WithItem(ParseStr.S_NEGFILTER, $3);	}

filteratom:		EXIT_STATUS IN '(' lj_exitstatelist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		MERGED EXIT_STATUS IN '(' lj_exitstatelist ')'		{ $$ = new WithItem(ParseStr.map($1.token), $5); }
	|		JOB_STATUS IN '(' lj_jobstatelist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		NAME LIKE STRING					{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|		NODE IN '(' lj_nodelist ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		JOB_SERVER IN '(' lj_jobserverlist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		SUBMITTING_USER IN '(' lj_userlist ')'			{ $$ = new WithItem(ParseStr.S_SUBMITTING, $4); }
	|		OWNER IN '(' lj_userlist ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		esp_state_type						{ $$ = new WithItem(ParseStr.S_RESTARTABLE, $1); }
	|		MASTER							{ $$ = new WithItem(ParseStr.map($1.token), Boolean.TRUE); }
	|		history '=' period					{ $$ = new WithItem($1, $3); }
	|		HISTORY BETWEEN period AND period			{ final Vector v = new Vector();
										  v.addElement($3); v.addElement($5);
										  $$ = new WithItem(ParseStr.map($1.token), v); }
	|		MASTER_ID IN '(' jobid_list ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		NAME IN '(' folderpathlist ')'				{ $$ = new WithItem(ParseStr.S_NAMELIST, $4); }
	|		DOLLAR stridentifier cmpop rvalue			{ final WithHash w = new WithHash();
										  w.addItem(new WithItem(ParseStr.S_NAME, $2));
										  w.addItem(new WithItem(ParseStr.S_CMPOP, $3));
										  w.addItem(new WithItem(ParseStr.S_VALUE, $4));
										  $$ = new WithItem(ParseStr.S_PARAMETERS, w);
										}
	|		JOB '.' stridentifier cmpop rvalue			{ final WithHash w = new WithHash();
										  w.addItem(new WithItem(ParseStr.S_NAME, $3));
										  w.addItem(new WithItem(ParseStr.S_CMPOP, $4));
										  w.addItem(new WithItem(ParseStr.S_VALUE, $5));
										  $$ = new WithItem(ParseStr.S_PARAMETERS, w);
										}
	|		JOB IN '(' jobid_list ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		WARNING							{ $$ = new WithItem(ParseStr.map($1.token), Boolean.TRUE); }
	|		enable							{ $$ = new WithItem(ParseStr.S_ENABLE, $1); }

history:		HISTORY							{ $$ = ParseStr.map($1.token); }
	|		FUTURE							{ $$ = ParseStr.map($1.token); }

lj_exitstatelist:	statusname						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		lj_exitstatelist ',' statusname				{ $1.addElement($3);			}

lj_jobstatelist:	all_jobstates						{ $$ = new HashSet(); $<HashSet>$.add($1); }
	|		lj_jobstatelist ',' all_jobstates			{ $1.add($3);				}

lj_nodelist:		nodename						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		lj_nodelist ',' nodename				{ $1.addElement($3);			}

lj_jobserverlist:	serverpath						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		lj_jobserverlist ',' serverpath				{ $1.addElement($3);			}

lj_userlist:		groupname						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		lj_userlist ',' groupname				{ $1.addElement($3);			}

lj_mode:		TREE							{ $$ = ParseStr.I_TREE;	}
			//D:DEFAULT
	|		LIST							{ $$ = ParseStr.I_LIST;	}

lj_parameterlist:	parametername						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		lj_parameterlist ',' parametername			{ $1.addElement($3);	}

folderpathlist:		folderpath						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		folderpathlist ',' folderpath				{ $1.addElement($3); }


//-----------------------------------------------------------------------------
//  S H O W   C R I T I C A L   P A T H 
//-----------------------------------------------------------------------------
//D:MASTER
//D:NT-ALIAS = show critical path
//D:DESCRIPTION show_critical_path.tex
//D:PURPOSE P999
show_critical_path:	SHOW CRITICAL PATH FOR jobid opt_scp_with		{ $$ = new ShowCriticalPath($5, $6); }

opt_scp_with:									{ $$ = null; }
	|	WITH scp_withlist						{ $$ = $2; }

scp_withlist: scp_withitem							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	| scp_withlist ',' scp_withitem						{ $1.addItem($3); }

scp_withitem: DELTA '=' integer							{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	| GLOBAL								{ $$ = new WithItem(ParseStr.map($1.token), Boolean.TRUE); }


//-----------------------------------------------------------------------------
//  S H O W   S U B M I T T E D   E N T I T Y
//-----------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = show job
//D:DESCRIPTION show_job.tex
//D:PURPOSE P121
show_job:	SHOW JOB jobid opt_sj_with 					{ $$ = new ShowSubmitted($3, $4); }
	|	SHOW JOB SUBMITTAG '=' STRING opt_sj_with			{ $$ = new ShowSubmitted($5.textValue, $6); }

opt_sj_with:									{ $$ = null; }
	|	with sj_withlist						{ $$ = $2; }

sj_withlist:	sj_withitem							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	sj_withlist ',' sj_withitem					{ $1.addItem($3); }

//D:NT-ALIAS = withitem
sj_withitem:	RECURSIVE AUDIT							{ $$ = new WithItem(ParseStr.map($1.token), Boolean.TRUE); }
	|	FILTER '=' '(' sj_auditfilter ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }

sj_auditfilter: sj_filteritem							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	sj_auditfilter ',' sj_filteritem				{ $1.addElement($3); }

//D:NT-ALIAS = filteritem
sj_filteritem:  RERUN								{ $$ = SDMSAuditTrail.convert($1); }
	|	RERUN RECURSIVE							{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	CANCEL								{ $$ = SDMSAuditTrail.convert($1); }
	|	CLONE								{ $$ = SDMSAuditTrail.convert($1); }
	|	SUSPEND								{ $$ = SDMSAuditTrail.convert($1); }
	|	RESUME								{ $$ = SDMSAuditTrail.convert($1); }
	|	SET STATUS							{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	SET EXIT_STATUS							{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	IGNORE_DEPENDENCY						{ $$ = SDMSAuditTrail.convert($1); }
	|	IGNORE_DEPENDENCY RECURSIVE					{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	IGNORE RESOURCE							{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	KILL								{ $$ = SDMSAuditTrail.convert($1); }
	|	COMMENT								{ $$ = SDMSAuditTrail.convert($1); }
	|	SUBMIT								{ $$ = SDMSAuditTrail.convert($1); }
	|	TRIGGER FAILURE							{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	TRIGGER SUBMIT							{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	RESTARTABLE							{ $$ = SDMSAuditTrail.convert($1); }
	|	CHANGE PRIORITY							{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	RENICE								{ $$ = SDMSAuditTrail.convert($1); }
	|	SUBMIT SUSPEND							{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	IGNORE NAMED_RESOURCE						{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	TIMEOUT								{ $$ = SDMSAuditTrail.convert($1); }
	|	SET RESOURCE_STATUS						{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	JOB IN ERROR_TOKEN						{ $$ = SDMSAuditTrail.convert($1, $2, $3); }
	|	CLEAR WARNING							{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	SET WARNING							{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	SET PARAMETERS							{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	UNREACHABLE							{ $$ = SDMSAuditTrail.convert($1); }
	|	DISABLE								{ $$ = SDMSAuditTrail.convert($1); }
	|	ENABLE								{ $$ = SDMSAuditTrail.convert($1); }
	|	APPROVE								{ $$ = SDMSAuditTrail.convert($1); }
	|	REJECT								{ $$ = SDMSAuditTrail.convert($1); }
	|	APPROVAL REQUEST						{ $$ = SDMSAuditTrail.convert($1, $2); }
	|	REVIEW REQUEST							{ $$ = SDMSAuditTrail.convert($1, $2); }


//-----------------------------------------------------------------------------
//  G E T   A N D   S E T   P A R A M E T E R
//-----------------------------------------------------------------------------

get_set_parm_cmd:	get_parm_cmd						{ $$ = $1; }
	|		set_parm_cmd						{ $$ = $1; }

//D:MASTER JOB USER
//D:NT-ALIAS = get parameter
//D:DESCRIPTION get_parameter.tex
//D:PURPOSE P122
get_parm_cmd:		GET PARAMETERS parametername opt_gpmode			{ $$ = new GetParameter($3, $4); }
	|		GET PARAMETERS OF jobid parametername opt_gpmode	{ $$ = new GetParameter($5, $6, $4); }

opt_gpmode:									{ $$ = ParseStr.S_DEFAULT; }
	|		gpmode							{ $$ = $1; }

//D:LINEBREAK
gpmode:			STRICT							{ $$ = ParseStr.map($1.token); }
	|		WARN							{ $$ = ParseStr.map($1.token); }
	|		LIBERAL							{ $$ = ParseStr.map($1.token); }

//D:MASTER JOB USER
//D:NT-ALIAS = set parameter
//D:DESCRIPTION set_parameter.tex
//D:PURPOSE P123
set_parm_cmd:		SET PARAMETERS cf_parmlist				{ $$ = new SetParameter($3); }
	|		SET PARAMETERS on_of jobid cf_parmlist opt_sp_with	{ $$ = new SetParameter($5, $4, null, $6); }
	|		SET PARAMETERS on_of jobid cf_parmlist identified_by opt_sp_with	{ $$ = new SetParameter($5, $4, $6, $7); }

on_of:			ON							{ /* do nothing */ }
	|		OF							{ /* do nothing */ }

opt_sp_with:									{ $$ = null; }
	|		sp_with							{ $$ = $1; }

sp_with:		WITH COMMENT '=' STRING					{ $$ = new WithHash(); $<WithHash>$.addItem(new WithItem(ParseStr.S_COMMENT, $4.textValue)); }



//-----------------------------------------------------------------------------
//  S E T   S T A T E
//-----------------------------------------------------------------------------

//D:MASTER JOB NOUSER
//D:NT-ALIAS = set state
//D:DESCRIPTION set_state.tex
//D:PURPOSE P124
set_status_cmd:	SET STATUS '=' statusname					{ $$ = new SetState($4); }



//-----------------------------------------------------------------------------
//  E V E N T
//-----------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create event
//D:PURPOSE P125
//D:DESCRIPTION create_event.tex
create_event:	create event_url cev_with_clause	 			{ $$ = new CreateEvent($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = drop event
//D:DESCRIPTION drop_event.tex
//D:PURPOSE P126
drop_event:	drop event_url							{ $$ = new DropEvent($2, $1); }

//D:MASTER
//D:NT-ALIAS = alter event
//D:NODEFAULTS
//D:PURPOSE P127
//D:DESCRIPTION alter_event.tex
alter_event:	alter event_url cev_with_clause					{ $$ = new AlterEvent($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = rename event
//D:DESCRIPTION rename_event.tex
//D:PURPOSE P128
rename_event:	RENAME EVENT eventname TO eventname				{ $$ = new RenameEvent($3, $5); }

//D:MASTER
//D:NT-ALIAS = list event
//D:DESCRIPTION list_event.tex
//D:PURPOSE P129
list_event:	LIST EVENT							{ $$ = new ListEvent(); }

//D:MASTER
//D:NT-ALIAS = show event
//D:DESCRIPTION show_event.tex
//D:PURPOSE P130
show_event:	SHOW EVENT eventname						{ $$ = new ShowEvent($3); }


cev_with_clause: with cev_withlist						{ $$ = $2; }

cev_withlist:	cev_withitem							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	cev_withlist ',' cev_withitem					{ $1.addItem($3); }

//D:NT-ALIAS = event_withitem
cev_withitem:	ACTION '=' event_submit_cmd					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	with_group							{ $$ = $1; }



//-----------------------------------------------------------------------------
//  I N T E R V A L
//-----------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create interval
//D:DESCRIPTION create_interval.tex
//D:PURPOSE P131
create_interval:	create interval_url opt_ival_with			{ $$ = new CreateInterval($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = alter interval
//D:NODEFAULTS
//D:PURPOSE P132
//D:DESCRIPTION alter_interval.tex
alter_interval:		alter interval_url ival_with				{ $$ = new AlterInterval($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = drop interval
//D:DESCRIPTION drop_interval.tex
//D:PURPOSE P133
drop_interval:		drop interval_url					{ $$ = new DropInterval($2, $1); }

//D:MASTER
//D:NT-ALIAS = rename interval
//D:DESCRIPTION rename_interval.tex
//D:PURPOSE P134
rename_interval:	RENAME INTERVAL intervalname TO intervalname		{ $$ = new RenameInterval($3, $5); }

//D:MASTER
//D:NT-ALIAS = list interval
//D:DESCRIPTION list_interval.tex
//D:PURPOSE P135
list_interval:		LIST INTERVAL						{ $$ = new ListInterval(false); }
	|		LIST INTERVAL ALL					{ $$ = new ListInterval(true); }

//D:MASTER
//D:NT-ALIAS = show interval
//D:PURPOSE P136
//D:DESCRIPTION show_interval.tex
show_interval:		SHOW INTERVAL intervalname opt_ivowner opt_si_with	{ $$ = new ShowInterval($3, $4, $5); }
			//D:SUPPRESS
	|		SHOW INTERVAL id opt_ivowner opt_si_with		{ $$ = new ShowInterval($3, $4, $5); }

opt_si_with:									{ $$ = null; }
	|		WITH DAY BETWEEN datetime_notz AND datetime_notz opt_si_limit	{ $$ = new Vector();
										  $<Vector>$.add($4);
										  $<Vector>$.add($6);
										  $<Vector>$.add($7);
										}
opt_si_limit:									{ $$ = SystemEnvironment.maxNumCalEntries; }
	|		',' LIMIT '=' integer					{ $$ = $4; }

opt_ivowner:									{ $$ = null; }
	|		'(' id ')'						{ $$ = $2; }

opt_ival_with:									{ $$ = null; }
	|		ival_with						{ $$ = $1; }

ival_with:		with ival_withlist					{ $$ = $2; }

ival_withlist:		ival_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		ival_withlist ',' ival_withitem				{ $1.addItem($3); }

//D:NT-ALIAS = withitem
ival_withitem:		STARTTIME '=' datetime_notz				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		STARTTIME '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		ENDTIME '=' datetime_notz				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		ENDTIME '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		BASE '=' opt_period 					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		EMBEDDED '=' cintervalname				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:DEFAULT
	|		EMBEDDED '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		DURATION '=' opt_period					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		SYNCTIME '=' datetime_notz				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		SELECTION '=' '(' ival_sellist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
			//D:DEFAULT
	|		SELECTION '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		ival_inverse						{ $$ = $1; }
			//D:SUPPRESS
	|		DELAY '=' datetime_duration				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:SUPPRESS
	|		DELAY '=' NONE						{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		FILTER '=' '(' ival_namelist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
			//D:DEFAULT
	|		FILTER '=' NONE						{ $$ = new WithItem(ParseStr.map($1.token), null); }
			//D:SUPPRESS
	|		ival_merge						{ $$ = new WithItem(ParseStr.S_MERGE, $1); }
	|		with_group						{ $$ = $1; }
			//D:DEFAULT
	|		DISPATCH '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		DISPATCH '=' '(' ival_dispatchlist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }

ival_inverse:		INVERSE							{ $$ = new WithItem(ParseStr.S_INVERSE, Boolean.TRUE); }
			//D:DEFAULT
	|		NOINVERSE						{ $$ = new WithItem(ParseStr.S_INVERSE, Boolean.FALSE); }

ival_merge:		MERGE							{ $$ = Boolean.TRUE; }
			//D:DEFAULT
	|		NOMERGE							{ $$ = Boolean.FALSE; }

ival_sellist:		ival_selitem						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		ival_sellist ',' ival_selitem				{ $1.addElement($3); }

ival_selitem:		signed_integer						{ $$ = new WithItem (ParseStr.S_SELECT_NUM, $1); }
	|		datetime_notz						{ final WithHash w = new WithHash();
										  w.addItem (new WithItem (ParseStr.S_SELECT_FROM, $1));
										  $$ = new WithItem (ParseStr.S_SELECT_RANGE, w);
										}
	|		datetime_notz '-' datetime_notz				{ final WithHash w = new WithHash();
										  w.addItem (new WithItem (ParseStr.S_SELECT_FROM, $1));
										  w.addItem (new WithItem (ParseStr.S_SELECT_TO, $3));
										  $$ = new WithItem (ParseStr.S_SELECT_RANGE, w);
										}

ival_namelist:		cintervalname						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		ival_namelist ',' cintervalname				{ $1.addElement($3); }

ival_dispatchlist:	ival_dispatchitem					{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		ival_dispatchlist ',' ival_dispatchitem			{ $1.addElement($3); }

ival_dispatchitem:	dispatchname active ival_dispatchdef			{ $$ = new Vector(); $<Vector>$.addElement($1); $<Vector>$.addElement($2); $<Vector>$.addElement($3); }

ival_dispatchdef:	cintervalname enable					{ $$ = new Vector(); $<Vector>$.addElement($1); $<Vector>$.addElement(null); $<Vector>$.addElement($2); }
	|		cintervalname cintervalname enable			{ $$ = new Vector(); $<Vector>$.addElement($1); $<Vector>$.addElement($2); $<Vector>$.addElement($3); }
	|		NONE cintervalname enable				{ $$ = new Vector(); $<Vector>$.addElement(null); $<Vector>$.addElement($2); $<Vector>$.addElement($3); }




//-----------------------------------------------------------------------------
//  S C H E D U L E
//-----------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create schedule
//D:DESCRIPTION create_schedule.tex
//D:PURPOSE P137
create_schedule:	create schedule_url opt_schedwith			{ $$ = new CreateSchedule($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = alter schedule
//D:NODEFAULTS
//D:PURPOSE P138
//D:DESCRIPTION alter_schedule.tex
alter_schedule:		alter schedule_url schedwithwith			{ $$ = new AlterSchedule($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = drop schedule
//D:DESCRIPTION drop_schedule.tex
//D:PURPOSE P139
drop_schedule:		drop schedule_url					{ $$ = new DropSchedule($2, $1); }

//D:MASTER
//D:NT-ALIAS = move schedule
//D:DESCRIPTION move_schedule.tex
//D:PURPOSE P140
move_schedule:		MOVE SCHEDULE schedulepath '.' schedulename TO schedulepath
										{ $$ = new MoveSchedule($3, $5, $7); }

//D:MASTER
//D:NT-ALIAS = rename schedule
//D:DESCRIPTION rename_schedule.tex
//D:PURPOSE P204
rename_schedule:	RENAME SCHEDULE schedulepath '.' schedulename TO schedulename
										{ $$ = new MoveSchedule($3, $5, $7); }

//D:MASTER
//D:NT-ALIAS = list schedule
//D:DESCRIPTION list_schedule.tex
//D:PURPOSE P141
list_schedule:		LIST SCHEDULE schedulepath opt_expand			{ $$ = new ListSchedule($3, $4); }

//D:MASTER
//D:NT-ALIAS = show schedule
//D:DESCRIPTION show_schedule.tex
//D:PURPOSE P142
show_schedule:		SHOW SCHEDULE schedulepath				{ $$ = new ShowSchedule($3); }

opt_schedwith:									{ $$ = null; }
	|		schedwithwith						{ $$ = $1; }

schedwithwith:		with schedwithlist					{ $$ = $2; }

schedwithlist:		schedwith						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		schedwithlist ',' schedwith				{ $1.addItem($3); }

//D:NT-ALIAS = withitem
schedwith:		INTERVAL '=' intervalname				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:DEFAULT
	|		INTERVAL '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		TIME ZONE '=' STRING					{ $$ = new WithItem(ParseStr.map($1.token), $4.textValue); }
	|		with_group						{ $$ = $1; }
	|		active							{ $$ = new WithItem(ParseStr.S_ACTIVE, $1); }
	|		with_inherit_grant					{ $$ = $1; }

			//D:DEFAULT
active:			ACTIVE							{ $$ = Boolean.TRUE; }
	|		INACTIVE						{ $$ = Boolean.FALSE; }



//-----------------------------------------------------------------------------
//  S C H E D U L E D   E V E N T
//-----------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create scheduled event
//D:PURPOSE P143
//D:DESCRIPTION create_scheduled_event.tex
create_scheduled_event:	create scheduledevent_url opt_schevwith			{ $$ = new CreateScheduledEvent($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = alter scheduled event
//D:NODEFAULTS
//D:PURPOSE P144
//D:DESCRIPTION alter_scheduled_event.tex
alter_scheduled_event:	alter scheduledevent_url schevwithwith			{ $$ = new AlterScheduledEvent($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = drop scheduled event
//D:DESCRIPTION drop_scheduled_event.tex
//D:PURPOSE P145
drop_scheduled_event:	drop scheduledevent_url					{ $$ = new DropScheduledEvent($2, $1); }

//D:MASTER
//D:NT-ALIAS = list scheduled
//D:DESCRIPTION list_scheduled.tex
//D:PURPOSE P214
list_scheduled:		LIST SCHEDULED WITH lc_withlist				{ $$ = new ListScheduledEvent($4); }

//D:MASTER
//D:NT-ALIAS = list scheduled event
//D:DESCRIPTION list_scheduled_event.tex
//D:PURPOSE P146
list_scheduled_event:	LIST SCHEDULED_EVENT					{ $$ = new ListScheduledEvent(); }

//D:MASTER
//D:NT-ALIAS = show scheduled event
//D:DESCRIPTION show_scheduled_event.tex
//D:PURPOSE P147
show_scheduled_event:	SHOW SCHEDULED_EVENT schedulepath '.' eventname		{ $$ = new ShowScheduledEvent($3, $5); }

opt_schevwith:									{ $$ = new WithHash(); }
	|		schevwithwith						{ $$ = $1; }

schevwithwith:		with schevwithlist					{ $$ = $2; }

schevwithlist:		schevwithitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		schevwithlist ',' schevwithitem				{ $1.addItem($3); }

//D:NT-ALIAS = withitem
schevwithitem:		active							{ $$ = new WithItem(ParseStr.S_ACTIVE, $1); }
	|		with_group						{ $$ = $1; }
	|		BACKLOG_HANDLING '=' schevbacklog			{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:DEFAULT
	|		SUSPEND_LIMIT '=' DEFAULT				{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		SUSPEND_LIMIT '=' period				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		CALENDAR '=' active					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		HORIZON '=' opt_integer					{ $$ = new WithItem(ParseStr.map($1.token), $3); }

			//D:DEFAULT
schevbacklog:		LAST							{ $$ = ParseStr.I_SCE_LAST; }
	|		ALL							{ $$ = ParseStr.I_SCE_ALL;  }
	|		NONE							{ $$ = ParseStr.I_SCE_NONE; }



//-----------------------------------------------------------------------------
//  J O B   A N D   R E S O U R C E   T R I G G E R
//-----------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create trigger
//D:PURPOSE P148
//D:DESCRIPTION  create_trigger.tex
create_trigger:		create TRIGGER triggername ON ct_object opt_ival_inverse ct_withwith	{ $<WithHash>7.addItem($6); $$ = new CreateTrigger($3, $5, $7, $1); }

ct_object:		JOB_DEFINITION folderpath				{ $$ = new WithItem(ParseStr.S_JOB, $2); }
	|		RESOURCE resourcepath IN serverpath			{ $4.add($2); $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		RESOURCE resourcepath IN folderpath			{ $4.add($2); $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		NAMED_RESOURCE resourcepath 				{ $$ = new WithItem(ParseStr.map($1.token), $2); }
	|		OBJECT MONITOR objecttypename				{ $$ = new WithItem(ParseStr.map($1.token), $3); }

ct_withlist:		ct_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		ct_withlist ',' ct_withitem				{ $1.addItem($3); }

//D:NT-ALIAS = withitem
ct_withitem:		STATUS '=' '(' ct_jobstatuslist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		STATUS '=' '(' ct_rscstatuslist ')'			{ $$ = new WithItem(ParseStr.S_RSCSTATUS, $4); }
			//D:DEFAULT
	|		STATUS '=' NONE						{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		SUBMIT folderpath					{ $$ = new WithItem(ParseStr.map($1.token), $2); }
	|		SUBMIT AFTER folderpath					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		RERUN 							{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		type_is ct_triggertype					{ $$ = new WithItem(ParseStr.S_TRIGGERTYPE, $2); }
	|		master							{ $$ = new WithItem(ParseStr.S_MASTER, $1); }
	|		suspend							{ $$ = $1; }
	|		resume							{ $$ = $1; }
	|		SUBMITCOUNT '=' integer					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		with_group						{ $$ = $1; }
	|		CONDITION '=' STRING					{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }
	|		ct_warn_nowarn						{ $$ = $1; }
			//D:DEFAULT
	|		CONDITION '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		CHECK '=' period					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		EVENT '=' '(' ct_eventlist ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		GROUP EVENT						{ $$ = new WithItem(ParseStr.S_ISGROUPED, Boolean.TRUE); }
			//D:DEFAULT
	|		SINGLE EVENT						{ $$ = new WithItem(ParseStr.S_ISGROUPED, Boolean.FALSE); }
	|		active							{ $$ = new WithItem(ParseStr.S_ACTIVE, $1); }
	|		PARENT folderpath					{ $$ = new WithItem(ParseStr.map($1.token), $2); }
			//D:DEFAULT
	|		PARENT NONE						{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		MAIN folderpath						{ $$ = new WithItem(ParseStr.map($1.token), $2); }
			//D:DEFAULT
	|		MAIN NONE						{ $$ = new WithItem(ParseStr.map($1.token), null); }
			//D:DEFAULT
	|		LIMIT STATUS '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		LIMIT STATUS '=' statusname				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
			//D:DEFAULT
	|		PARAMETERS '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		PARAMETERS '=' '(' ct_parmlist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }

ct_parmlist:		ct_parm							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		ct_parmlist ',' ct_parm					{ $1.addItem($3); }

ct_parm:		stridentifier '=' expression				{ $$ = new WithItem($1, $3); }

opt_ival_inverse:								{ $$ = new WithItem(ParseStr.S_INVERSE, Boolean.FALSE); }
	|		ival_inverse						{ $$ = $1; }

ct_warn_nowarn:		NOWARN							{ $$ = new WithItem(ParseStr.S_WARN, Boolean.FALSE); }
	|		WARN							{ $$ = new WithItem(ParseStr.S_WARN, Boolean.TRUE); }

type_is:
	|		TYPE '='

ct_jobstatuslist:	statusname						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		ct_jobstatuslist ',' statusname				{ $1.addElement($3); }

//D:LINEBREAK
ct_rscstatuslist: 	ct_rscstatusitem 					{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		ct_rscstatuslist ',' ct_rscstatusitem 			{ $1.addElement($3); }

ct_rscstatusitem:	statusname ANY						{ $$ = new WithItem($1,null); }
	|		statusname statusname					{ $$ = new WithItem($1, $2); }
	|		ANY statusname						{ $$ = new WithItem(null, $2); }

ct_triggertype:		IMMEDIATE_LOCAL						{ $$ = SDMSTrigger.map($1.token); }
	|		IMMEDIATE_MERGE						{ $$ = SDMSTrigger.map($1.token); }
	|		BEFORE_FINAL						{ $$ = SDMSTrigger.map($1.token); }
	|		AFTER_FINAL						{ $$ = SDMSTrigger.map($1.token); }
	|		FINISH_CHILD						{ $$ = SDMSTrigger.map($1.token); }
	|		UNTIL_FINISHED						{ $$ = SDMSTrigger.map($1.token); }
	|		UNTIL_FINAL						{ $$ = SDMSTrigger.map($1.token); }
	|		WARNING							{ $$ = SDMSTrigger.map($1.token); }

ct_eventlist:		ct_event						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		ct_eventlist ',' ct_event				{ $1.addElement($3); }

ct_event:		CREATE							{ $$ = SDMSTrigger.map($1.token); }
	|		CHANGE							{ $$ = SDMSTrigger.map($1.token); }
	|		DELETE							{ $$ = SDMSTrigger.map($1.token); }

//D:MASTER
//D:NT-ALIAS = alter trigger
//D:NODEFAULTS
//D:PURPOSE P149
//D:DESCRIPTION alter_trigger.tex
alter_trigger:		alter trigger_url ct_withwith				{ $$ = new AlterTrigger($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = drop trigger
//D:PURPOSE P150
//D:DESCRIPTION drop_trigger.tex
drop_trigger:		drop trigger_url					{ $$ = new DropTrigger($2, $1); }

//D:MASTER
//D:NT-ALIAS = rename trigger
//D:PURPOSE P151
//D:DESCRIPTION rename_trigger.tex
rename_trigger:		RENAME trigger_url TO triggername			{ $$ = new RenameTrigger($2, $4); }

//D:MASTER
//D:NT-ALIAS = list trigger
//D:DESCRIPTION list_trigger.tex
//D:PURPOSE P152
list_trigger:		LIST TRIGGER optall					{ $$ = new ListTrigger((Vector) null, false, $3); } 
	|		LIST TRIGGER FOR folderpath optall			{ $$ = new ListTrigger($4, false, $5); }
	|		LIST TRIGGER OF folderpath optall			{ $$ = new ListTrigger($4, true, $5); }
	|		LIST TRIGGER FOR ct_object optall			{ $$ = new ListTrigger($4, $5); }

optall:										{ $$ = SDMSConstants.iZERO; }
	|		ALL							{ $$ = SDMSConstants.iZERO; }
	|		LIMIT integer						{ $$ = $2; }

//D:MASTER
//D:NT-ALIAS = show trigger
//D:DESCRIPTION show_trigger.tex
//D:PURPOSE P153
show_trigger:		SHOW trigger_url					{ $$ = new ShowTrigger($2); }

ct_withwith:		with ct_withlist					{ $$ = $2; }



//-----------------------------------------------------------------------------
// C O M M E N T S
//-----------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create comment
//D:PURPOSE P154
//D:DESCRIPTION create_comment.tex
create_comment:	create COMMENT ON objecturl cc_with			 	{ $$ = new CreateComment($4, $5, $1); }

//D:MASTER
//D:NT-ALIAS = alter comment
//D:NODEFAULTS
//D:PURPOSE P155
//D:DESCRIPTION alter_comment.tex
alter_comment:	alter COMMENT ON objecturl cc_with	 			{ $$ = new AlterComment($4, $5, $1); }

//D:MASTER
//D:NT-ALIAS = drop comment
//D:PURPOSE P156
//D:DESCRIPTION drop_comment.tex
drop_comment:	drop COMMENT ON objecturl					{ $$ = new DropComment($4, $1); }

//D:MASTER
//D:NT-ALIAS = show comment
//D:PURPOSE P172
//D:DESCRIPTION show_comment.tex
show_comment:	SHOW COMMENT ON objecturl					{ $$ = new ShowComment($4); }

cc_with:	with cc_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($2); }

cc_withitem:	URL '=' STRING							{ $$ = new WithItem(ParseStr.S_URL, $3.textValue); }
	|	cc_textlist							{ $$ = new WithItem(ParseStr.S_TEXT, $1); }

cc_textlist:	cc_textitem							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	cc_textlist ',' cc_textitem					{ $1.addElement($3); }

cc_textitem:	TAG '=' STRING ',' TEXT '=' STRING				{ $$ = new Vector(); $<Vector>$.addElement($3.textValue); $<Vector>$.addElement($7.textValue); }
	|	TAG '=' NONE ',' TEXT '=' STRING				{ $$ = new Vector(); $<Vector>$.addElement(null); $<Vector>$.addElement($7.textValue); }
	|	TEXT '=' STRING							{ $$ = new Vector(); $<Vector>$.addElement(null); $<Vector>$.addElement($3.textValue); }

//-----------------------------------------------------------------------------
// G R A N T S
//-----------------------------------------------------------------------------

//D:MASTER
//D:LEVEL professional
//D:NT-ALIAS = grant
//D:PURPOSE P157
//D:DESCRIPTION grant.tex
grant_cmd:	GRANT privilege_list ON objecturl TO us_grlist gr_cascforce		{ $$ = new Grant(SDMSGrant.GRANT, $2, $4, $6, $7, Boolean.FALSE); }
	|	GRANT privilege_list ON CHILDREN OF objecturl TO us_grlist gr_cascforce	{ $$ = new Grant(SDMSGrant.GRANT, $2, $6, $8, $9, Boolean.TRUE); }
	|	GRANT MANAGE sys_object TO us_grlist					{ $$ = new Grant(SDMSGrant.GRANT, $3.token, $5); }
	|	GRANT MANAGE_SELECT TO us_grlist					{ $$ = new Grant(SDMSGrant.GRANT, $2.token, $4); }

//D:MASTER
//D:LEVEL professional
//D:NT-ALIAS = revoke
//D:PURPOSE P158
//D:DESCRIPTION revoke.tex
revoke_cmd:	REVOKE privilege_list ON objecturl FROM us_grlist gr_cascforce		{ $$ = new Grant(SDMSGrant.REVOKE, $2, $4, $6, $7, Boolean.FALSE); }
	|	REVOKE privilege_list ON CHILDREN OF objecturl FROM us_grlist gr_cascforce	{ $$ = new Grant(SDMSGrant.REVOKE, $2, $6, $8, $9, Boolean.TRUE); }
	|	REVOKE MANAGE sys_object FROM us_grlist					{ $$ = new Grant(SDMSGrant.REVOKE, $3.token, $5); }
	|	REVOKE MANAGE_SELECT FROM us_grlist					{ $$ = new Grant(SDMSGrant.REVOKE, $2.token, $4); }

//D:MASTER
//D:LEVEL professional
//D:NT-ALIAS = list grant
//D:PURPOSE P159
//D:DESCRIPTION list_grant.tex
list_grant:	LIST GRANT ON objecturl						{ $$ = new ListGrant($4); }
	|	LIST GRANT FOR groupname					{ $$ = new ListGrant($4); }

privilege:	basic_priv							{ $$ = $1; }
	|	operate_priv							{ $$ = $1; }

basic_priv:	VIEW								{ $$ = SDMSPrivilege.map($1.token); }
	|	USE								{ $$ = SDMSPrivilege.map($1.token); }
	|	EDIT								{ $$ = SDMSPrivilege.map($1.token); }
	|	DROP								{ $$ = SDMSPrivilege.map($1.token); }
	|	SUBMIT								{ $$ = SDMSPrivilege.map($1.token); }
	|	CREATE CONTENT							{ $$ = SDMSPrivilege.map($1.token); }
	|	MONITOR								{ $$ = SDMSPrivilege.map($1.token); }
	|	OPERATE								{ $$ = SDMSPrivilege.map($1.token); }
	|	APPROVE								{ $$ = SDMSPrivilege.map($1.token); }
	|	RESOURCE							{ $$ = SDMSPrivilege.map($1.token); }
	|	EXECUTE								{ $$ = SDMSPrivilege.map($1.token); }

operate_priv:	CANCEL								{ $$ = SDMSPrivilege.map($1.token); }
	|	RERUN								{ $$ = SDMSPrivilege.map($1.token); }
	|	ENABLE								{ $$ = SDMSPrivilege.map($1.token); }
	|	SET STATUS							{ $$ = SDMSPrivilege.map($2.token); }
	|	IGNORE_DEPENDENCY						{ $$ = SDMSPrivilege.map(DEPENDENCY); }
	|	IGNORE RESOURCE							{ $$ = SDMSPrivilege.map($1.token); }
	|	CLONE								{ $$ = SDMSPrivilege.map($1.token); }
	|	SUSPEND								{ $$ = SDMSPrivilege.map($1.token); }
	|	CLEAR WARNING							{ $$ = SDMSPrivilege.map($2.token); }
	|	PRIORITY							{ $$ = SDMSPrivilege.map($1.token); }
	|	EDIT PARAMETERS							{ $$ = SDMSPrivilege.map($2.token); }	
	|	KILL								{ $$ = SDMSPrivilege.map($1.token); }
	|	SET JOB_STATUS							{ $$ = SDMSPrivilege.map($2.token); }

privilege_list:	privilege							{ $$ = $1; }
	|	privilege_list ',' privilege					{ $$ = Long.valueOf($1.longValue() | $3.longValue()); }

gr_cascforce:									{ $$ = null; }
	|	CASCADE								{ $$ = Boolean.TRUE; }
	|	FORCE								{ $$ = Boolean.FALSE; }


//-----------------------------------------------------------------------------
// P O O L S
//-----------------------------------------------------------------------------

//D:MASTER
//D:LEVEL enterprise
//D:NT-ALIAS = create pool
//D:PURPOSE P173
//D:DESCRIPTION create_pool.tex
create_pool:	create pool_url with cpl_withlist				{ $$ = new CreatePool($2, $4, $1); }

//D:MASTER
//D:LEVEL enterprise
//D:NT-ALIAS = alter pool
//D:PURPOSE P174
//D:DESCRIPTION alter_pool.tex
alter_pool:	alter pool_url with cpl_withlist				{ $$ = new AlterPool($2, $4, $1); }
	|	alter pool_url ACTIVATE DISTRIBUTION distname			{ $$ = new ActivateDistribution($2, $5, $1); }

//D:MASTER
//D:LEVEL enterprise
//D:NT-ALIAS = drop pool
//D:PURPOSE P175
//D:DESCRIPTION drop_pool.tex
drop_pool:	drop pool_url							{ $$ = new DropPool($2, $1); }

//D:MASTER
//D:LEVEL enterprise
//D:NT-ALIAS = show pool
//D:PURPOSE P176
//D:DESCRIPTION show_pool.tex
show_pool:	SHOW pool_url			 				{ $$ = new ShowPool($2); }

//D:MASTER
//D:LEVEL enterprise
//D:NT-ALIAS = list pool
//D:PURPOSE P177
//D:DESCRIPTION list_pool.tex
list_pool:	LIST POOL 							{ $$ = new ListPool(); }

//D:MASTER
//D:LEVEL enterprise
//D:NT-ALIAS = move pool
//D:PURPOSE P178
//D:DESCRIPTION move_pool.tex
move_pool:	MOVE pool_url TO serverpath					{ $$ = new MovePool($2, $4); }


cpl_withlist:	cpl_withitem							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	cpl_withlist ',' cpl_withitem					{ $1.addItem($3); }

cpl_withitem:	AMOUNT '=' integer						{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	CYCLE '=' opt_integer						{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	with_group							{ $$ = $1; }
	|	RESOURCE '=' '(' cpl_resourcelist ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	//D:DEFAULT
	|	RESOURCE '=' NONE						{ $$ = new WithItem(ParseStr.map($1.token), new Vector()); }
		//D:DEFAULT
	|	TAG '=' NONE							{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|	TAG '=' STRING							{ $$ = new WithItem(ParseStr.map($1.token), $3.value); }
		//D:DEFAULT
	|	TRACE INTERVAL '=' opt_integer					{ $$ = new WithItem(ParseStr.map($1.token), $4); }
		//D:DEFAULT
	|	TRACE BASE '=' opt_integer					{ $$ = new WithItem(ParseStr.map($2.token), $4); }
	|	BASE MULTIPLIER '=' integer					{ $$ = new WithItem(ParseStr.map($2.token), $4); }


cpl_resourcelist: cpl_resource							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	cpl_resourcelist ',' cpl_resource				{ $1.addElement($3); }

cpl_resource:	cpl_res_item							{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|	cpl_resource cpl_res_item					{ $1.addItem($2); }

cpl_res_item:	FREEPCT '=' integer						{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	resource_url							{ $$ = new WithItem(ParseStr.S_RESOURCE, $1); }
	|	pool_url							{ $$ = new WithItem(ParseStr.S_RESOURCE, $1); }
	|	MINPCT '=' integer						{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	MAXPCT '=' integer						{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	NOMINALPCT '=' integer						{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|	cpl_managed							{ $$ = $1; }

cpl_managed:	MANAGED								{ $$ = new WithItem(ParseStr.map($1.token), Boolean.TRUE); }
	|	NOT MANAGED							{ $$ = new WithItem(ParseStr.map($2.token), Boolean.FALSE); }



//-----------------------------------------------------------------------------
// P O O L - D I S T R I B U T I O N S
//-----------------------------------------------------------------------------

//D:MASTER
//D:LEVEL enterprise
//D:NT-ALIAS = create distribution
//D:PURPOSE P179
//D:DESCRIPTION create_dist.tex
create_dist:	create dist_url with cd_with					{ $$ = new CreateDistribution($2, $4, $1); }

//D:MASTER
//D:LEVEL enterprise
//D:NT-ALIAS = alter distribution
//D:PURPOSE P180
//D:DESCRIPTION alter_dist.tex
alter_dist:	alter dist_url with cd_with					{ $$ = new AlterDistribution($2, $4, $1); }

//D:MASTER
//D:LEVEL enterprise
//D:NT-ALIAS = drop distribution
//D:PURPOSE P181
//D:DESCRIPTION drop_dist.tex
drop_dist:	drop dist_url							{ $$ = new DropDistribution($2, $1); }

//D:MASTER
//D:LEVEL enterprise
//D:NT-ALIAS = show distribution
//D:PURPOSE P182
//D:DESCRIPTION show_dist.tex
show_dist:	SHOW dist_url			 				{ $$ = new ShowDistribution($2); }

//D:MASTER
//D:LEVEL enterprise
//D:NT-ALIAS = rename distribution
//D:PURPOSE P183
//D:DESCRIPTION rename_dist.tex
rename_dist:	RENAME dist_url TO distname	 				{ $$ = new RenameDistribution($2, $4); }

//D:MASTER
//D:LEVEL enterprise
//D:NT-ALIAS = copy distribution
//D:PURPOSE P184
//D:DESCRIPTION copy_dist.tex
copy_dist:	COPY dist_url TO distname					{ $$ = new CopyDistribution($2, $4); }


cd_with:	RESOURCE '=' '(' cpl_resourcelist ')'				{ $$ = $4; }
	|	RESOURCE '=' NONE						{ $$ = new Vector(); }

// -----------------------------------------------------------------------------------
//     W A T C H   T Y P E
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create watch type
//D:LEVEL professional
//D:PURPOSE P188
//D:DESCRIPTION create_watch_type.tex
create_wt:		create WATCH TYPE watchtypename wt_with_clause
										{ $$ = new CreateWt($4, $5, $1); }

//D:MASTER
//D:NT-ALIAS = drop watch type
//D:LEVEL professional
//D:PURPOSE P189
//D:DESCRIPTION drop_watch_type.tex
drop_wt:		drop wt_url						{ $$ = new DropWt($2, $1); }

//D:MASTER
//D:NT-ALIAS = alter watch type
//D:LEVEL professional
//D:NODEFAULTS
//D:PURPOSE P190
//D:DESCRIPTION alter_watch_type.tex
alter_wt:		alter wt_url wt_with_clause
										{ $$ = new AlterWt($2, $3, $1); }

//D:MASTER
//D:NT-ALIAS = rename watch type
//D:LEVEL professional
//D:PURPOSE P191
//D:DESCRIPTION rename_watch_type.tex
rename_wt:		RENAME wt_url TO watchtypename
										{ $$ = new RenameWt($2, $4); }

//D:MASTER
//D:NT-ALIAS = list watch type
//D:LEVEL professional
//D:DESCRIPTION list_watch_type.tex
//D:PURPOSE P192
list_wt:		LIST WATCH TYPE						{ $$ = new ListWt(); }

//D:MASTER
//D:NT-ALIAS = show watch type
//D:LEVEL professional
//D:DESCRIPTION show_watch_type.tex
//D:PURPOSE P193
show_wt:		SHOW wt_url				 		{ $$ = new ShowWt($2); }

wt_with_clause:		with wt_withitemlist					{ $$ = $2; }

wt_withitemlist:	wt_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		wt_withitemlist ',' wt_withitem				{ $1.addItem($3); }

//D:NT-ALIAS = withitem
			//D:OPTION parameter
wt_withitem:		PARAMETERS '=' '(' wt_parameterlist ')'				{ $$ = new WithItem(ParseStr.map($1.token), $4); }

//D:NT-ALIAS = parameterlist
wt_parameterlist:	wt_parameteritem						{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|		wt_parameterlist ',' wt_parameteritem				{ $1.addElement($3); }

//D:NT-ALIAS = parameterspec
wt_parameteritem:	wt_parametertype parametername wt_parameterdefault wt_submitpar { $$ = new Vector();
											$<Vector>$.addElement($1);
											$<Vector>$.addElement($2);
											$<Vector>$.addElement($3);
											$<Vector>$.addElement($4);
											} 

wt_submitpar:		                               		       			{ $$ = Boolean.FALSE; }
	|		SUBMIT								{ $$ = Boolean.TRUE; }

wt_parameterdefault:									{ $$ = null; }
	|		'=' STRING							{ $$ = $2.textValue; }

wt_parametertype:	CONFIG								{ $$ = ParseStr.map($1.token); }
	|		VALUE								{ $$ = ParseStr.map($1.token); }
	|		INFO								{ $$ = ParseStr.map($1.token); }



// -----------------------------------------------------------------------------------
//     O B J E C T   T Y P E
// -----------------------------------------------------------------------------------

//D:MASTER
//D:NT-ALIAS = create object monitor
//D:LEVEL professional
//D:PURPOSE P194
//D:DESCRIPTION create_object_monitor.tex
create_om:		create OBJECT MONITOR objecttypename wt_url om_with_clause
										{ $$ = new CreateObjectMonitor($4, $5, $6, $1); }

//D:MASTER
//D:NT-ALIAS = drop object monitor
//D:LEVEL professional
//D:PURPOSE P195
//D:DESCRIPTION drop_object_monitor.tex
drop_om:		drop om_url						{ $$ = new DropObjectMonitor($2, $1); }

//D:MASTER USER NOSERVER NOJOB
//D:NT-ALIAS = alter object monitor
//D:LEVEL professional
//D:NODEFAULTS
//D:PURPOSE P196
//D:DESCRIPTION alter_object_monitor.tex
alter_om:		alter om_url aom_with_clause				{ $$ = new AlterObjectMonitor($2, $3, $1); }

//D:MASTER NOUSER NOSERVER JOB
//D:NT-ALIAS = alter object monitor
//D:LEVEL professional
//D:NODEFAULTS
//D:PURPOSE P201
//D:DESCRIPTION alter_object_monitor.tex
alter_omj:		alter om_url INSTANCE '=' '(' opt_om_instancelist ')'	{ $$ = new AlterObjectMonitor($2, $6, $1, true); }

//D:MASTER
//D:NT-ALIAS = rename object monitor
//D:LEVEL professional
//D:PURPOSE P197
//D:DESCRIPTION rename_object_monitor.tex
rename_om:		RENAME om_url TO objecttypename
										{ $$ = new RenameObjectMonitor($2, $4); }

//D:MASTER JOB USER NOSERVER
//D:NT-ALIAS = list object monitor
//D:LEVEL professional
//D:DESCRIPTION list_object_monitor.tex
//D:PURPOSE P198
list_om:		LIST OBJECT MONITOR					{ $$ = new ListObjectMonitor(); }

//D:MASTER JOB USER NOSERVER
//D:NT-ALIAS = show object monitor
//D:LEVEL professional
//D:DESCRIPTION show_object_monitor.tex
//D:PURPOSE P199
show_om:		SHOW om_url				 		{ $$ = new ShowObjectMonitor($2); }

om_with_clause:		with om_withitemlist					{ $$ = $2; }

om_withitemlist:	om_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		om_withitemlist ',' om_withitem				{ $1.addItem($3); }

aom_with_clause:	with aom_withitemlist					{ $$ = $2; }

aom_withitemlist:	aom_withitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		aom_withitemlist ',' aom_withitem			{ $1.addItem($3); }

			//D:NT-ALIAS = withitem
			//D:OPTION parameter
om_withitem:		WATCHER '=' folderpath					{ $$ = new WithItem(ParseStr.map($1.token), $3); }
	|		WATCHER '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }
	|		PARAMETERS '=' '(' om_parameterlist ')'			{ $$ = new WithItem(ParseStr.map($1.token), $4); }
	|		RECREATE '=' om_recreate				{ $$ = new WithItem(ParseStr.map($1.token), $3); }
			//D:OPTION group
	|		with_group						{ $$ = $1; }
	|		DELETE om_period					{ $$ = new WithItem(ParseStr.map($1.token), $2); }
	|		EVENT DELETE om_period					{ $$ = new WithItem(ParseStr.map($1.token), $3); }

om_period:		AFTER period						{ $$ = $2; }
			//D:DEFAULT
	|		NONE							{ $$ = null; }

			//D:NT-ALIAS = withitem
aom_withitem:		om_withitem						{ $$ = $1; }
	|		INSTANCE '=' '(' opt_om_instancelist ')'		{ $$ = new WithItem(ParseStr.map($1.token), $4); }

//D:NT-ALIAS = parameterlist
om_parameterlist:	om_parameteritem					{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		om_parameterlist ',' om_parameteritem			{ $1.addItem($3); }

//D:NT-ALIAS = parameterspec
om_parameteritem:	parametername '=' STRING	 			{ $$ = new WithItem($1, $3.textValue); }
	|		parametername '=' DEFAULT	 			{ $$ = new WithItem($1, null); }

om_recreate:		NONE							{ $$ = SDMSConstants.OM_NONE;   }
			//D:DEFAULT
	|		CREATE							{ $$ = SDMSConstants.OM_CREATE; }
	|		CHANGE							{ $$ = SDMSConstants.OM_CHANGE; }


//D:NT-ALIAS = instancelist
opt_om_instancelist:								{ $$ = new WithHash(); }
	|		om_instancelist						{ $$ = $1; }

//D:NT-ALIAS = instancelist
om_instancelist:	om_instanceitem						{ $$ = new WithHash(); $<WithHash>$.addItem($1); }
	|		om_instancelist ',' om_instanceitem			{ $1.addItem($3); }

//D:NT-ALIAS = instanceitem
om_instanceitem:	instancename '(' om_parameterlist ')'			{ $$ = new WithItem($1, $3); }
	|		instancename						{ $$ = new WithItem($1, null); }

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------


//D:NT-ALIAS = objecturl
restrict_url:	dist_url							{ $$ = $1; }
	|	env_url								{ $$ = $1; }
	|	esd_url								{ $$ = $1; }
	|	esm_url								{ $$ = $1; }
	|	esp_url								{ $$ = $1; }
	|	est_url								{ $$ = $1; }
	|	event_url							{ $$ = $1; }
	|	folder_url							{ $$ = $1; }
	|	fp_url								{ $$ = $1; }
	|	group_url							{ $$ = $1; }
	|	interval_url							{ $$ = $1; }
	|	jobdef_url							{ $$ = $1; }
		//D:LEVEL enterprise
	|	np_url								{ $$ = $1; }
	|	nr_url								{ $$ = $1; }
		//D:LEVEL professional
	|	om_url								{ $$ = $1; }
		//D:LEVEL enterprise
	|	pool_url							{ $$ = $1; }
	|	resource_url							{ $$ = $1; }
	|	rsd_url								{ $$ = $1; }
	|	rsm_url								{ $$ = $1; }
	|	rsp_url								{ $$ = $1; }
	|	schedule_url							{ $$ = $1; }
	|	scheduledevent_url						{ $$ = $1; }
	|	scope_url							{ $$ = $1; }
	|	trigger_url							{ $$ = $1; }
	|	user_url							{ $$ = $1; }
		//D:LEVEL professional
	|	wt_url								{ $$ = $1; }

dump_objecturl:	restrict_url							{ $$ = $1; }
	|	all_dump_url							{ $$ = $1; }

objecturl:	restrict_url							{ $$ = $1; }
	|	job_url								{ $$ = $1; }
	|	parameter_url							{ $$ = $1; }

all_dump_url:	objecttype ALL							{ $$ = new ObjectURL($1.token); }

objecttype:	DISTRIBUTION							{ $$ = $1; }
	|	ENVIRONMENT							{ $$ = $1; }
	|	EXIT_STATUS_DEFINITION						{ $$ = $1; }
	|	EXIT_STATUS_MAPPING						{ $$ = $1; }
	|	EXIT_STATUS_PROFILE						{ $$ = $1; }
	|	EXIT_STATUS_TRANSLATION						{ $$ = $1; }
	|	EVENT								{ $$ = $1; }
	|	FOLDER								{ $$ = $1; }
	|	FOOTPRINT							{ $$ = $1; }
	|	GRANT								{ $$ = $1; }
	|	GROUP								{ $$ = $1; }
	|	INTERVAL							{ $$ = $1; }
	|	JOB_DEFINITION							{ $$ = $1; }
	|	NAMED_RESOURCE							{ $$ = $1; }
		//D:LEVEL enterprise
	|	NICE_PROFILE							{ $$ = $1; }
		//D:LEVEL professional
	|	OBJECT MONITOR							{ $$ = $1; }
		//D:LEVEL enterprise
	|	POOL								{ $$ = $1; }
	|	RESOURCE							{ $$ = $1; }
	|	RESOURCE_TEMPLATE						{ $$ = $1; }
	|	RESOURCE_STATUS_DEFINITION					{ $$ = $1; }
	|	RESOURCE_STATUS_MAPPING						{ $$ = $1; }
	|	RESOURCE_STATUS_PROFILE						{ $$ = $1; }
	|	SCOPE								{ $$ = $1; }
	|	SCHEDULED_EVENT							{ $$ = $1; }
	|	SCHEDULE							{ $$ = $1; }
	|	TRIGGER								{ $$ = $1; }
	|	USER								{ $$ = $1; }
		//D:LEVEL professional
	|	WATCH TYPE							{ $$ = $1; }
	|	COMMENT								{ $$ = $1; }

sys_object:	ENVIRONMENT							{ $$ = $1; }
	|	EXIT_STATUS_DEFINITION						{ $$ = $1; }
	|	EXIT_STATUS_MAPPING						{ $$ = $1; }
	|	EXIT_STATUS_PROFILE						{ $$ = $1; }
	|	EXIT_STATUS_TRANSLATION						{ $$ = $1; }
	|	FOOTPRINT							{ $$ = $1; }
	|	GROUP								{ $$ = $1; }
	|	NICE_PROFILE							{ $$ = $1; }
	|	RESOURCE_STATUS_DEFINITION					{ $$ = $1; }
	|	RESOURCE_STATUS_MAPPING						{ $$ = $1; }
	|	RESOURCE_STATUS_PROFILE						{ $$ = $1; }
	|	SYSTEM								{ $$ = $1; }
	|	USER								{ $$ = $1; }
	|	WATCH TYPE							{ $$ = $1; }


dist_url:	DISTRIBUTION distname FOR pool_url				{ $$ = new ObjectURL($1.token, $2, $4); }
		//D:SUPPRESS
	|	DISTRIBUTION id							{ $$ = new ObjectURL($1.token, $2); }

env_url:	ENVIRONMENT environmentname					{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	ENVIRONMENT id							{ $$ = new ObjectURL($1.token, $2); }

esd_url:	EXIT_STATUS_DEFINITION statusname				{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	EXIT_STATUS_DEFINITION id					{ $$ = new ObjectURL($1.token, $2); }

esm_url:	EXIT_STATUS_MAPPING mappingname					{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	EXIT_STATUS_MAPPING id						{ $$ = new ObjectURL($1.token, $2); }

esp_url:	EXIT_STATUS_PROFILE profilename					{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	EXIT_STATUS_PROFILE id						{ $$ = new ObjectURL($1.token, $2); }

est_url:	EXIT_STATUS_TRANSLATION transname				{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	EXIT_STATUS_TRANSLATION id					{ $$ = new ObjectURL($1.token, $2); }

event_url:	EVENT eventname							{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	EVENT eventname '(' se_spec ')'					{ $$ = new ObjectURL($1.token, $2, $4); }
		//D:SUPPRESS
	|	EVENT id							{ $$ = new ObjectURL($1.token, $2); }

folder_url:	FOLDER folderpath						{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	FOLDER id							{ $$ = new ObjectURL($1.token, $2); }

fp_url: 	FOOTPRINT footprintname						{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	FOOTPRINT id							{ $$ = new ObjectURL($1.token, $2); }

group_url:	GROUP groupname							{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	GROUP id							{ $$ = new ObjectURL($1.token, $2); }

interval_url:	INTERVAL intervalname						{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	INTERVAL intervalname '(' se_spec ')'				{ $$ = new ObjectURL($1.token, $2, $4); }
		//D:SUPPRESS
	|	INTERVAL id							{ $$ = new ObjectURL($1.token, $2); }

job_url:	JOB jobid							{ $$ = new ObjectURL($1.token, $2); }

jobdef_url:	JOB_DEFINITION folderpath					{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	JOB_DEFINITION id						{ $$ = new ObjectURL($1.token, $2); }

nr_url:		NAMED_RESOURCE resourcepath					{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	NAMED_RESOURCE id						{ $$ = new ObjectURL($1.token, $2); }

np_url:		NICE_PROFILE profilename					{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	NICE_PROFILE id							{ $$ = new ObjectURL($1.token, $2); }

om_url:	OBJECT MONITOR objecttypename						{ $$ = new ObjectURL($1.token, $3); }
		//D:SUPPRESS
	|	OBJECT MONITOR id						{ $$ = new ObjectURL($1.token, $3); }

parameter_url:	PARAMETERS parametername OF param_loc				{ $$ = new ObjectURL($1.token, $2, $4); }
		//D:SUPPRESS
	|	PARAMETERS id							{ $$ = new ObjectURL($1.token, $2); }

param_loc:	jobdef_url							{ $$ = $1; }
	|	folder_url							{ $$ = $1; }
	|	scope_url							{ $$ = $1; }
	|	nr_url								{ $$ = $1; }

pool_url:	POOL resourcepath IN serverpath					{ $$ = new ObjectURL($1.token, $2, new ObjectURL(ParseStr.I_SCOPE, $4)); }
		//D:SUPPRESS
	|	POOL id								{ $$ = new ObjectURL($1.token, $2); }

resource_url:	scoperesource_url						{ $$ = $1; }
	|	folderresource_url						{ $$ = $1; }
		//D:SUPPRESS
	|	RESOURCE id							{ $$ = new ObjectURL($1.token, $2); }

scoperesource_url:	RESOURCE resourcepath IN serverpath			{ $$ = new ObjectURL($1.token, $2, new ObjectURL(ParseStr.I_SCOPE, $4)); }
folderresource_url:	RESOURCE resourcepath IN folderpath			{ $$ = new ObjectURL($1.token, $2, new ObjectURL(ParseStr.I_FOLDER, $4)); }

rsd_url:	RESOURCE_STATUS_DEFINITION statusname				{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	RESOURCE_STATUS_DEFINITION id					{ $$ = new ObjectURL($1.token, $2); }

rsm_url:	RESOURCE_STATUS_MAPPING mappingname				{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	RESOURCE_STATUS_MAPPING id					{ $$ = new ObjectURL($1.token, $2); }

rsp_url:	RESOURCE_STATUS_PROFILE profilename				{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	RESOURCE_STATUS_PROFILE id					{ $$ = new ObjectURL($1.token, $2); }

scope_url:	SCOPE serverpath						{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	SCOPE id							{ $$ = new ObjectURL($1.token, $2); }
	|	JOB_SERVER serverpath						{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	JOB_SERVER id							{ $$ = new ObjectURL($1.token, $2); }


scheduledevent_url:	SCHEDULED_EVENT schedulepath '.' eventname		{ $2.addElement($4); $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	SCHEDULED_EVENT schedulepath '.' eventname '(' se_spec ')'	{ $2.addElement($4); $$ = new ObjectURL($1.token, $2, $6); }
		//D:SUPPRESS
	|	SCHEDULED_EVENT id						{ $$ = new ObjectURL($1.token, $2); }

schedule_url:	SCHEDULE schedulepath 						{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	SCHEDULE schedulepath '(' se_spec ')'				{ $$ = new ObjectURL($1.token, $2, $4); }
		//D:SUPPRESS
	|	SCHEDULE id							{ $$ = new ObjectURL($1.token, $2); }

trigger_url:	TRIGGER triggername ON t_url opt_ival_inverse			{ $$ = new ObjectURL($1.token, $2, $4, $5); }
		//D:SUPPRESS
	|	TRIGGER id							{ $$ = new ObjectURL($1.token, $2); }

//D:NT-ALIAS = triggerobject
t_url:		jobdef_url							{ $$ = $1; }
	|	nr_url								{ $$ = $1; }
	|	resource_url							{ $$ = $1; }
	|	om_url								{ $$ = $1; }

user_url:	USER username							{ $$ = new ObjectURL($1.token, $2); }
		//D:SUPPRESS
	|	USER id								{ $$ = new ObjectURL($1.token, $2); }

wt_url:	WATCH TYPE watchtypename						{ $$ = new ObjectURL($1.token, $3); }
		//D:SUPPRESS
	|	WATCH TYPE id							{ $$ = new ObjectURL($1.token, $3); }

se_spec:	jobid								{ $$ = new WithItem (null, $1); }
	|	folderpath '.' jobname						{ $$ = new WithItem ($1,   $3); }

with_group:	GROUP '=' groupname						{ $$ = new WithItem(ParseStr.map($1.token), $3); }

with_inherit_grant:	INHERIT GRANT '=' '(' privilege_list ')'		{ $$ = new WithItem(ParseStr.map($1.token), $5); }
	|		INHERIT GRANT '=' NONE					{ $$ = new WithItem(ParseStr.map($1.token), null); }

list:		LIST								{ $$ = Boolean.FALSE; }
	|	LIST CONDENSED							{ $$ = Boolean.TRUE; }

show:		SHOW								{ $$ = Boolean.FALSE; }
	|	SHOW CONDENSED							{ $$ = Boolean.TRUE; }

		//D:DEFAULT
lockmode:	N								{ $$ = ParseStr.I_LM_N; }
	|	S								{ $$ = ParseStr.I_LM_S; }
	|	SX								{ $$ = ParseStr.I_LM_SX; }
	|	SC								{ $$ = ParseStr.I_LM_SC; }
	|	X								{ $$ = ParseStr.I_LM_X; }

//D:NT=PARM
period:	integer baseinterval							{ $$ = new WithHash();
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_MULT, $1));
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_INTERVAL, $2));
										}
	| baseinterval								{ $$ = new WithHash();
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_MULT, PLUS_ONE));
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_INTERVAL, $1));
										}

//D:NT=PARM
signed_period_rj:	signed_integer baseinterval 				{ $$ = new WithHash();
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_MULT, $1));
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_INTERVAL, $2));
										}
	| baseinterval 								{ $$ = new WithHash();
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_MULT, PLUS_ONE));
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_INTERVAL, $1));
										}
//D:NT=PARM
signed_period:	signed_integer baseinterval opt_ignore				{ $$ = new WithHash();
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_MULT, $1));
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_INTERVAL, $2));
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_IGNORE, $3));
										}
	| baseinterval opt_ignore						{ $$ = new WithHash();
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_MULT, PLUS_ONE));
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_INTERVAL, $1));
										  $<WithHash>$.addItem(new WithItem(ParseStr.S_IGNORE, $2));
										}

opt_ignore:									{ $$ = Boolean.FALSE; }
	| IGNORE ON RERUN							{ $$ = Boolean.TRUE; }

opt_period:	period								{ $$ = $1; }
		//D:DEFAULT
	|	NONE								{ $$ = null; }

//
//	create or alter:
//	false: don't replace
//	true : replace if exists
//
create:		CREATE								{ $$ = Boolean.FALSE; inStatement = true; }
	|	CREATE OR ALTER							{ $$ = Boolean.TRUE; inStatement = true; }

//
//	alter existing:
//	false: not found = error
//	true:  ignore if not found	
alter:		ALTER								{ $$ = Boolean.FALSE; inStatement = true; }
	|	ALTER EXISTING							{ $$ = Boolean.TRUE; inStatement = true; }

//
//	drop existing:
//	false: not found = error
//	true:  ignore if not found
drop:		DROP								{ $$ = Boolean.FALSE; inStatement = true; }
	|	DROP EXISTING							{ $$ = Boolean.TRUE; inStatement = true; }

//D:NT=PARM
aliasname:	stridentifier							{ $$ = $1; }

//D:NT=PARM
//D:NT-ALIAS = datetime
sdatetime:	STRING								{ try {
											new DateTime ($1.textValue);
										  }
										  catch (final SDMSEscape e) {
											yyerror ("$1\nInvalid DATETIME: $2", new String[] {e.getMessage()});
											$$ = null;
										  }
										  // Date Time seems to be valid, we return the string value
										  $$ = $1.textValue;
										}
//D:NT=PARM
datetime:	STRING								{ try {
											$$ = new DateTime ($1.textValue);
										  }
										  catch (final SDMSEscape e) {
											yyerror ("$1\nInvalid DATETIME: $2", new String[] {e.getMessage()});
											$$ = null;
										  }
										}
//D:NT=PARM
//D:NT-ALIAS = datetime
datetime_notz:	STRING								{ try {
											$$ = new DateTime ($1.textValue, !DateTime.IS_DURATION, true /* ignore tz */);
										  }
										  catch (final SDMSEscape e) {
											yyerror ("$1\nInvalid DATETIME: $2", new String[] {e.getMessage()});
											$$ = null;
										  }
										}

//D:NT=PARM
datetime_duration:	STRING							{ try {
											$$ = new DateTime ($1.textValue, DateTime.IS_DURATION);
										  }
										  catch (final SDMSEscape e) {
											yyerror ("$1\nInvalid DURATION: $2", new String[] {e.getMessage()});
											$$ = null;
										  }
										}

//D:NT=PARM
dependencyname:	stridentifier							{ $$ = $1; }

//D:NT=PARM
//D:NT-ALIAS = distributionname
distname:	stridentifier							{ $$ = $1; }

//D:NT=PARM
//D:NT-ALIAS = dumptype
dump_identifier:	identifier						{ $$ = $1; }
	|	RESOURCE							{ $$ = ParseStr.map($1.token); }
	|	RESOURCE_TEMPLATE						{ $$ = ParseStr.map($1.token); }
	|	NAMED_RESOURCE							{ $$ = ParseStr.map($1.token); }
	|	JOB_DEFINITION							{ $$ = ParseStr.map($1.token); }
	|	SCHEDULED_EVENT							{ $$ = ParseStr.map($1.token); }
	|	ALL								{ $$ = ParseStr.map($1.token); }

//D:NT=PARM
//D:NT-ALIAS = dumptype
dumptype:	dump_identifier							{ $$ = $1; }

//D:NT=PARM
//D:NT-ALIAS = rulename
rulename:	dump_identifier							{ $$ = $1; }

//D:NT=PARM
environmentname:	stridentifier						{ $$ = $1; }

//D:NT=PARM
eventname:	stridentifier							{ $$ = $1; }

//D:NT=PARM
footprintname:	stridentifier							{ $$ = $1; }

//D:NT=PARM
groupname:	stridentifier							{ $$ = $1; }

//D:NT=PARM
instancename:	STRING								{ $$ = $1.textValue; }

//D:NT=PARM
intervalname:	stridentifier							{ $$ = $1; }

cintervalname:	intervalname							{ $$ = $1; }
	|	'(' intervalname ival_with ')'					{ $$ = new CreateInterval($2, $3); }

//D:NT=PARM
jobname:	stridentifier							{ $$ = $1; }

//D:NT=PARM
mappingname:	stridentifier							{ $$ = $1; }

//D:NT=PARM
nodename:	STRING								{ $$ = $1.textValue; }

//D:NT=PARM
objecttypename:	stridentifier							{ $$ = $1; }

password:	PASSWORD '=' STRING						{ $$ = new WithItem (ParseStr.S_PASSWORD, $3.textValue); 
										  ConnectionEnvironment ce = getConnectionEnvironment();
										  if(ce != null) {
											((UserConnection) ce.getMe()).scanner.unproto_input($3.textValue); 
										  }
										}
	|	RAWPASSWORD '=' STRING						{
										  Vector v = new Vector();
										  v.addElement($3.textValue);	/* hashed password */
										  v.addElement(null);		/* no salt         */
										  $$ = new WithItem (ParseStr.S_RAWPASSWORD, v); 
										  ConnectionEnvironment ce = getConnectionEnvironment();
										  if(ce != null) {
											((UserConnection) ce.getMe()).scanner.unproto_input($3.textValue); 
										  }
										}
	|	RAWPASSWORD '=' STRING SALT '=' STRING				{
										  Vector v = new Vector();
										  v.addElement($3.textValue);	/* hashed password */
										  v.addElement($6.textValue);	/* salt            */
										  $$ = new WithItem (ParseStr.S_RAWPASSWORD, v); 
										  ConnectionEnvironment ce = getConnectionEnvironment();
										  if(ce != null) {
											((UserConnection) ce.getMe()).scanner.unproto_input($3.textValue); 
											((UserConnection) ce.getMe()).scanner.unproto_input($6.textValue); 
										  }
										}

//D:NT=PARM
parametername:	stridentifier							{ $$ = $1; }

//D:NT-ALIAS = parameterspec
parm_is_string: parametername '=' STRING					{ $$ = new WithItem($1, $3.textValue); 
										  if ($1.toUpperCase().equals(de.independit.scheduler.jobserver.Config.TRUSTSTOREPW) ||
										      $1.toUpperCase().equals(de.independit.scheduler.jobserver.Config.KEYSTOREPW)) {
										  	ConnectionEnvironment ce = getConnectionEnvironment();
										 	if(ce != null) {
												((UserConnection) ce.getMe()).scanner.unproto_input($3.textValue); 
										  	}

										  }
										}
	|	parametername '=' number					{ $$ = new WithItem($1, $3.toString()); }

//D:NT=PARM
profilename:	stridentifier							{ $$ = $1; }

//D:NT=PARM
rspname:	stridentifier							{ $$ = $1; }

//D:NT=PARM
rsmname:	stridentifier							{ $$ = $1; }

//D:NT=PARM
schedulename:	stridentifier							{ $$ = $1; }

//D:NT=PARM
servername:	stridentifier							{ $$ = $1; }

//D:NT=PARM
//D:NT-ALIAS = statename
statusname:	stridentifier							{ $$ = $1; }

//D:NT=PARM
transname:	stridentifier							{ $$ = $1; }

//D:NT=PARM
triggername:	stridentifier							{ $$ = $1; }

//D:NT=PARM
username:	stridentifier							{ $$ = $1; }
	|	SYSTEM								{ $$ = (String) $1.value; }

//D:NT=PARM
watchtypename:	stridentifier							{ $$ = $1; }

//D:NT=PARM
//D:NT-ALIAS = identifier
stridentifier:	identifier							{ $$ = $1; }
	|	STRING								{ if($1.textValue.length() == 0) {
											// Problem
											yyerror(ParseStr.S_SYNTAX_ERROR,new String[]{"NON EMPTY STRING"});
											$$ = null;
										  } else {
											// if it contains a forbidden char: invalid identifier
											final Matcher m = identifierPattern.matcher($1.textValue);
											if(!m.matches()) {
												yyerror(ParseStr.S_SYNTAX_ERROR,new String[]{"VALID IDENTIFIER"});
												$$ = null;
											} else {
												$$ = $1.textValue;
											}
										  }
										}

//D:NT=PARM
identifier:	IDENTIFIER							{ $$ = (String) $1.value; }
	|	keywords							{ $$ = $1; }

//D:NT-ALIAS = comparison operator
cmpop:		CMPOP								{ $$ = $1.textValue; }
	|	LIKE								{ $$ = ParseStr.S_LIKE; }
	|	NOT LIKE							{ $$ = ParseStr.S_NOTLIKE; }

//D:NT=PARM
pid:		STRING								{ $$ = $1.textValue; }
	|	integer								{ $$ = $1.toString(); }

//D:NT=PARM
sid:		integer								{ $$ = $1; }

//D:NT=PARM
jobid:		id								{ $$ = $1; }

//D:NT=PARM
id:		longg								{ $$ = $1; }

//D:NT=PARM
longg:		INTEGER								{ $$ = (Long) $1.value; }
	|	NAN								{ yyerror(ParseStr.S_SYNTAX_ERROR, new String[]{"VALID INTEGER (Integer out of bounds)"});
										  $$ = (Long) $1.value;
										}

//D:NT=PARM
integer:	INTEGER								{ if(((Long) $1.value).longValue() <= Integer.MAX_VALUE)
											$$ = Integer.valueOf (((Long) $1.value).intValue());
										  else {
											yyerror(ParseStr.S_SYNTAX_ERROR, new String[]{"VALID INTEGER (Integer out of bounds)"});
											$$ = PLUS_ONE;
										  }
										}
	|	NAN								{ yyerror(ParseStr.S_SYNTAX_ERROR, new String[]{"VALID INTEGER (Integer out of bounds)"});
										  $$ = PLUS_ONE;
										}

opt_integer:	integer								{ $$ = $1; }
		//D:DEFAULT
	|	NONE								{ $$ = null; }

//D:NT=PARM
signed_integer:	integer								{ $$ = $1; }
	|	'+' integer							{ $$ = $2; }
	|	'-' integer							{ $$ = Integer.valueOf(- $2.intValue()); }

opt_signed_integer:	signed_integer						{ $$ = $1; }
		//D:DEFAULT
	|	NONE								{ $$ = null; }

//D:NT=PARM
signed_float:	FLOAT								{ $$ = (Float) $1.value; }
	|	'+' FLOAT							{ $$ = (Float) $2.value; }
	|	'-' FLOAT							{ $$ = Float.valueOf(- ((Float) $2.value).floatValue()); }

//D:NT=PARM
number:		signed_float							{ $$ = $1; }
	|	signed_integer							{ $$ = $1; }

rvalue:		number								{ $$ = $1; }
	|	STRING								{ $$ = $1.textValue; }
	|	EXPR '(' STRING ')'						{ $$ = new WithItem(ParseStr.map($1.token), $3.textValue); }

//D:NT=PARM
testid:		integer								{ $$ = $1; }

//D:NT=PARM
filespec:	STRING								{ $$ = $1.textValue; }

//D:NT=PARM
expression:	STRING								{ $$ = $1.textValue; }

//D:NT=PARM
serverpath:	GLOBAL								{ $$ = new PathVector(); $<PathVector>$.addElement($1.value); }
	|	serverpath '.' stridentifier					{ $1.addElement($3); }

//D:NT=PARM
dispatchname:	stridentifier							{ $$ = $1; }

//D:NT=PARM
foldername:	stridentifier							{ $$ = $1; }

//D:NT=PARM
scopename:	stridentifier							{ $$ = $1; }

//D:NT=PARM
resourcename:	stridentifier							{ $$ = $1; }

//D:NT=PARM
folderpath:	SYSTEM								{ $$ = new PathVector(); $<PathVector>$.addElement($1.value); }
	|	folderpath '.' stridentifier					{ $1.addElement($3); }

//D:NT=PARM
schedulepath:	ROOT								{ $$ = new PathVector(); $<PathVector>$.addElement($1.value); }
	|	schedulepath '.' stridentifier					{ $1.addElement($3); }

//D:NT=PARM
resourcepath:	RESOURCE							{ $$ = new PathVector(); $<PathVector>$.addElement($1.value); }
	|	resourcepath '.' stridentifier					{ $1.addElement($3); }

jobdeflist:	folderpath							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	jobdeflist ',' folderpath					{ $1.addElement($3); }

//D:NT=PARM
parmlist:	parametername							{ $$ = new Vector(); $<Vector>$.addElement($1); }
	|	parmlist ',' parametername					{ $1.addElement($3); }

		//D:DEFAULT
enable:		ENABLE								{ $$ = Boolean.TRUE; }
	|	DISABLE								{ $$ = Boolean.FALSE; }

trace:		TRACE								{ $$ = Boolean.TRUE; }
	|	NOTRACE								{ $$ = Boolean.FALSE; }

opt_cascade:									{ $$ = Boolean.FALSE; }
	|	CASCADE								{ $$ = Boolean.TRUE; }

opt_force:									{ $$ = Boolean.FALSE; }
	|	FORCE								{ $$ = Boolean.TRUE; }

opt_suspended:									{ $$ = Boolean.FALSE; }
	|	SUSPEND								{ $$ = Boolean.TRUE; }

// opt_qa_with_clause:								{ $$ = null; }
// 	|	qa_with_clause							{ $$ = $1; }

opt_expand:									{ $$ = new HashSet(); }
	|	with expand							{ $$ = $2; }

expand:		EXPAND '=' '(' idlist ')'					{ $$ = $4; }
	|	EXPAND '=' ALL							{ $$ = null; }
	|	EXPAND '=' NONE							{ $$ = new HashSet(); }

idlist:		id								{ $$ = new HashSet(); $<HashSet>$.add($1); }
	|	idlist ',' id							{ $1.add($3); }

baseinterval:	MINUTE								{ $$ = ParseStr.I_MINUTE; }
	|	HOUR								{ $$ = ParseStr.I_HOUR; }
	|	DAY								{ $$ = ParseStr.I_DAY; }
	|	WEEK								{ $$ = ParseStr.I_WEEK; }
	|	MONTH								{ $$ = ParseStr.I_MONTH; }
	|	YEAR								{ $$ = ParseStr.I_YEAR; }

keywords:	ACTIVATE							{ $$ = (String) $1.value; }
	|	ACTIVE								{ $$ = (String) $1.value; }
	|	ACTION								{ $$ = (String) $1.value; }
	|	ADD								{ $$ = (String) $1.value; }
	|	AFTER								{ $$ = (String) $1.value; }
	|	ALTER								{ $$ = (String) $1.value; }
	|	AMOUNT								{ $$ = (String) $1.value; }
	|	AND								{ $$ = (String) $1.value; }
	|	APPROVAL							{ $$ = (String) $1.value; }
	|	APPROVE								{ $$ = (String) $1.value; }
	|	AT								{ $$ = (String) $1.value; }
	|	AUTHENTICATED							{ $$ = (String) $1.value; }
	|	AVG								{ $$ = (String) $1.value; }
	|	BACKUP								{ $$ = (String) $1.value; }
	|	BASE								{ $$ = (String) $1.value; }
	|	BATCH								{ $$ = (String) $1.value; }
	|	BEFORE								{ $$ = (String) $1.value; }
	|	BETWEEN								{ $$ = (String) $1.value; }
	|	BROKEN								{ $$ = (String) $1.value; }
	|	BY								{ $$ = (String) $1.value; }
	|	CALENDAR							{ $$ = (String) $1.value; }
	|	CANCEL								{ $$ = (String) $1.value; }
	|	CANCELLED							{ $$ = (String) $1.value; }
	|	CASCADE								{ $$ = (String) $1.value; }
	|	CHANGE								{ $$ = (String) $1.value; }
	|	CHANGE_STATUS							{ $$ = (String) $1.value; }
	|	CHECK								{ $$ = (String) $1.value; }
	|	CHILD								{ $$ = (String) $1.value; }
	|	CHILDREN							{ $$ = (String) $1.value; }
	|	CHILDSUSPEND							{ $$ = (String) $1.value; }
	|	CHILDTAG							{ $$ = (String) $1.value; }
	|	CLEAR								{ $$ = (String) $1.value; }
	|	CLONE								{ $$ = (String) $1.value; }
	|	COMMAND								{ $$ = (String) $1.value; }
	|	COMMENT								{ $$ = (String) $1.value; }
	|	CONDITION							{ $$ = (String) $1.value; }
	|	CONNECT								{ $$ = (String) $1.value; }
	|	CONSTANT							{ $$ = (String) $1.value; }
	|	CONTENT								{ $$ = (String) $1.value; }
	|	CONTINUE							{ $$ = (String) $1.value; }
	|	COPY								{ $$ = (String) $1.value; }
	|	COUNT								{ $$ = (String) $1.value; }
	|	CREATE								{ $$ = (String) $1.value; }
	|	CRITICAL							{ $$ = (String) $1.value; }
	|	CYCLE								{ $$ = (String) $1.value; }
	|	DAY								{ $$ = (String) $1.value; }
	|	DEFAULT								{ $$ = (String) $1.value; }
	|	DEFINITION							{ $$ = (String) $1.value; }
	|	DEFER								{ $$ = (String) $1.value; }
	|	DELAY								{ $$ = (String) $1.value; }
	|	DELETE								{ $$ = (String) $1.value; }
	|	DELTA								{ $$ = (String) $1.value; }
	|	DEPENDENCY							{ $$ = (String) $1.value; }
	|	DEREGISTER							{ $$ = (String) $1.value; }
	|	DIR								{ $$ = (String) $1.value; }
	|	DISABLE								{ $$ = (String) $1.value; }
	|	DISCONNECT							{ $$ = (String) $1.value; }
	|	DISPATCH							{ $$ = (String) $1.value; }
	|	DISTRIBUTION							{ $$ = (String) $1.value; }
	|	DROP								{ $$ = (String) $1.value; }
	|	DUMP								{ $$ = (String) $1.value; }
	|	DURATION							{ $$ = (String) $1.value; }
	|	DYNAMIC								{ $$ = (String) $1.value; }
	|	EDIT								{ $$ = (String) $1.value; }
	|	EMBEDDED							{ $$ = (String) $1.value; }
	|	ENABLE								{ $$ = (String) $1.value; }
	|	ENDTIME								{ $$ = (String) $1.value; }
	|	ENVIRONMENT							{ $$ = (String) $1.value; }
	|	ERRLOG								{ $$ = (String) $1.value; }
	|	ERROR_TOKEN							{ $$ = (String) $1.value; }
	|	EQUIVALENT							{ $$ = (String) $1.value; }
	|	EVENT								{ $$ = (String) $1.value; }
	|	EXECUTE								{ $$ = (String) $1.value; }
	|	EXPAND								{ $$ = (String) $1.value; }
	|	EXPIRED								{ $$ = (String) $1.value; }
	|	EXPR								{ $$ = (String) $1.value; }
	|	FACTOR								{ $$ = (String) $1.value; }
	|	FAILURE								{ $$ = (String) $1.value; }
	|	FATAL								{ $$ = (String) $1.value; }
	|	FILTER								{ $$ = (String) $1.value; }
	|	FINAL								{ $$ = (String) $1.value; }
	|	FINISH								{ $$ = (String) $1.value; }
	|	FINISHED							{ $$ = (String) $1.value; }
	|	FOLDER								{ $$ = (String) $1.value; }
	|	FOOTPRINT							{ $$ = (String) $1.value; }
	|	FOR								{ $$ = (String) $1.value; }
	|	FORCE								{ $$ = (String) $1.value; }
	|	FREE_AMOUNT							{ $$ = (String) $1.value; }
	|	FROM								{ $$ = (String) $1.value; }
	|	FUTURE								{ $$ = (String) $1.value; }
	|	GET								{ $$ = (String) $1.value; }
	|	GRANT								{ $$ = (String) $1.value; }
	|	GROUP								{ $$ = (String) $1.value; }
	|	HEADER								{ $$ = (String) $1.value; }
	|	HISTORY								{ $$ = (String) $1.value; }
	|	HORIZON								{ $$ = (String) $1.value; }
	|	HOUR								{ $$ = (String) $1.value; }
	|	IDENTIFIED							{ $$ = (String) $1.value; }
	|	IGNORE								{ $$ = (String) $1.value; }
	|	IMMEDIATE							{ $$ = (String) $1.value; }
	|	IMPORT								{ $$ = (String) $1.value; }
	|	IN								{ $$ = (String) $1.value; }
	|	INFO								{ $$ = (String) $1.value; }
	|	INACTIVE							{ $$ = (String) $1.value; }
	|	INFINITE							{ $$ = (String) $1.value; }
	|	INHERIT								{ $$ = (String) $1.value; }
	|	INSTANCE							{ $$ = (String) $1.value; }
	|	INTERVAL							{ $$ = (String) $1.value; }
	|	INVERSE								{ $$ = (String) $1.value; }
	|	IS								{ $$ = (String) $1.value; }
	|	ISX								{ $$ = (String) $1.value; }
	|	IX								{ $$ = (String) $1.value; }
	|	JOB								{ $$ = (String) $1.value; }
	|	JSON								{ $$ = (String) $1.value; }
	|	KILL								{ $$ = (String) $1.value; }
	|	KILLED								{ $$ = (String) $1.value; }
	|	LEADING								{ $$ = (String) $1.value; }
	|	LEVEL								{ $$ = (String) $1.value; }
	|	LIBERAL								{ $$ = (String) $1.value; }
	|	LIKE								{ $$ = (String) $1.value; }
	|	LIMIT								{ $$ = (String) $1.value; }
	|	LINE								{ $$ = (String) $1.value; }
	|	LINK								{ $$ = (String) $1.value; }
	|	LIST								{ $$ = (String) $1.value; }
	|	LOCAL								{ $$ = (String) $1.value; }
	|	LOCK								{ $$ = (String) $1.value; }
	|	LOCKMODE							{ $$ = (String) $1.value; }
	|	LOGFILE								{ $$ = (String) $1.value; }
	|	LOOPS								{ $$ = (String) $1.value; }
	|	MAIN								{ $$ = (String) $1.value; }
	|	MANAGE								{ $$ = (String) $1.value; }
	|	MANAGED								{ $$ = (String) $1.value; }
	|	MAP								{ $$ = (String) $1.value; }
	|	MAPS								{ $$ = (String) $1.value; }
	|	MAPPING								{ $$ = (String) $1.value; }
	|	MASTER								{ $$ = (String) $1.value; }
	|	MASTER_ID							{ $$ = (String) $1.value; }
	|	MAX								{ $$ = (String) $1.value; }
	|	MIN								{ $$ = (String) $1.value; }
	|	MERGE								{ $$ = (String) $1.value; }
	|	MERGED								{ $$ = (String) $1.value; }
	|	METHOD								{ $$ = (String) $1.value; }
	|	MILESTONE							{ $$ = (String) $1.value; }
	|	MINUTE								{ $$ = (String) $1.value; }
	|	MODE								{ $$ = (String) $1.value; }
	|	MONTH								{ $$ = (String) $1.value; }
	|	MOVE								{ $$ = (String) $1.value; }
	|	MULTIPLIER							{ $$ = (String) $1.value; }
	|	N								{ $$ = (String) $1.value; }
	|	NAME								{ $$ = (String) $1.value; }
	|	NICEVALUE							{ $$ = (String) $1.value; }
	|	NO								{ $$ = (String) $1.value; }
	|	NODE								{ $$ = (String) $1.value; }
	|	NOINVERSE							{ $$ = (String) $1.value; }
	|	NOMASTER							{ $$ = (String) $1.value; }
	|	NOMERGE								{ $$ = (String) $1.value; }
	|	NONFATAL							{ $$ = (String) $1.value; }
	|	NORESUME							{ $$ = (String) $1.value; }
	|	NOSUSPEND							{ $$ = (String) $1.value; }
	|	NOTRACE								{ $$ = (String) $1.value; }
	|	NOTRUNC								{ $$ = (String) $1.value; }
	|	NOWARN								{ $$ = (String) $1.value; }
	|	OBJECT								{ $$ = (String) $1.value; }
	|	OF								{ $$ = (String) $1.value; }
	|	OFFLINE								{ $$ = (String) $1.value; }
	|	ON								{ $$ = (String) $1.value; }
	|	ONLINE								{ $$ = (String) $1.value; }
	|	ONLY								{ $$ = (String) $1.value; }
	|	OR								{ $$ = (String) $1.value; }
	|	OWNER								{ $$ = (String) $1.value; }
	|	PARENT								{ $$ = (String) $1.value; }
	|	PARAMETERS							{ $$ = (String) $1.value; }
	|	PASSWORD							{ $$ = (String) $1.value; }
	|	PATH								{ $$ = (String) $1.value; }
	|	PENDING								{ $$ = (String) $1.value; }
	|	PERL								{ $$ = (String) $1.value; }
	|	PID								{ $$ = (String) $1.value; }
	|	PLAIN								{ $$ = (String) $1.value; }
	|	POOL								{ $$ = (String) $1.value; }
	|	PRIORITY							{ $$ = (String) $1.value; }
	|	PROFILE								{ $$ = (String) $1.value; }
	|	PROTOCOL							{ $$ = (String) $1.value; }
	|	PUBLIC								{ $$ = (String) $1.value; }
	|	PYTHON								{ $$ = (String) $1.value; }
	|	QUOTED								{ $$ = (String) $1.value; }
	|	RAWPASSWORD							{ $$ = (String) $1.value; }
	|	READ								{ $$ = (String) $1.value; }
	|	REASSURE							{ $$ = (String) $1.value; }
	|	RECREATE							{ $$ = (String) $1.value; }
	|	RECURSIVE							{ $$ = (String) $1.value; }
	|	REGISTER							{ $$ = (String) $1.value; }
	|	REJECT								{ $$ = (String) $1.value; }
	|	RENAME								{ $$ = (String) $1.value; }
	|	REQUEST								{ $$ = (String) $1.value; }
	|	REQUIRED							{ $$ = (String) $1.value; }
	|	REQUESTABLE_AMOUNT						{ $$ = (String) $1.value; }
	|	RERUN								{ $$ = (String) $1.value; }
	|	RESTARTABLE							{ $$ = (String) $1.value; }
	|	RESTRICT							{ $$ = (String) $1.value; }
	|	RESUME								{ $$ = (String) $1.value; }
	|	REVOKE								{ $$ = (String) $1.value; }
	|	REVIEW								{ $$ = (String) $1.value; }
	|	ROLLBACK							{ $$ = (String) $1.value; }
	|	RUN								{ $$ = (String) $1.value; }
	|	RUNNABLE							{ $$ = (String) $1.value; }
	|	RUNNING								{ $$ = (String) $1.value; }
	|	RUNTIME								{ $$ = (String) $1.value; }
	|	S								{ $$ = (String) $1.value; }
	|	SALT								{ $$ = (String) $1.value; }
	|	SC								{ $$ = (String) $1.value; }
	|	SCHEDULE							{ $$ = (String) $1.value; }
	|	SCOPE								{ $$ = (String) $1.value; }
	|	SELECTION							{ $$ = (String) $1.value; }
	|	SERIAL								{ $$ = (String) $1.value; }
	|	SERVER								{ $$ = (String) $1.value; }
	|	SESSION								{ $$ = (String) $1.value; }
	|	SET								{ $$ = (String) $1.value; }
	|	SHUTDOWN							{ $$ = (String) $1.value; }
	|	SHOW								{ $$ = (String) $1.value; }
	|	SINGLE								{ $$ = (String) $1.value; }
	|	SORT								{ $$ = (String) $1.value; }
	|	SQLSELECT							{ $$ = (String) $1.value; }
	|	SSL								{ $$ = (String) $1.value; }
	|	STARTED								{ $$ = (String) $1.value; }
	|	STARTING							{ $$ = (String) $1.value; }
	|	STARTTIME							{ $$ = (String) $1.value; }
	|	STATIC								{ $$ = (String) $1.value; }
	|	STATUS								{ $$ = (String) $1.value; }
	|	STOP								{ $$ = (String) $1.value; }
	|	STRICT								{ $$ = (String) $1.value; }
	|	SUBMIT								{ $$ = (String) $1.value; }
	|	SUBMITCOUNT							{ $$ = (String) $1.value; }
	|	SUBMITTAG							{ $$ = (String) $1.value; }
	|	SUBMITTED							{ $$ = (String) $1.value; }
	|	SUM								{ $$ = (String) $1.value; }
	|	SUSPEND								{ $$ = (String) $1.value; }
	|	SUSPENDED							{ $$ = (String) $1.value; }
	|	SX								{ $$ = (String) $1.value; }
	|	SYNCHRONIZING							{ $$ = (String) $1.value; }
	|	SYNCTIME							{ $$ = (String) $1.value; }
	|	TAG								{ $$ = (String) $1.value; }
	|	TERMINATED							{ $$ = (String) $1.value; }
	|	TEST								{ $$ = (String) $1.value; }
	|	TIME								{ $$ = (String) $1.value; }
	|	TIMEOUT								{ $$ = (String) $1.value; }
	|	TIMESTAMP							{ $$ = (String) $1.value; }
	|	TO								{ $$ = (String) $1.value; }
	|	TOKEN								{ $$ = (String) $1.value; }
	|	TOUCH								{ $$ = (String) $1.value; }
	|	TRACE								{ $$ = (String) $1.value; }
	|	TRANSLATION							{ $$ = (String) $1.value; }
	|	TREE								{ $$ = (String) $1.value; }
	|	TRIGGER								{ $$ = (String) $1.value; }
	|	TRUNC								{ $$ = (String) $1.value; }
	|	TYPE								{ $$ = (String) $1.value; }
	|	UPDATE								{ $$ = (String) $1.value; }
	|	UNREACHABLE							{ $$ = (String) $1.value; }
	|	UNRESOLVED							{ $$ = (String) $1.value; }
	|	USAGE								{ $$ = (String) $1.value; }
	|	USE								{ $$ = (String) $1.value; }
	|	USER								{ $$ = (String) $1.value; }
	|	VALUE								{ $$ = (String) $1.value; }
	|	VIEW								{ $$ = (String) $1.value; }
	|	WARN								{ $$ = (String) $1.value; }
	|	WARNING								{ $$ = (String) $1.value; }
	|	WATCH								{ $$ = (String) $1.value; }
	|	WATCHER								{ $$ = (String) $1.value; }
	|	WEEK								{ $$ = (String) $1.value; }
	|	WITH								{ $$ = (String) $1.value; }
	|	WORKDIR								{ $$ = (String) $1.value; }
	|	X								{ $$ = (String) $1.value; }
	|	XML								{ $$ = (String) $1.value; }
	|	YEAR								{ $$ = (String) $1.value; }
	|	ZONE								{ $$ = (String) $1.value; }
	|	ZERO								{ $$ = (String) $1.value; }

%%


protected boolean post(Node n)
	throws FatalException
{
	return true;
}

public ConnectionEnvironment getConnectionEnvironment() { return null; }

}

